###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    IETF-ENTITY-MIB.include.snmptrap.lookup 1.0
#    2003/06/14 Robert Cowart
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  IETF-ENTITY-MIB
#
###############################################################################
table PhysicalClass =
{
    ##########
    # An enumerated value which provides an indication of the general hardware
    # type of a particular physical entity. There are no restrictions as to the
    # number of entPhysicalEntries of each entPhysicalClass, which must be
    # instantiated by an agent.
    #
    # The enumeration 'other' is applicable if the physical entity class is
    # known, but does not match any of the supported values.
    #
    # The enumeration 'unknown' is applicable if the physical entity class is
    # unknown to the agent.
    #
    # The enumeration 'chassis' is applicable if the physical entity class is
    # an overall container for networking equipment. Any class of physical
    # entity except a stack may be contained within a chassis, and a chassis
    # may only be contained within a stack.
    #
    # The enumeration 'backplane' is applicable if the physical entity class is
    # some sort of device for aggregating and forwarding networking traffic,
    # such as a shared backplane in a modular ethernet switch. Note that an
    # agent may model a backplane as a single physical entity, which is
    # actually implemented as multiple discrete physical components (within a
    # chassis or stack).
    #
    # The enumeration 'container' is applicable if the physical entity class is
    # capable of containing one or more removable physical entities, possibly
    # of different types. For example, each (empty or full) slot in a chassis
    # will be modeled as a container. Note that all removable physical entities
    # should be modeled within a container entity, such as field-replaceable
    # modules, fans, or power supplies. Note that all known containers should
    # be modeled by the agent, including empty containers.
    #
    # The enumeration 'powerSupply' is applicable if the physical entity class
    # is a power-supplying component.
    #
    # The enumeration 'fan' is applicable if the physical entity class is a fan
    # or other heat-reduction component.
    #
    # The enumeration 'sensor' is applicable if the physical entity class is
    # some sort of sensor, such as a temperature sensor within a router
    # chassis.
    #
    # The enumeration 'module' is applicable if the physical entity class is
    # some sort of self-contained sub-system. If it is removable, then it
    # should be modeled within a container entity, otherwise it should be
    # modeled directly within another physical entity (e.g., a chassis or
    # another module).
    #
    # The enumeration 'port' is applicable if the physical entity class is some
    # sort of networking port, capable of receiving and/or transmitting
    # networking traffic.
    #
    # The enumeration 'stack' is applicable if the physical entity class is
    # some sort of super-container (possibly virtual), intended to group
    # together multiple chassis entities. A stack may be realized by a
    # 'virtual' cable, a real interconnect cable, attached to multiple chassis,
    # or may in fact be comprised of multiple interconnect cables. A stack
    # should not be modeled within any other physical entities, but a stack may
    # be contained within another stack. Only chassis entities should be
    # contained within a stack.
    ##########
    
    {"1","Other"}, ### other
    {"2","Unknown"}, ### unknown
    {"3","Chassis"}, ### chassis
    {"4","Backplane"}, ### backplane
    {"5","Container"}, ### container - e.g., chassis slot or daughter-card holder
    {"6","Power Supply"}, ### powerSupply
    {"7","Fan"}, ### fan
    {"8","Sensor"}, ### sensor
    {"9","Module"}, ### module - e.g., plug-in card or daughter-card
    {"10","Port"}, ### port
    {"11","Stack"} ### stack - e.g., stack of multiple chassis entities

}
default = "Unknown"

