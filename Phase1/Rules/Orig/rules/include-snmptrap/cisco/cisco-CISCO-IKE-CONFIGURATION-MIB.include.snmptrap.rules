###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    cisco-CISCO-IKE-CONFIGURATION-MIB.include.snmptrap.rules 1.0
#    2006/04/11 Swathi Yenugu
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  CISCO-IKE-CONFIGURATION-MIB
#
###############################################################################

case ".1.3.6.1.4.1.9.9.423": ### Cisco IKE Configuration - Notifications from CISCO-IKE-CONFIGURATION-MIB (20040916)

    log(DEBUG, "<<<<< Entering... cisco-CISCO-IKE-CONFIGURATION-MIB.include.snmptrap.rules >>>>>")

    @Agent = "Cisco-IKE Configuration"
    @Class = "40057"

    $OPTION_TypeFieldUsage = "3.6"

    switch($specific-trap)
    {
        case "1": ### ciscoIkeConfigOperStateChanged

            ##########
            # $1 = cicIkeEnabled 
            #      This object reflects the operational status of the 
            #      IKE (Internet Key Exchange Protocol).
            #      It can have following values
            #        true(1)  - Enabled
            #        false(2) - Disabled
            ##########

             $cicIkeEnabled = lookup($1, TruthValue) + " ( " + $1 + " )"

            $OS_EventId = "SNMPTRAP-cisco-CISCO-IKE-CONFIGURATION-MIB-ciscoIkeConfigOperStateChanged"
             
            @AlertGroup = "IKE Status"
            @AlertKey = ""
            switch($1)
            {
                case "1" : ### true 
                    $SEV_KEY = $OS_EventId + "_true"
                    @Summary = "Internet Key Exchange Enabled"
                
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2" : ### false 
                    $SEV_KEY = $OS_EventId + "_false"
                    @Summary = "Internet Key Exchange Disabled"
                
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default: ### unknown
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Internet Key Exchange Status Unknown"
                
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1

            details($cicIkeEnabled)

        case "2": ### ciscoIkeConfigPskAdded
        
        
            ##########
            # This notification is generated when a new preshared key
            # is added/configured
            # $1 = cicIkeCfgPskRemIdentType  
            # $2 = cicIkeCfgPskRemIdentity 
            ##########

            $cicIkeCfgPskRemIdentType = lookup($1, CIPsecPhase1PeerIdentityType) + " ( " + $1 + " )"
            $cicIkeCfgPskRemIdentity = $2  
            $cicIkeCfgIdentityDoi_Raw = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $cicIkeCfgPskIndex = extract($OID1, "\.([0-9]+)$")
            $cicIkeCfgIdentityDoi = lookup($cicIkeCfgIdentityDoi_Raw, CIKEIsakmpDoi)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-IKE-CONFIGURATION-MIB-ciscoIkeConfigPskAdded"
             
            @AlertGroup = "IKE Preshared Key Status"
            @AlertKey = "cicIkeCfgPskEntry." + $cicIkeCfgIdentityDoi_Raw + "." + $cicIkeCfgPskIndex
            @Summary = "IKE Preshared Key Added  ( Peer ID: " + $2 + " )"
                
            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap 

            $cicIkeCfgIdentityDoi = $cicIkeCfgIdentityDoi + " ( " + $cicIkeCfgIdentityDoi_Raw + " )"
            details($cicIkeCfgPskRemIdentType,$cicIkeCfgPskRemIdentity,$cicIkeCfgIdentityDoi,$cicIkeCfgPskIndex)

        case "3": ### ciscoIkeConfigPskDeleted

            ##########
            # This notification is generated when a new preshared key
            # is deleted
            # $1 = cicIkeCfgPskRemIdentType 
            # $2 = cicIkeCfgPskRemIdentity 
            ##########

            $cicIkeCfgPskRemIdentType = lookup($1, CIPsecPhase1PeerIdentityType) + " ( " + $1 + " )"
            $cicIkeCfgPskRemIdentity = $2  
            $cicIkeCfgIdentityDoi_Raw = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $cicIkeCfgPskIndex = extract($OID1, "\.([0-9]+)$")
            $cicIkeCfgIdentityDoi = lookup($cicIkeCfgIdentityDoi_Raw, CIKEIsakmpDoi)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-IKE-CONFIGURATION-MIB-ciscoIkeConfigPskDeleted"
             
            @AlertGroup = "IKE Preshared Key Status"
            @AlertKey = "cicIkeCfgPskEntry." + $cicIkeCfgIdentityDoi_Raw + "." + $cicIkeCfgPskIndex
            @Summary = "IKE Preshared Key Deleted  ( Peer ID: " + $2 + " )"
                
            $DEFAULT_Severity = 2
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap 
            
            $cicIkeCfgIdentityDoi = $cicIkeCfgIdentityDoi + " ( " + $cicIkeCfgIdentityDoi_Raw + " )"
            details($cicIkeCfgPskRemIdentType,$cicIkeCfgPskRemIdentity,$cicIkeCfgIdentityDoi,$cicIkeCfgPskIndex)

        case "4": ### ciscoIkeConfigPolicyAdded

            ##########
            # This notification is generated when a new ISAKMP 
            # (Internet Security Association and Key Exchange Protocol)
            # policy is configured/added on the managed device
            # $1 = cicIkeCfgPolicyEncr - Encryption transform
            # $2 = cicIkeCfgPolicyHash - Hash transform
            # $3 = cicIkeCfgPolicyAuth - Peer authentication method
            # $4 = cicIkeCfgPolicyDHGroup - Oakley group
            ##########

            $cicIkeCfgPolicyEncr = lookup($1, CIPsecEncryptAlgorithm) + " ( " + $1 + " )" 
            $cicIkeCfgPolicyHash = lookup($2, CIPsecIkeHashAlgorithm) + " ( " + $2 + " )"
            $cicIkeCfgPolicyAuth = lookup($3, CIPsecIkeAuthMethod) + " ( " + $3 + " )"
            $cicIkeCfgPolicyDHGroup = lookup($4, CIPsecDiffHellmanGrp) + " ( " + $4 + " )"
            $cicIkeCfgIdentityDoi_Raw = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $cicIkeCfgPolicyPriority = extract($OID1, "\.([0-9]+)$")
            $cicIkeCfgIdentityDoi = lookup($cicIkeCfgIdentityDoi_Raw, CIKEIsakmpDoi)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-IKE-CONFIGURATION-MIB-ciscoIkeConfigPolicyAdded"
             
            @AlertGroup = "IKE ISAKMP Policy Status"
            @AlertKey = "cicIkeCfgPolicyEntry." + $cicIkeCfgIdentityDoi_Raw + "." + $cicIkeCfgPolicyPriority
            @Summary = "IKE ISAKMP Policy Added  ( " + @AlertKey + " )"
                
            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap 

            $cicIkeCfgIdentityDoi = $cicIkeCfgIdentityDoi + " ( " + $cicIkeCfgIdentityDoi_Raw + " )"
            details($cicIkeCfgPolicyEncr,$cicIkeCfgPolicyHash,$cicIkeCfgPolicyAuth,$cicIkeCfgPolicyDHGroup,$cicIkeCfgIdentityDoi,$cicIkeCfgPolicyPriority)

        case "5": ### ciscoIkeConfigPolicyDeleted

            ##########
            # This notification is generated when a new ISAKMP 
            # (Internet Security Association and Key Exchange Protocol)
            # policy is deleted on the managed device
            # $1 = cicIkeCfgPolicyEncr - Encryption transform
            # $2 = cicIkeCfgPolicyHash - Hash transform
            # $3 = cicIkeCfgPolicyAuth - Peer authentication method
            # $4 = cicIkeCfgPolicyDHGroup - Oakley group
            ##########

            $cicIkeCfgPolicyEncr = lookup($1, CIPsecEncryptAlgorithm) + " ( " + $1 + " )" 
            $cicIkeCfgPolicyHash = lookup($2, CIPsecIkeHashAlgorithm) + " ( " + $2 + " )"
            $cicIkeCfgPolicyAuth = lookup($3, CIPsecIkeAuthMethod) + " ( " + $3 + " )"
            $cicIkeCfgPolicyDHGroup = lookup($4, CIPsecDiffHellmanGrp) + " ( " + $4 + " )"
            $cicIkeCfgIdentityDoi_Raw = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $cicIkeCfgPolicyPriority = extract($OID1, "\.([0-9]+)$")
            $cicIkeCfgIdentityDoi = lookup($cicIkeCfgIdentityDoi_Raw, CIKEIsakmpDoi)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-IKE-CONFIGURATION-MIB-ciscoIkeConfigPolicyDeleted"
             
            @AlertGroup = "IKE ISAKMP Policy Status"
            @AlertKey = "cicIkeCfgPolicyEntry." + $cicIkeCfgIdentityDoi_Raw + "." + $cicIkeCfgPolicyPriority
            @Summary = "IKE ISAKMP Policy Deleted  ( " + @AlertKey + " )"
                
            $DEFAULT_Severity = 2
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap 
            
            $cicIkeCfgIdentityDoi = $cicIkeCfgIdentityDoi + " ( " + $cicIkeCfgIdentityDoi_Raw + " )"
            details($cicIkeCfgPolicyEncr,$cicIkeCfgPolicyHash,$cicIkeCfgPolicyAuth,$cicIkeCfgPolicyDHGroup,$cicIkeCfgIdentityDoi,$cicIkeCfgPolicyPriority)

        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, cisco-CISCO-IKE-CONFIGURATION-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, cisco-CISCO-IKE-CONFIGURATION-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-IKE-CONFIGURATION-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-IKE-CONFIGURATION-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... cisco-CISCO-IKE-CONFIGURATION-MIB.include.snmptrap.rules >>>>>")
