##############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    cisco-CISCO-DSPU-MIB.include.snmptrap.rules 2.1 
#    2005/03/03 Robert Cowart
#
###############################################################################
###############################################################################
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  CISCO-DSPU-MIB
#
###############################################################################
#
# 2.1 - Simplified handling of "Severity via lookup" logic.
#
#     - Added basic debug logging.
#
# 2.0 - Rewritten for improved event presentation.  Includes enhancements which
#       comply with the Netcool Rules File Standards
#       (MUSE-STD-RF-02, July 2002)
#
#     - Modified to support following features introduced in NCiL 2.0:
#         - "Advanced" and "User" include files
#         - "Severity" lookup tables
#
# 1.0 - Based on rules extracted from cisco.include.snmptrap.rules 3.1.
#
###############################################################################

case ".1.3.6.1.4.1.9.9.24.1.4.4": ### Cisco DownStream Physical Unit (DSPU) support - Notifications from CISCO-DSPU-MIB

    log(DEBUG, "<<<<< Entering... cisco-CISCO-DSPU-MIB.include.snmptrap.rules >>>>>")

    @Agent = "Cisco-DSPU PU"
    @Class = "40057"
    
    $OPTION_TypeFieldUsage = "3.6"
    
    switch($specific-trap)
    {
        case "1": ### newdspuPuStateChangeTrap

            ##########
            # $1 = dspuPuOperName
            # $2 = dspuPuOperState
            ##########

            $dspuPuOperName = $1
            $dspuPuOperState = lookup($2, dspuPuOperState) + " ( " + $2 + " )"
            $dspuPuOperIndex = extract($OID1, "\.([0-9]+)$")
            details($dspuPuOperName,$dspuPuOperState,$dspuPuOperIndex)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-DSPU-MIB-newdspuPuStateChangeTrap"

            @AlertGroup = "Physical Unit Status"
            @AlertKey = "dspuPuOperEntry." + $dspuPuOperIndex
            switch($2)
            {
                case "1": ### active
                    @Summary = "DownStream Physical Unit Active"
                    
                    $SEV_KEY = $OS_EventId + "_active"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                    
                case "2": ### inactive
                    @Summary = "DownStream Physical Unit Inactive"
                    
                    $SEV_KEY = $OS_EventId + "_inactive"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                default:
                    @Summary = "DownStream Physical Unit Status Unknown"
                    
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
            }
            @Summary = @Summary + "  ( PU: " + $1 + " )"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

        case "2": ### newdspuPuActivationFailureTrap

            ##########
            # $1 = dspuPuOperName
            # $2 = dspuPuOperState
            # $3 = dspuPuStatsLastActivationFailureReason
            ##########

            $dspuPuOperName = $1
            $dspuPuOperState = lookup($2, dspuPuOperState) + " ( " + $2 + " )"
            $dspuPuStatsLastActivationFailureReason = lookup($3, dspuPuStatsLastActivationFailureReason)
            $dspuPuOperIndex = extract($OID1, "\.([0-9]+)$")
            
            $OS_EventId = "SNMPTRAP-cisco-CISCO-DSPU-MIB-newdspuPuActivationFailureTrap"

            @AlertGroup = "Physical Unit Status"
            @AlertKey = "dspuPuOperEntry." + $dspuPuOperIndex
            switch ($2)
            {
                case "1": ### active
                    @Summary = "DownStream Physical Unit Active, " + $dspuPuStatsLastActivationFailureReason
                    
                    $SEV_KEY = $OS_EventId + "_active"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                    
                case "2": ### inactive
                    @Summary = "DownStream Physical Unit Inactive, " + $dspuPuStatsLastActivationFailureReason
                    
                    $SEV_KEY = $OS_EventId + "_inactive"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                default:
                    @Summary = "DownStream Physical Status Unknown, " + $dspuPuStatsLastActivationFailureReason
                    
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
            }
            @Summary = @Summary + "  ( PU: " + $1 + " )"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3
            
            $dspuPuStatsLastActivationFailureReason = $dspuPuStatsLastActivationFailureReason + " ( " + $3 + " )"
            details($dspuPuOperName,$dspuPuOperState,$dspuPuStatsLastActivationFailureReason,$dspuPuOperIndex)
        
        default:
        
            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }
    
    ##########
    # Handle Severity via Lookup.
    ##########
    
    if(exists($SEV_KEY))
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, cisco-CISCO-DSPU-MIB_sev)
    }
    else
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, cisco-CISCO-DSPU-MIB_sev)
    }
    include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"
    
    ##########
    # End of Severity via Lookup.
    ##########

    ##########
    # Enter "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-DSPU-MIB_PU.adv.include.snmptrap.rules"
    include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-DSPU-MIB_PU.user.include.snmptrap.rules"
    
    ##########
    # End of "Advanced" and "User" includes.
    ##########
    
include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... cisco-CISCO-DSPU-MIB.include.snmptrap.rules >>>>>")

case ".1.3.6.1.4.1.9.9.24.1.5.3": ### Cisco DownStream Physical Unit (DSPU) support - Notifications from CISCO-DSPU-MIB

    log(DEBUG, "<<<<< Entering... cisco-CISCO-DSPU-MIB.include.snmptrap.rules >>>>>")

    @Agent = "Cisco-DSPU LU"
    @Class = "40057"
    
    $OPTION_TypeFieldUsage = "3.6"
    
    switch($specific-trap)
    {
        case "1": ### newdspuLuStateChangeTrap

            ##########
            # $1 = dspuPuOperName
            # $2 = dspuLuOperState 
            ##########

            $dspuPuOperName = $1
            $dspuLuOperState = lookup($2, dspuLuOperState) + " ( " + $2 + " )"
            $dspuPuOperIndex = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $dspuLuOperLuLocalAddress = extract($OID1, "\.([0-9]+)$")
            details($dspuPuOperName,$dspuLuOperState,$dspuPuOperIndex,$dspuLuOperLuLocalAddress)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-DSPU-MIB-newdspuLuStateChangeTrap"

            @AlertGroup = "Logical Unit Status"
            @AlertKey = "dspuLuOperEntry." + $dspuPuOperIndex + "." + $dspuLuOperLuLocalAddress
            switch($2)
            {
                case "1": ### active
                    @Summary = "DownStream Logical Unit Active"
                    
                    $SEV_KEY = $OS_EventId + "_active"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                    
                case "2": ### inactive
                    @Summary = "DownStream Logical Unit Inactive"
                    
                    $SEV_KEY = $OS_EventId + "_inactive"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                default:
                    @Summary = "DownStream Logical Unit Status Unknown"
                    
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
            }        
            @Summary = @Summary + "  ( PU: " + $1 + ", LU: " + @AlertKey + " )"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

        case "2": ### dspuLuActivationFailureTrap

            ##########
            # $1 = dspuPuOperName 
            # $2 = dspuLuOperState 
            # $3 = dspuLuOperLastActivationFailureReason
            ##########

            $dspuPuOperName = $1
            $dspuLuOperState = $2
            $dspuLuOperLastActivationFailureReason = lookup($3, dspuLuOperLastActivationFailureReason)
            $dspuPuOperIndex = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $dspuLuOperLuLocalAddress = extract($OID1, "\.([0-9]+)$")
            
            $OS_EventId = "SNMPTRAP-cisco-CISCO-DSPU-MIB-dspuLuActivationFailureTrap"

            @AlertGroup = "Logical Unit Status"
            @AlertKey = "dspuLuOperEntry." + $dspuPuOperIndex + "." + $dspuLuOperLuLocalAddress
            switch($2)
            {
                case "1": ### active
                    @Summary = "DownStream Logical Unit Active, " + $dspuLuOperLastActivationFailureReason
                    
                    $SEV_KEY = $OS_EventId + "_active"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                    
                case "2": ### inactive
                    @Summary = "DownStream Logical Unit Inactive, " + $dspuLuOperLastActivationFailureReason
                    
                    $SEV_KEY = $OS_EventId + "_inactive"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                default:
                    @Summary = "DownStream Logical Status Unknown, " + $dspuLuOperLastActivationFailureReason
                    
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
            }
            @Summary = @Summary + "  ( PU: " + $1 + ", LU: " + @AlertKey + " )"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3
            
            details($dspuPuOperName,$dspuLuOperState,$dspuLuOperLastActivationFailureReason,$dspuPuOperIndex,$dspuLuOperLuLocalAddress)
        
        default:
        
            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }
    
    ##########
    # Handle Severity via Lookup.
    ##########
    
    if(exists($SEV_KEY))
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, cisco-CISCO-DSPU-MIB_sev)
    }
    else
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, cisco-CISCO-DSPU-MIB_sev)
    }
    include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"
    
    ##########
    # End of Severity via Lookup.
    ##########

    ##########
    # Enter "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-DSPU-MIB_LU.adv.include.snmptrap.rules"
    include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-DSPU-MIB_LU.user.include.snmptrap.rules"
    
    ##########
    # End of "Advanced" and "User" includes.
    ##########
   
    include "$NC_RULES_HOME/include-common/load_include.rules"

    log(DEBUG, "<<<<< Leaving... cisco-CISCO-DSPU-MIB.include.snmptrap.rules >>>>>")

case ".1.3.6.1.4.1.9.9.24.1.6.2": ### Cisco DownStream Physical Unit (DSPU) support - Notifications from CISCO-DSPU-MIB

    log(DEBUG, "<<<<< Entering... cisco-CISCO-DSPU-MIB.include.snmptrap.rules >>>>>")

    @Agent = "Cisco-DSPU SAP"
    @Class = "40057"
    
    $OPTION_TypeFieldUsage = "3.6"
    
    switch($specific-trap)
    {
        case "1": ### dspuSapStateChangeTrap

            ##########
            # $1 = dspuSapDlcType 
            # $2 = dspuSapDlcUnit
            # $3 = dspuSapDlcPort
            # $4 = dspuSapAddress
            # $5 = dspuSapOperState 
            ##########

            $dspuSapDlcType = lookup($1, dspuSapDlcType)
            $dspuSapDlcUnit = $2
            $dspuSapDlcPort = $3
            $dspuSapAddress = $4
            $dspuSapOperState = lookup($5, dspuSapOperState) + " ( " + $5 + " )"

            $OS_EventId = "SNMPTRAP-cisco-CISCO-DSPU-MIB-dspuSapStateChangeTrap"

            @AlertGroup = "SAP Status"
            @AlertKey = "dspuSapEntry." + $1 + "." + $2 + "." + $3 + "." + $4
            switch($5)
            {
                case "1": ### sapClosed
                    @Summary = "SAP on " + $dspuSapDlcType + " DLC Closed"
                    
                    $SEV_KEY = $OS_EventId + "_sapClosed"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                case "2": ### sapOpening
                    @Summary = "SAP on " + $dspuSapDlcType + " DLC Opening"
                    
                    $SEV_KEY = $OS_EventId + "_sapOpening"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0
                    
                case "3": ### sapOpened
                    @Summary = "SAP on " + $dspuSapDlcType + " DLC Opened"
                    
                    $SEV_KEY = $OS_EventId + "_sapOpened"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                    
                case "4": ### sapClosing
                    @Summary = "SAP on " + $dspuSapDlcType + " DLC Closing"
                    
                    $SEV_KEY = $OS_EventId + "_sapClosing"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 11
                    $DEFAULT_ExpireTime = 0
                    
                default:
                    @Summary = "SAP Status on " + $dspuSapDlcType + " DLC Unknown"
                    
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
            }
            @Summary = @Summary + "  ( DLC Unit: " + $2 + ", DLC Port: " + $3 + ", SAP Address: " + $4 + " )"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $5
            
            $dspuSapDlcType = $dspuSapDlcType + " ( " + $1 + " )"
            details($dspuSapDlcType,$dspuSapDlcUnit,$dspuSapDlcPort,$dspuSapAddress,$dspuSapOperState)

        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }
    
    ##########
    # Handle Severity via Lookup.
    ##########
    
    if(exists($SEV_KEY))
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, cisco-CISCO-DSPU-MIB_sev)
    }
    else
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, cisco-CISCO-DSPU-MIB_sev)
    }
    include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"
    
    ##########
    # End of Severity via Lookup.
    ##########

    ##########
    # Enter "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-DSPU-MIB_SAP.adv.include.snmptrap.rules"
    include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-DSPU-MIB_SAP.user.include.snmptrap.rules"
    
    ##########
    # End of "Advanced" and "User" includes.
    ##########

    include "$NC_RULES_HOME/include-common/load_include.rules"
    
    log(DEBUG, "<<<<< Leaving... cisco-CISCO-DSPU-MIB.include.snmptrap.rules >>>>>")
