###############################################################################
#
#    Licensed Materials - Property of IBM
#    5724-O48
#
#    (C) Copyright IBM Corp. 2007
#    All Rights Reserved
#
#    US Government Users Restricted Rights - Use, duplication or
#    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
#    huawei-HUAWEI-RMON-EXT-MIB.include.snmptrap.rules 3.0
#    2007/05/07 Gerry van der Zanden
#
###############################################################################
#
# 3.0 - Updated release for NIM-03
#
#          -  Supports "Advanced" and "User" include files
#          -  Supports "Severity" lookup tables
#
###############################################################################
#
# 2.0 - Updated release
#
#          -  Repackage for NIM-02
#          -  HUAWEI-RMON-EXT-MIB release V2.0
#
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/OMNIbus 3.6 and 7.x
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#          -  HUAWEI-RMON-EXT-MIB release V2.0
#
###############################################################################

case ".1.3.6.1.4.1.2011.1.3.4": ### Huawei - Notifications from HUAWEI-RMON-EXT-MIB

    log(DEBUG, "<<<<< Entering... huawei-HUAWEI-RMON-EXT-MIB.include.snmptrap.rules >>>>>")

    @Agent = "Huawei AR- and S-Series"
    @Class = "40579"

    $OPTION_TypeFieldUsage = "3.6"

    switch($specific-trap)
    {
        case "1": ### pririsingAlarm

            ##########
            # The SNMP trap that is generated when an alarm entry crosses its
            # rising threshold and generates an event that is configured for
            # sending SNMP traps.
            #
            # $1 = prialarmIndex - An index that uniquely identifies an entry
            #        in the alarm table. Each such entry defines a diagnostic
            #        sample at a particular interval for an object on the device.
            # $2 = prialarmSympol - (no DESCRIPTION in HUAWEI-RMON-EXT-MIB)
            # $3 = prialarmSampleType - The method of sampling the selected
            #        variable and calculating the value to be compared against
            #        the thresholds.
            #        If the value of this object is absoluteValue(1), the value
            #        of the selected variable will be compared directly with the
            #        thresholds at the end of the sampling interval. If the value
            #        of this object is deltaValue(2), the value of the selected
            #        variable at the last sample will be subtracted from the
            #        current value, and the difference compared with the
            #        thresholds. This object may not be modified if the associated
            #        alarmStatus object is equal to valid(1).
            # $4 = prialarmValue - The value of the statistic during the last
            #        sampling period. For example, if the sample type is
            #        deltaValue, this value will be the difference between the
            #        samples at the beginning and end of the period. If the sample
            #        type is absoluteValue, this value will be the sampled value
            #        at the end of the period. This is the value that is compared
            #        with the rising and falling thresholds. The value during the
            #        current sampling period is not made available until the
            #        period is completed and will remain available until the next
            #        period completes.
            # $5 = prialarmRisingThreshold - A threshold for the sampled
            #        statistic. When the current sampled value is greater than or
            #        equal to this threshold, and the value at the last sampling
            #        interval was less than this threshold, a single event will be
            #        generated. A single event will also be generated if the first
            #        sample after this entry becomes valid is greater than or equal
            #        to this threshold and the associated alarmStartupAlarm is
            #        equal to risingAlarm(1) or risingOrFallingAlarm(3). After a
            #        rising event is generated, another such event will not be
            #        generated until the sampled value falls below this threshold
            #        and reaches the alarmFallingThreshold. This object may not be
            #        modified if the associated alarmStatus object is equal
            #        to valid(1).
            ##########

            $prialarmIndex = $1
            $prialarmSympol = $2
            $prialarmSampleType = lookup($3,prialarmSampleType) + " ( " + $3 + " )"
            $prialarmValue = $4
            $prialarmRisingThreshold = $5

            $OS_EventId = "SNMPTRAP-huawei-HUAWEI-RMON-EXT-MIB-pririsingAlarm"

            @AlertGroup = "RMON High Threshold"
            @AlertKey = "prialarmEntry." + $prialarmIndex
            @Summary = "RMON High Threshold exceeded: " + $prialarmSampleType + " of " + $2 + ", Actual: " + $4 + ", Threshold: " + $5 + "  ( " + @AlertKey + " )"
            update(@Summary)

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            $prialarmSampleType = $prialarmSampleType + " ( " + $2 + " )"
            details($prialarmIndex,$prialarmSympol,
                    $prialarmSampleType,$prialarmValue,
                    $prialarmRisingThreshold)

        case "2": ### prifallingAlarm

            ##########
            # The SNMP trap that is generated when an alarm entry crosses its
            # falling threshold and generates an event that is configured for
            # sending SNMP traps.
            #
            # $1 = prialarmIndex - An index that uniquely identifies an entry
            #        in the alarm table. Each such entry defines a diagnostic
            #        sample at a particular interval for an object on the device.
            # $2 = prialarmSympol - (no DESCRIPTION in HUAWEI-RMON-EXT-MIB)
            # $3 = prialarmSampleType - The method of sampling the selected
            #        variable and calculating the value to be compared against
            #        the thresholds.
            #        If the value of this object is absoluteValue(1), the value
            #        of the selected variable will be compared directly with the
            #        thresholds at the end of the sampling interval. If the value
            #        of this object is deltaValue(2), the value of the selected
            #        variable at the last sample will be subtracted from the
            #        current value, and the difference compared with the
            #        thresholds. This object may not be modified if the associated
            #        alarmStatus object is equal to valid(1).
            # $4 = prialarmValue - The value of the statistic during the last
            #        sampling period. For example, if the sample type is
            #        deltaValue, this value will be the difference between the
            #        samples at the beginning and end of the period. If the sample
            #        type is absoluteValue, this value will be the sampled value
            #        at the end of the period. This is the value that is compared
            #        with the rising and falling thresholds. The value during the
            #        current sampling period is not made available until the
            #        period is completed and will remain available until the next
            #        period completes.
            # $5 = prialarmFallingThreshold - A threshold for the sampled
            #        statistic. When the current sampled value is less than or
            #        equal to this threshold, and the value at the last sampling
            #        interval was greater than this threshold, a single event will
            #        be generated. A single event will also be generated if the
            #        first sample after this entry becomes valid is less than or
            #        equal to this threshold and the associated alarmStartupAlarm
            #        is equal to fallingAlarm(2) or risingOrFallingAlarm(3). After
            #        a falling event is generated, another such event will not be
            #        generated until the sampled value rises above this threshold
            #        and reaches the alarmRisingThreshold. This object may not be
            #        modified if the associated alarmStatus object is equal
            #        to valid(1).
            ##########

            $prialarmIndex = $1
            $prialarmSympol = $2
            $prialarmSampleType = lookup($3,prialarmSampleType) 
            $prialarmValue = $4
            $prialarmFallingThreshold = $5

            $OS_EventId = "SNMPTRAP-huawei-HUAWEI-RMON-EXT-MIB-prifallingAlarm"

            @AlertGroup = "RMON Low Threshold"
            @AlertKey = "prialarmEntry." + $prialarmIndex
            @Summary = "RMON Low Threshold exceeded: " + $prialarmSampleType + " of " + $2 + ", Actual: " + $4 + ", Threshold: " + $5 + "  ( " + @AlertKey + " )"
            update(@Summary)

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            $prialarmSampleType = $prialarmSampleType + " ( " + $3 + " )"
            details($prialarmIndex,$prialarmSympol,
                    $prialarmSampleType,$prialarmValue,
                    $prialarmFallingThreshold)

        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

#########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, huawei-HUAWEI-RMON-EXT-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, huawei-HUAWEI-RMON-EXT-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/huawei/huawei-HUAWEI-RMON-EXT-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/huawei/huawei-HUAWEI-RMON-EXT-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

log(DEBUG, "<<<<< Leaving... huawei-HUAWEI-RMON-EXT-MIB.include.snmptrap.rules >>>>>")
