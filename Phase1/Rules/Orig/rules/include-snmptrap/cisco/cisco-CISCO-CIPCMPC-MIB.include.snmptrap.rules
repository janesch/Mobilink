##############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    cisco-CISCO-CIPCMPC-MIB.include.snmptrap.rules 2.1 
#    2005/03/03 Robert Cowart
#
###############################################################################
###############################################################################
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  CISCO-CIPCMPC-MIB
#
###############################################################################
#
# 2.1 - Simplified handling of "Severity via lookup" logic.
#
#     - Added basic debug logging.
#
# 2.0 - Rewritten for improved event presentation.  Includes enhancements which
#       comply with the Netcool Rules File Standards
#       (MUSE-STD-RF-02, July 2002)
#
#     - Modified to support following features introduced in NCiL 2.0:
#         - "Advanced" and "User" include files
#         - "Severity" lookup tables
#
# 1.0 - Based on rules extracted from cisco.include.snmptrap.rules 3.1.
#
###############################################################################

case ".1.3.6.1.4.1.9.9.72.2": ### Cisco MultiPath Channel - Notifications from CISCO-CIPCMPC-MIB

    log(DEBUG, "<<<<< Entering... cisco-CISCO-CIPCMPC-MIB.include.snmptrap.rules >>>>>")

    @Agent = "Cisco-MultiPath Channel"
    @Class = "40057"
    
    $OPTION_TypeFieldUsage = "3.6"
    
    switch($specific-trap)
    {
        case "1": ### cipCmpcDirectionMismatch
            
            ##########
            # $1 = cipCmpcSubChannelAdminDirection 
            ##########
            
            $cipCmpcSubChannelAdminDirection = lookup($1, cipCmpcSubChannelAdminDirection)
            
            $OS_EventId = "SNMPTRAP-cisco-CISCO-CIPCMPC-MIB-cipCmpcDirectionMismatch"

            @AlertGroup = "CMPC Direction Mismatch"
            @AlertKey = "cipCmpcSubChannelAdminEntry." + extract($OID1, "\.([0-9]+\.[0-9]+\.[0-9]+)$") ### cipCardEntryIndex.cipCardDtrBrdIndex.cipCardSubChannelIndex
            @Summary = "CMPC Subchannel Configured Direction, " + $cipCmpcSubChannelAdminDirection + ", Mismatch  ( " + @AlertKey + " )"
            
            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1
            
            $cipCmpcSubChannelAdminDirection = $cipCmpcSubChannelAdminDirection + " ( " + $1 + " )"
            details($cipCmpcSubChannelAdminDirection)
        
        case "2": ### cipCmpcSeqNumError

            ##########
            # $1 = cipCmpcTgOperLastSeqNumFailureCause
            # $2 = cipCmpcTgOperExpectedReceiveSeqNum
            # $3 = cipCmpcTgOperLastSeqNumReceived
            ##########
            
            $cipCmpcTgOperLastSeqNumFailureCause = lookup($1, cipCmpcTgOperLastSeqNumFailureCause) + " ( " + $1 + " )"
            $cipCmpcTgOperExpectedReceiveSeqNum = $2
            $cipCmpcTgOperLastSeqNumReceived = $3
            $ifIndex = extract($OID1, "\.3\.6\.1\.4\.1\.9\.9\.72\.1\.2\.1\.1\.2\.([0-9]+)\..*$")
             
            $OctetString = extract($OID1, "\.3\.6\.1\.4\.1\.9\.9\.72\.1\.2\.1\.1\.2\.[0-9]+\.(.*)$")
            include "$NC_RULES_HOME/include-snmptrap/decodeOctetString.include.snmptrap.rules"
            $cipCmpcTgOperName = rtrim($String)
            
            details($cipCmpcTgOperLastSeqNumFailureCause,$cipCmpcTgOperExpectedReceiveSeqNum,$cipCmpcTgOperLastSeqNumReceived,$ifIndex,$cipCmpcTgOperName)

            $OS_EventId = "SNMPTRAP-cisco-CISCO-CIPCMPC-MIB-cipCmpcSeqNumError"

            @AlertGroup = "CMPC TG Sequence Number Status"
            @AlertKey = "cipCmpcTgOperEntry." + extract($OID1, "\.3\.6\.1\.4\.1\.9\.9\.72\.1\.2\.1\.1\.2\.(.*)$")
            switch($1)
            {
                case "1": ### none
                    @Summary = "CMPC TG MPC Sequence Number Error Cleared"
                    
                    $SEV_KEY = $OS_EventId + "_none"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                    
                case "2": ### blockSeqError
                    @Summary = "CMPC TG I/O Block MPC Sequence Number Error"
                    
                    $SEV_KEY = $OS_EventId + "_blockSeqError"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                case "3": ### sweepSeqError
                    @Summary = "CMPC TG Sweep Message MPC Sequence Number Error"
                    
                    $SEV_KEY = $OS_EventId + "_sweepSeqError"
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
                default:
                    @Summary = "CMPC TG MPC Sequence Number Status Unknown"
                    
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    
            }
            @Summary = @Summary + "  ( Transmission Group: " + $cipCmpcTgOperName + " )"
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1
        
        default:
        
            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, cisco-CISCO-CIPCMPC-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, cisco-CISCO-CIPCMPC-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-CIPCMPC-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-CIPCMPC-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... cisco-CISCO-CIPCMPC-MIB.include.snmptrap.rules >>>>>")
