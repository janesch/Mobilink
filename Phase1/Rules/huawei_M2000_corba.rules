########################################################################
#
#       Licensed Materials - Property of IBM
#       
#       5724-P16 
#       
#       (C) Copyright IBM Corp. 2006. All Rights Reserved
#       
#       US Government Users Restricted Rights - Use, duplication
#       or disclosure restricted by GSA ADP Schedule Contract
#       with IBM Corp.
#
#######################################################################
#Available tokens
#
#The following tokens come from the FilterableData name/value pairs:
#NV_NOTIFICATION_ID
#NV_EVENT_TIME
#NV_SYSTEM_DN
#NV_MANAGED_OBJECT_CLASS
#NV_MANAGED_OBJECT_INSTANCE
#NV_ALARM_ID
#NV_PROBABLE_CAUSE
#NV_PERCEIVED_SEVERITY
#NV_SPECIFIC_PROBLEMS
#NV_ADDITIONAL_TEXT
#NV_ACK_TIME
#NV_ACK_USER_ID
#NV_ACK_SYSTEM_ID
#NV_ACK_STATE
#NV_COMMENTS
#NV_BACKED_UP_STATUS (Not Suported by Huawei)
#NV_BACK_UP_OBJECT (Not Suported by Huawei)
#NV_THRESHOLD_INFO
#NV_TREND_INDICATION (Not Suported by Huawei)
#NV_STATE_CHANGE_DEFINITION
#NV_MONITORED_ATTRIBUTES
#NV_PROPOSED_REPAIR_ACTIONS
#NV_CORRELATED_NOTIFICATIONS (Not Suported by Huawei)
#NV_REASON
#CLEAR_USER_ID
#CLEAR_SYSTEM_ID
#NV_ALARM_LIST_ALIGNMENT_REQUIREMENT
#NV_SERVICE_USER
#NV_SERVICE_PROVIDER
#NV_SECURITY_ALARM_DETECTOR
#NV_VENDOR_SPECIFIC_ALARM_TYPE (Not Suported by Huawei)
#NV_ALARM_RAISED_TIME
#NV_ALARM_CLEARED_TIME
#NV_ALARM_CHANGED_TIME
#
#######################################################################
#
# This lookup will only work if the probe is run from $OMNIHOME/probes
# If the probe is run elsewhere this path will need to be customised.
include "../includes/Corba_3gpp_V630.lookup"
#
#######################################################################



@Class = 8891

if(match(@Manager,"ProbeWatch"))
{
#
# This section deals with internal probe events
#

	switch(@Summary)
	{
	case "Running ...":
		@Severity = 0
		@AlertGroup = "probestat"
		@Type = 2
		@Summary = @Agent + " probe on " + @Node + ": " + @Summary
		@AlertKey = @Agent
	case "Unable to get events":
		@Severity = 5
		@AlertGroup = "probestat"
		@AlertKey = @Agent
		@Summary = @Agent + " probe on " + @Node + ": " + @Summary
		@Type = 1
	case "Going Down ...":
		@Severity = 5
		@AlertGroup = "probestat"
		@Type = 1
		@Summary = @Agent + " probe on " + @Node + ": " + @Summary
		@AlertKey = @Agent
	case "START SYNCHRONIZATION":
		@Type = 1
		@Severity = 3
		@AlertGroup = "Resync"
		@AlertKey = "Resync"
		@Summary = @Agent + " probe on " + @Node + ":START SYNCHRONIZATION"
	case "END SYNCHRONIZATION":
		@Type = 2
		@Severity = 1
		@Summary = @Agent + " probe on " + @Node + ":END SYNCHRONIZATION"
		@AlertGroup = "Resync"
		@AlertKey = "Resync"
	default:
		@Severity = 1
	}
} 
else if(!match($domain_name,"EP IRP V1.2.0") && !match($domain_name,"CS IRP V1.2.0") && !match($domain_name,"KernelCM IRP V1.2.0"))
{
	log(DEBUG, "<<<<< Entering.... Huawei M2000 rules >>>>>")

	#@Manager = @Manager + " probe running on " + hostname()
	@Manager = "Huawei_M2000_CORBA@" + hostname()
	@EventId = $NV_ALARM_ID
	@Agent = $NV_SYSTEM_DN

#Extract Object details:
	if( exists( $NV_MANAGED_OBJECT_INSTANCE))
	{
		if (regmatch( $NV_MANAGED_OBJECT_INSTANCE, ".*SubNetwork.*"))
		{
			$UmtsRoot = extract($NV_MANAGED_OBJECT_INSTANCE,"^Root\=([A-Za-z0-9]+)\,SubNetwork.*")
		}
		
		if (regmatch( $NV_MANAGED_OBJECT_INSTANCE, ".*ManagedElement.*"))
		{
			$SubNetwork = extract($NV_MANAGED_OBJECT_INSTANCE,".*\,SubNetwork\=(.*)\,ManagedElement\=.*")
		}
		else
		{
			$SubNetwork = extract($NV_MANAGED_OBJECT_INSTANCE,".*\,SubNetwork\=.*\,SubNetwork\=(.*)")
		}
		
		if (regmatch( $NV_MANAGED_OBJECT_INSTANCE, ".*ManagedElement.*"))
		{
			$ManObj = extract($NV_MANAGED_OBJECT_INSTANCE,".*\,ManagedElement\=(.*)")
		}
	}

	if( exists( $NV_SYSTEM_DN))
	{	
		if( regmatch( $NV_SYSTEM_DN, ".*ManagementNode.*"))
		{
		     $ManNode = extract($NV_SYSTEM_DN,".*\,ManagementNode\=(.*)\,IRPAgent\=.*")
		}
	}
    
	if (exists ($neName))
	{
		@Node = $neName
	}
	else
	{
		@Node = "Unknown Host"
	}
  

#Reflect acknowledgement status:
	if( exists( $NV_ACK_STATE))
	{
		switch($NV_ACK_STATE)
		{
                	case "2":
                        	@Acknowledged = 0
                	case "1":
                        	@Acknowledged = 1
                	default:
               			@Acknowledged = 0         
		}
		update(@Acknowledged)
       	}
	@Type = 1


#Handling events through lookup table and setting AlertGroup and AlertKey:
	if (exists( $EVENT_TYPE) && !match($EVENT_TYPE,"notifyHeartbeat"))
	{
	 	$EVENT_TYPE = lookup($EVENT_TYPE,EventType_t)
	}
	if (exists( $EVENT_NAME) )
	{
		$EVENT_NAME = lookup($EVENT_NAME,EventName_t)
		@AlertGroup = $EVENT_NAME + $alarmName
	}	

	if( exists( $NV_PROBABLE_CAUSE))
	{
		$ProbCause = lookup($NV_PROBABLE_CAUSE, ProbableCause_t)
	}
        

	if(exists( $alarmLocation))
	{ 
		@AlertKey = $alarmLocation
	}
	else
	{
		@AlertKey = "Unknown alarm location"
	}


	if( exists( $NV_SYSTEM_DN))
	{
		$SysDn = $NV_SYSTEM_DN
	}
	if( exists( $NV_PERCEIVED_SEVERITY))
	{
		@Severity = lookup($NV_PERCEIVED_SEVERITY, PerceivedSeverity_t)
	}
	
	switch ($SubNetwork)
	{	
	        case "NW UTRAN":
	        
			if ( regmatch($ManObj, "EM RNC.*"))
	        	{
	                	@NodeAlias = extract ($ManObj, "^EM RNC(.*)")
			}	
		  	else if ( regmatch($ManObj, "EM BTS.*"))
			{
				@NodeAlias = extract ($ManObj, "^EM BTSEquipment(.*)")	
			}
	
	     	case "NW CN":
			if (match($ManObj, ""))
	     	        {
				@NodeAlias = "NW CN"
			}
			else
	     	        {
				@NodeAlias = extract ($ManObj, "^EM (.*)")
			}
	              
	        default:
	}

	#Build Summary:
	if( exists( $NV_SPECIFIC_PROBLEM ))
	{
		@Summary = @AlertKey + " " + $ProbCause + " " + $EVENT_NAME
	}

	
#convert integer enumerated types into text via lookup tables:
	if( exists( $NV_TREND_INDICATION))
	{
		$NV_TREND_INDICATION = lookup($NV_TREND_INDICATION, TrendIndicationType_t)
	}
	if( exists( $NV_THRESHOLD_INFO))
	{ 
		$NV_THRESHOLD_INFO = lookup($NV_THRESHOLD_INFO, ThresholdIndicationType_t)
	}
	if(exists( $NV_ACK_STATE))
	{ 
		$NV_ACK_STATE = lookup($NV_ACK_STATE, AckState_t)
	}     
        

#Use the NV_EVENT_TIME timestamp to set FirstOccurrence and LastOccurrence:
	if ( exists($NV_EVENT_TIME))
	{
		@FirstOccurrence = DateToTime($NV_EVENT_TIME,"%m/%d/%y%n%T%n%p")
		@LastOccurrence = DateToTime($NV_EVENT_TIME,"%m/%d/%y%n%T%n%p")
	}

#Handle additional event types:  
	switch($EVENT_TYPE)
	{
		case "notifyHeartbeat":
			@Summary = @AlertKey + " " + $ProbCause + " " + $EVENT_TYPE
			@NodeAlias = extract($NV_MANAGED_OBJECT_INSTANCE, "IRPAgent=(.*)") 
			@Severity = 1
			@Type = 13
			@ExpireTime = 1800	
						
		case "Alarm List Rebuilt":
			@Summary = @AlertKey + " " + $ProbCause + " " + $EVENT_TYPE 

		case "Comment Added":
			@Summary = @AlertKey + " " + $ProbCause + " " + $EVENT_TYPE + " " + $NV_COMMENTS
  		  
		case "Potential Faulty Alarm List":
			@Summary = @AlertKey + " " + $ProbCause + " " + $EVENT_TYPE 
			@Node = $domain_name 
		 
		default:
			if( exists($ManObj))
			{
				@NodeAlias = $ManObj
			}
	}

	switch(@Severity)
	{
		case "1":
			@Type = 2
		default:
			@Type = 1
	}
	
	@Identifier = $NV_ALARM_ID + " " + @Type + " " + @Agent + " " + @Manager
	
	
	##########
	# Enhancements to event-details
	##########

    #details($EVENT_NAME,$EVENT_TYPE,$FullSpecificProblem,$NV_ALARM_ID,$NV_NOTIFICATION_ID,$NV_MANAGED_OBJECT_INSTANCE,$NV_SYSTEM_DN,$VendorSpecificInfo,$NV_ACK_STATE)
	
	log(DEBUG, "<<<<< Leaving.... Huawei M2000 rules >>>>>")
}
else {
	discard
}

#Uncomment the following line if full alarm details are required:
#details($*)
