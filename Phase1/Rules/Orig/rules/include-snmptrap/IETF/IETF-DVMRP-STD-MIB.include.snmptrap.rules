###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    IETF-DVMRP-STD-MIB.include.snmptrap.rules 1.0
#    2006/10/30 Alka Girdhar
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  DVMRP-STD-MIB
#
###############################################################################

case ".1.3.6.1.4.1.1991.1.2.5.2.1.7": ### Management of DVMRP Routers - Notifications from DVMRP-STD-MIB (20011121)
  

    log(DEBUG, "<<<<< Entering... IETF-DVMRP-STD-MIB.include.snmptrap.rules >>>>>")

    @Agent = "IETF-DVMRP-STD-MIB"
    @Class = "40086"

    $OPTION_TypeFieldUsage = "3.6"

    switch($specific-trap)
    {
        case "1": ### dvmrpNeighborLoss

            ##########
            # $1 = dvmrpInterfaceLocalAddress
            # $2 = dvmrpNeighborState 
            ##########

            if(regmatch($1, "^[0-9]+$"))
            {
                $Integer = $1
                include "$NC_RULES_HOME/include-snmptrap/decodeInteger2Ip.include.snmptrap.rules"
                $1 = $IPv4addr
            }

            $dvmrpInterfaceLocalAddress = $1

            $dvmrpNeighborState = lookup($2, dvmrpNeighborState) + " ( " + $2 + " )"

            $dvmrpInterfaceIndex = extract ($OID1, "\.([0-9]+)$" )

            ####
            # Need to calculate the neighbour details too
            # Neighbor IP Address and Neighbor IfIndex 
            ####

            $dvmrpNeighborIfIndex = extract($OID2, "\.([0-9]+)\.[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$")
  
            $dvmrpNeighborAddress = extract($OID2, "\.([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)$")

            $OS_EventId = "SNMPTRAP-IETF-DVMRP-STD-MIB-dvmrpNeighborLoss"

            @AlertGroup = "DVMRP Neighboring Router Status"
            @AlertKey = "dvmrpInterfaceEntry." + $dvmrpInterfaceIndex
            switch($2)
            {
               case "1": ### oneway
                  $SEV_KEY = $OS_EventId + "_oneway"
                  @Summary = "DVMRP Neighbor Adjacency State Oneway" 

                  $DEFAULT_Severity = 3
                  $DEFAULT_Type = 1
                  $DEFAULT_ExpireTime = 0

               case "2": ### active
                  $SEV_KEY = $OS_EventId + "_active"
                  @Summary = "DVMRP Neighbor Adjacency State Active" 

                  $DEFAULT_Severity = 1
                  $DEFAULT_Type = 2
                  $DEFAULT_ExpireTime = 0

               case "3": ### ignoring
                  $SEV_KEY = $OS_EventId + "_ignoring"
                  @Summary = "DVMRP Neighbor Adjacency State Ignoring" 

                  $DEFAULT_Severity = 2
                  $DEFAULT_Type = 1
                  $DEFAULT_ExpireTime = 0

               case "4": ### down
                  $SEV_KEY = $OS_EventId + "_down"
                  @Summary = "DVMRP Neighbor Adjacency State Down" 

                  $DEFAULT_Severity = 4
                  $DEFAULT_Type = 1
                  $DEFAULT_ExpireTime = 0
               
               default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "DVMRP Neighbor Adjacency State Unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                }
             
            @Summary = @Summary + " for Address : " + $dvmrpInterfaceLocalAddress + " with particular neighbour IfIndex : " + $dvmrpNeighborIfIndex + " and Address : " + $dvmrpNeighborAddress

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " DvmrpNeighborEntry." + $dvmrpNeighborIfIndex + "." + $dvmrpNeighborAddress

            details($dvmrpInterfaceLocalAddress,$dvmrpNeighborState,$dvmrpInterfaceIndex,$dvmrpNeighborIfIndex,$dvmrpNeighborAddress)

        case "2": ### dvmrpNeighborNotPruning

            ##########
            # $1 = dvmrpInterfaceLocalAddress 
            # $2 = dvmrpNeighborCapabilities 
            ##########

            if(regmatch($1, "^[0-9]+$"))
            {
                $Integer = $1
                include "$NC_RULES_HOME/include-snmptrap/decodeInteger2Ip.include.snmptrap.rules"
                $1 = $IPv4addr
            }

            $dvmrpInterfaceLocalAddress = $1

            $dvmrpNeighborCapabilities = $2

            $dvmrpInterfaceIndex = extract ($OID1, "\.([0-9]+)$" )

            ####
            # Need to calculate the neighbour details too
            # Neighbor IP Address and Neighbor IfIndex 
            ####

            $dvmrpNeighborIfIndex = extract($OID2, "\.([0-9]+)\.[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$")
  
            $dvmrpNeighborAddress = extract($OID2, "\.([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)$")

            $OS_EventId = "SNMPTRAP-IETF-DVMRP-STD-MIB-dvmrpNeighborNotPruning"

            @AlertGroup = "DVMRP Neighbor Pruning Status"
            @AlertKey = "dvmrpInterfaceEntry." + $dvmrpInterfaceIndex
            @Summary = "Non-Pruning DVMRP Neighbor (IfIndex : " + $dvmrpNeighborIfIndex + " Address: " + $dvmrpNeighborAddress + " has been detected for Address " + $dvmrpInterfaceLocalAddress

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " DvmrpNeighborEntry." + $dvmrpNeighborIfIndex + "." + $dvmrpNeighborAddress

            details($dvmrpInterfaceLocalAddress,$dvmrpNeighborCapabilities,$dvmrpInterfaceIndex,$dvmrpNeighborIfIndex,$dvmrpNeighborAddress)

        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, IETF-DVMRP-STD-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, IETF-DVMRP-STD-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-DVMRP-STD-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-DVMRP-STD-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... IETF-DVMRP-STD-MIB.include.snmptrap.rules >>>>>")
