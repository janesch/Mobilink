###############################################################################
#
# Licensed Materials - Property of IBM
# Restricted Materials of IBM
#
# (C)Copyright IBM Corp. 2006 All Rights Reserved.
#
# rapidcity-RAPID-CITY.include.snmptrap.rules 1.3 
# 2006/11/08 Robert Cowart
#
###############################################################################
#
# 1.3 - modified to handle events with an enterprise of either
#       .1.3.6.1.4.1.2272.1.21 or .1.3.6.1.4.1.2272.1.
#
#     - Modified handling of rcnSaveConfigAction to recognize either
#       rcSysAction or rcSysActionL1 as the first variable binding.
#
#     - Corrected a logic bug in rcnbgpEstablished.
#
#     - Corrected @Identifier of rcnTlsUniIpServiceWatermarkTrap.
#
#     - Corrected improper AlertKey value in rcnExtCpLimitShutDownNormal.
#
#     - Improved display of varbinds containing MAC addresses by using _hex
#       tokens.
#
#     - Corrected AlertGroup in rcPlugOptModAux2StatusTrap.
#
# 1.2 - Added logic to handle additional specific traps.
#
# 1.1 - Added logic to handle specific traps 15-23, 25-40, 59, 60, and 62-64.
#
# 1.0 - Initial Release.  Complies with the Micromuse Rules File Standards
#       (MUSE-STD-RF-02, July 2002)
#
#     - Supports following features introduced in NCiL 2.0:
#         - "Advanced" and "User" include files
#         - "Severity" lookup tables
#
###############################################################################

case ".1.3.6.1.4.1.2272.1.21"|".1.3.6.1.4.1.2272.1": ### Nortel Ethernet Routing Switch 8600 (formerly Rapid City Accelar) - Notifications from RAPID-CITY (v330, 06/05/00)

    log(DEBUG, "<<<<< Entering... rapidcity-RAPID-CITY.include.snmptrap.rules >>>>>")

    @Agent = "Nortel-ERS8600"
    @Class = ""

    $OPTION_TypeFieldUsage = "3.6"

    switch($specific-trap)
    {
        case "1": ### rcCardDown

            ##########
            # A rcCardDown trap signifies that the rcCardOperStatus object for
            # one of its cards is about to transition into the down state.
            #
            # $1 = rcCardIndex - A unique value for each module within the
            #        chassis. This value is determined by the chassis slot
            #        number where the module is inserted. Valid entries are 1
            #        to the value of rcChasNumSlots
            # $2 = rcCardAdminStatus - Used to indicate the administrative
            #        status of this card
            # $3 = rcCardOperStatus - Used to indicate the operational status
            #        of this card.
            ##########

            $rcCardIndex = $1
            $rcCardAdminStatus = lookup($2, rcCardAdminStatus) + " ( " + $2 + " )"
            $rcCardOperStatus = lookup($3, rcCardOperStatus) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcCardDown"

            @AlertGroup = "Card Status"
            @AlertKey = "rcCardEntry." + $1
            switch($3)
            {
                case "1": ### up
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_up_up"
                            @Summary = "Card Up, Administratively Up"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_up_down"
                            @Summary = "Card Up, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_up_testing"
                            @Summary = "Card Up, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_up_unknown"
                            @Summary = "Card Up, Administratively Unknown"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                    }
                case "2": ### down
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_down_up"
                            @Summary = "Card Down, Administratively Up"

                            $DEFAULT_Severity = 4
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_down_down"
                            @Summary = "Card Down, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_down_testing"
                            @Summary = "Card Down, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_down_unknown"
                            @Summary = "Card Down, Administratively Unknown"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "3": ### testing
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_testing_up"
                            @Summary = "Card Testing, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_testing_down"
                            @Summary = "Card Testing, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_testing_testing"
                            @Summary = "Card Testing, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_testing_unknown"
                            @Summary = "Card Testing, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "4": ### unknown
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "5": ### dormant
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_dormant_up"
                            @Summary = "Card Dormant, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_dormant_down"
                            @Summary = "Card Dormant, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_dormant_testing"
                            @Summary = "Card Dormant, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_dormant_unknown"
                            @Summary = "Card Dormant, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                default:
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
            }
            @Summary = @Summary + "  ( Slot: " + $1 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3

            details($rcCardIndex,$rcCardAdminStatus,$rcCardOperStatus)

        case "2": ### rcCardUp

            ##########
            # A rcCardUp trap signifies that the rcCardOperStatus object for
            # one of its cards is about to transition into the up state.
            #
            # $1 = rcCardIndex - A unique value for each module within the
            #        chassis. This value is determined by the chassis slot
            #        number where the module is inserted. Valid entries are 1
            #        to the value of rcChasNumSlots
            # $2 = rcCardAdminStatus - Used to indicate the administrative
            #        status of this card
            # $3 = rcCardOperStatus - Used to indicate the operational status
            #        of this card.
            ##########

            $rcCardIndex = $1
            $rcCardAdminStatus = lookup($2, rcCardAdminStatus) + " ( " + $2 + " )"
            $rcCardOperStatus = lookup($3, rcCardOperStatus) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcCardUp"

            @AlertGroup = "Card Status"
            @AlertKey = "rcCardEntry." + $1
            switch($3)
            {
                case "1": ### up
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_up_up"
                            @Summary = "Card Up, Administratively Up"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_up_down"
                            @Summary = "Card Up, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_up_testing"
                            @Summary = "Card Up, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_up_unknown"
                            @Summary = "Card Up, Administratively Unknown"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                    }
                case "2": ### down
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_down_up"
                            @Summary = "Card Down, Administratively Up"

                            $DEFAULT_Severity = 4
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_down_down"
                            @Summary = "Card Down, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_down_testing"
                            @Summary = "Card Down, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_down_unknown"
                            @Summary = "Card Down, Administratively Unknown"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "3": ### testing
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_testing_up"
                            @Summary = "Card Testing, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_testing_down"
                            @Summary = "Card Testing, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_testing_testing"
                            @Summary = "Card Testing, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_testing_unknown"
                            @Summary = "Card Testing, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "4": ### unknown
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "5": ### dormant
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_dormant_up"
                            @Summary = "Card Dormant, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_dormant_down"
                            @Summary = "Card Dormant, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_dormant_testing"
                            @Summary = "Card Dormant, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_dormant_unknown"
                            @Summary = "Card Dormant, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                default:
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
            }
            @Summary = @Summary + "  ( Slot: " + $1 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3

            details($rcCardIndex,$rcCardAdminStatus,$rcCardOperStatus)

        case "3": ### rcErrorNotification

            ##########
            # A rcErrorNotification trap signifies that an error condition has
            # occured.
            #
            # $1 = rcErrorLevel - Error level indicator for the last error
            #        reported in the system. The meaning of this value are:
            #          0 = Informative Information
            #          1 = Warning Condition
            #          2 = Error Condition
            #          3 = Manufacturing Information
            #          4 = Fatal Condition 
            # $2 = rcErrorCode - Error code indicator for the last error
            #        reported in the system. This is an encoded value that
            #        identifies the software module that generated the error
            #        message as well as a specific error condition within that
            #        module. This value is transparent to the user. This value
            #        is intended to help Accelar support and development staff
            #        to isolate system problems.
            # $3 = rcErrorText - Error string of the last error reported in the
            #        system.
            ##########

            $rcErrorLevel = lookup($1, rcErrorLevel)
            $rcErrorCode = $2
            $rcErrorText = $3

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcErrorNotification"

            @AlertGroup = "Error Status"
            @AlertKey = ""
            @Summary = $3 + ", Error Code: " + $2

            switch($1)
            {
                case "0": ### Informative Information
                    $SEV_KEY = $OS_EventId + "_informativeInformation"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "1": ### Warning Condition
                    $SEV_KEY = $OS_EventId + "_warning"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### Error Condition
                    $SEV_KEY = $OS_EventId + "_error"
                    
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### Manufacturing Information
                    $SEV_KEY = $OS_EventId + "_manufacturingInformation"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "4": ### Fatal Condition
                    $SEV_KEY = $OS_EventId + "_fatal"
                    
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3

            details($rcErrorLevel,$rcErrorCode,$rcErrorText)

        case "4": ### rcStpNewRoot

            ##########
            # A rcStpNewRoot trap signifies that the Spanning Tree Protocol has
            # declared the device to be the new root of the spanning tree.
            #
            # $1 = rcStgId - An identifier used to identify a STG in the
            #        device.
            ##########

            $rcStgId = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcStpNewRoot"

            @AlertGroup = "Spanning Tree Root"
            @AlertKey = "rcStgEntry." + $1
            @Summary = "Spanning Tree Group is New Root of Spanning Tree  ( STG: " + $1 + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcStgId)

        case "5": ### rcStpTopologyChange

            ##########
            # A rcStpTopologyChange trap signifies that the Spanning Tree
            # Protocol has gone due a topology change event.
            #
            # $1 = rcStgId - An identifier used to identify a STG in the
            #        device.
            # $2 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcStgId = $1
            $rcPortIndex = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcStpTopologyChange"

            @AlertGroup = "STP Topology Change"
            @AlertKey = "rcStgEntry." + $1 + ", rcPortEntry." + $2
            @Summary = "Port Transitioned <Learn to Forward> or <Forward to Block>  ( STG: " + $1 + ", Port: " + $2 + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcStgId,$rcPortIndex)

        case "6": ### rcChasPowerSupplyDown

            ##########
            # A rcChasPowerSupplyDown trap signifies that the
            # rcChasPowerSupplyOperStatus object for one of its power supply
            # unit is about to transition into the down state.
            #
            # $1 = rcChasPowerSupplyId - Contains information regarding a power
            #        supply unit.
            # $2 = rcChasPowerSupplyOperStatus - Actual status of the power
            #        supply:
            #          unknown(1) - status can not be determined.
            #          empty(2) - power supply not installed.
            #          up(3) - present and supplying power.
            #          down(4) - present, but failure indicated.
            ##########

            $rcChasPowerSupplyId = $1
            $rcChasPowerSupplyOperStatus = lookup($2, rcChasPowerSupplyOperStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcChasPowerSupplyDown"

            @AlertGroup = "Power Supply Status"
            @AlertKey = "rcChasPowerSupplyEntry." + $1
            switch($2)
            {
                case "1": ### unknown
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Power Supply Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### empty
                    $SEV_KEY = $OS_EventId + "_empty"
                    @Summary = "Power Supply Empty"
                    
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "Power Supply Up"
                    
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "4": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "Power Supply Down"
                    
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Power Supply Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcChasPowerSupplyId,$rcChasPowerSupplyOperStatus)

        case "7": ### rcChasFanDown

            ##########
            # A rcChasFanDown trap signifies that the rcChasFanOperStatus
            # object for one of its power supply unit is about to transition
            # into the down state.
            #
            # $1 = rcChasFanId - Contains information regarding a power supply
            #        unit.
            # $2 = rcChasFanOperStatus - Actual status of the Fan:
            #        unknown(1) - status can not be determined.
            #        up(2) - present and supplying power.
            #        down(3) - present, but failure indicated.
            ##########

            $rcChasFanId = $1
            $rcChasFanOperStatus = lookup($2, rcChasFanOperStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcChasFanDown"

            @AlertGroup = "Fan Status"
            @AlertKey = "rcChasFanEntry." + $1
            switch($2)
            {
                case "1": ### unknown
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Fan Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "Fan Up"
                    
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "3": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "Fan Down"
                    
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Fan Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcChasFanId,$rcChasFanOperStatus)

        case "8": ### rcLinkOscillation

            ##########
            # A rcLinkOscillation trap signifies that an excessive number of
            # link state transitions on the specified port.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcPortIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcLinkOscillation"

            @AlertGroup = "Link Oscillation Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Excessive Link State Transitions  ( Port: " + $1 + " )"

            $DEFAULT_Severity = 4
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex)

        case "9": ### rcMacViolation

            ##########
            # A rcMacViolation trap signifies has received a PDU with an
            # invalid source MAC address.
            #
            # $1 = rcErrorText - Error string of the last error reported in the
            #        system.
            # $2 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcErrorText = $1
            $rcPortIndex = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcMacViolation"

            @AlertGroup = "Port MAC Violation"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port Received PDU with Invalid Source MAC Address, " + $1 + "  ( Port: " + $2 + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1

            details($rcErrorText,$rcPortIndex)

        case "10": ### rcSonetTrap

            ##########
            # A rcSonetTrap trap signifies that the SNMPv2 entity, acting in an
            # agent role, has detected a change of status on a Sonet port.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPosSonetTrapType - Used to indicate a particular type of
            #        Sonet trap.
            # $3 = rcPosSonetTrapIndication - Used to indicate an indication
            #        for a Sonet trap.
            ##########

            $rcPortIndex = $1
            $rcPosSonetTrapType = lookup($2, rcPosSonetTrapType) + " ( " + $2 + " )"
            $rcPosSonetTrapIndication = lookup($3, rcPosSonetTrapIndication) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSonetTrap"

            @AlertGroup = "SONET Port Status"
            @AlertKey = "rcPortEntry." + $1
            switch($3)
            {
                case "1": ### noDefect
                    $SEV_KEY = $OS_EventId + "_noDefect"
                    @Summary = "SONET Port OK"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### sectionLossOfSignal
                    $SEV_KEY = $OS_EventId + "_sectionLossOfSignal"
                    @Summary = "SONET Port Section Loss of Signal"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### sectionLossOfFrame
                    $SEV_KEY = $OS_EventId + "_sectionLossOfFrame"
                    @Summary = "SONET Port Section Loss of Frame"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lineAlarmIndication
                    $SEV_KEY = $OS_EventId + "_lineAlarmIndication"
                    @Summary = "SONET Port Line Alarm Indication"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lineRemoteDefectIndication
                    $SEV_KEY = $OS_EventId + "_lineRemoteDefectIndication"
                    @Summary = "SONET Port Line Remote Defect Indication"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "6": ### pathLossOfPointer
                    $SEV_KEY = $OS_EventId + "_pathLossOfPointer"
                    @Summary = "SONET Port Path Loss of Pointer"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "7": ### pathAlarmIndication
                    $SEV_KEY = $OS_EventId + "_pathAlarmIndication"
                    @Summary = "SONET Port Path Alarm Indication"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "8": ### pathRemoteDefectIndication
                    $SEV_KEY = $OS_EventId + "_pathRemoteDefectIndication"
                    @Summary = "SONET Port Path Remote Defect Indication"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "9": ### pathUnequipped
                    $SEV_KEY = $OS_EventId + "_pathUnequipped"
                    @Summary = "SONET Port Path Unequipped"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "10": ### pathSignalLabelMismatch
                    $SEV_KEY = $OS_EventId + "_pathSignalLabelMismatch"
                    @Summary = "SONET Port Path Signal Label Mismatch"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "11": ### pathTraceMismatch
                    $SEV_KEY = $OS_EventId + "_pathTraceMismatch"
                    @Summary = "SONET Port Path Trace Mismatch"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "SONET Port Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcPortIndex,$rcPosSonetTrapType,$rcPosSonetTrapIndication)

        case "11": ### rc2kCardDown

            ##########
            # A rcCardDown trap signifies that the rcCardOperStatus object for
            # one of its cards is about to transition into the down state.
            #
            # $1 = rc2kCardIndex - slot number.
            # $2 = rc2kCardFrontAdminStatus - Used to indicate the
            #        administrative status of this card.
            # $3 = rc2kCardFrontOperStatus - Used to indicate the operational
            #        status of this card.
            ##########

            $rc2kCardIndex = $1
            $rc2kCardFrontAdminStatus = lookup($2, rc2kCardFrontAdminStatus) + " ( " + $2 + " )"
            $rc2kCardFrontOperStatus = lookup($3, rc2kCardFrontOperStatus) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rc2kCardDown"

            @AlertGroup = "2K Card Status"
            @AlertKey = "rc2kCardEntry." + $1
            switch($3)
            {
                case "1": ### up
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_up_up"
                            @Summary = "2K Card Up, Administratively Up"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_up_down"
                            @Summary = "2K Card Up, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_up_testing"
                            @Summary = "2K Card Up, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_up_unknown"
                            @Summary = "2K Card Up, Administratively Unknown"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                    }
                case "2": ### down
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_down_up"
                            @Summary = "2K Card Down, Administratively Up"

                            $DEFAULT_Severity = 4
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_down_down"
                            @Summary = "2K Card Down, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_down_testing"
                            @Summary = "2K Card Down, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_down_unknown"
                            @Summary = "2K Card Down, Administratively Unknown"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "3": ### testing
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_testing_up"
                            @Summary = "2K Card Testing, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_testing_down"
                            @Summary = "2K Card Testing, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_testing_testing"
                            @Summary = "2K Card Testing, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_testing_unknown"
                            @Summary = "2K Card Testing, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "4": ### unknown
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "2K Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "2K Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "2K Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "2K Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "5": ### dormant
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_dormant_up"
                            @Summary = "2K Card Dormant, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_dormant_down"
                            @Summary = "2K Card Dormant, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_dormant_testing"
                            @Summary = "2K Card Dormant, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_dormant_unknown"
                            @Summary = "2K Card Dormant, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                default:
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "2K Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "2K Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "2K Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "2K Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
            }
            @Summary = @Summary + "  ( Slot: " + $1 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3

            details($rc2kCardIndex,$rc2kCardFrontAdminStatus,$rc2kCardFrontOperStatus)

        case "12": ### rc2kCardUp

            ##########
            # A rcCardUp trap signifies that the rcCardOperStatus object for
            # one of its cards is about to transition into the up state.
            #
            # $1 = rc2kCardIndex - slot number.
            # $2 = rc2kCardFrontAdminStatus - Used to indicate the
            #        administrative status of this card.
            # $3 = rc2kCardFrontOperStatus - Used to indicate the operational
            #        status of this card.
            ##########

            $rc2kCardIndex = $1
            $rc2kCardFrontAdminStatus = lookup($2, rc2kCardFrontAdminStatus) + " ( " + $2 + " )"
            $rc2kCardFrontOperStatus = lookup($3, rc2kCardFrontOperStatus) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rc2kCardUp"

            @AlertGroup = "2K Card Status"
            @AlertKey = "rc2kCardEntry." + $1
            switch($3)
            {
                case "1": ### up
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_up_up"
                            @Summary = "2K Card Up, Administratively Up"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_up_down"
                            @Summary = "2K Card Up, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_up_testing"
                            @Summary = "2K Card Up, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_up_unknown"
                            @Summary = "2K Card Up, Administratively Unknown"

                            $DEFAULT_Severity = 1
                            $DEFAULT_Type = 2
                            $DEFAULT_ExpireTime = 0
                    }
                case "2": ### down
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_down_up"
                            @Summary = "2K Card Down, Administratively Up"

                            $DEFAULT_Severity = 4
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_down_down"
                            @Summary = "2K Card Down, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_down_testing"
                            @Summary = "2K Card Down, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_down_unknown"
                            @Summary = "2K Card Down, Administratively Unknown"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "3": ### testing
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_testing_up"
                            @Summary = "2K Card Testing, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_testing_down"
                            @Summary = "2K Card Testing, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_testing_testing"
                            @Summary = "2K Card Testing, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_testing_unknown"
                            @Summary = "2K Card Testing, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "4": ### unknown
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "2K Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "2K Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "2K Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "2K Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "5": ### dormant
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_dormant_up"
                            @Summary = "2K Card Dormant, Administratively Up"

                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_dormant_down"
                            @Summary = "2K Card Dormant, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_dormant_testing"
                            @Summary = "2K Card Dormant, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_dormant_unknown"
                            @Summary = "2K Card Dormant, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                default:
                    switch($2)
                    {
                        case "1": ### up
                            $SEV_KEY = $OS_EventId + "_unknown_up"
                            @Summary = "2K Card Status Unknown, Administratively Up"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            $SEV_KEY = $OS_EventId + "_unknown_down"
                            @Summary = "2K Card Status Unknown, Administratively Down"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            $SEV_KEY = $OS_EventId + "_unknown_testing"
                            @Summary = "2K Card Status Unknown, Administratively Testing"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            $SEV_KEY = $OS_EventId + "_unknown_unknown"
                            @Summary = "2K Card Status Unknown, Administratively Unknown"

                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
            }
            @Summary = @Summary + "  ( Slot: " + $1 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3

            details($rc2kCardIndex,$rc2kCardFrontAdminStatus,$rc2kCardFrontOperStatus)

        case "13": ### rc2kTemperature

            ##########
            # A rc2kTemperature trap signifies that the chassis is
            # over-heating.
            #
            # $1 = rc2kChassisTemperature - Used to indicate the core operating
            #        temperature of the chassis. This value represents the
            #        degree in celsius of the air inside the chassis.
            ##########

            $rc2kChassisTemperature = $1 + "C"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rc2kTemperature"

            @AlertGroup = "Chassis Temperature Status"
            @AlertKey = ""
            @Summary = "Chassis Temperature Overheating, Currently " + $1

            $DEFAULT_Severity = 4
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rc2kChassisTemperature)
            
            update(@Summary)

        case "14": ### rcChasPowerSupplyUp

            ##########
            # A rcChasPowerSupplyUp trap signifies that the
            # rcChasPowerSupplyOperStatus object for one of its power supply
            # units is about to transition into the up state.
            #
            # $1 = rcChasPowerSupplyId - Contains information regarding a power
            #        supply unit.
            # $2 = rcChasPowerSupplyOperStatus - Actual status of the power
            #        supply:
            #          unknown(1) - status can not be determined.
            #          empty(2) - power supply not installed.
            #          up(3) - present and supplying power.
            #          down(4) - present, but failure indicated.
            ##########

            $rcChasPowerSupplyId = $1
            $rcChasPowerSupplyOperStatus = lookup($2, rcChasPowerSupplyOperStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcChasPowerSupplyUp"

            @AlertGroup = "Power Supply Status"
            @AlertKey = "rcChasPowerSupplyEntry." + $1
            switch($2)
            {
                case "1": ### unknown
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Power Supply Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### empty
                    $SEV_KEY = $OS_EventId + "_empty"
                    @Summary = "Power Supply Empty"
                    
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "Power Supply Up"
                    
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "4": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "Power Supply Down"
                    
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Power Supply Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcChasPowerSupplyId,$rcChasPowerSupplyOperStatus)

        case "15": ### rc2kAtmPvcLinkStateChange

            ##########
            # A rc2kAtmPvcLinkStateChange trap signifies that the SNMPv2
            # entity, acting in an agent role, has detected that the
            # rc2kAtmPvcOamVcStatus object for one of PVC is about to
            # transition into different state, either from up to down or from
            # down to up.
            #
            # $1 = rc2kAtmPvcIfIndex - Port number.
            # $2 = rc2kAtmPvcVpi - VPI of this PVC.
            # $3 = rc2kAtmPvcVci - VCI of this PVC.
            # $4 = rc2kAtmPvcOamVcStatus - Indicate the status of PVC link.
            ##########

            $rc2kAtmPvcIfIndex = $1
            $rc2kAtmPvcVpi = $2
            $rc2kAtmPvcVci = $3
            $rc2kAtmPvcOamVcStatus = lookup($4, rc2kAtmPvcOamVcStatus) + " ( " + $4 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rc2kAtmPvcLinkStateChange"

            @AlertGroup = "ATM PVC Link Status"
            @AlertKey = "rc2kAtmPvcEntry." + $1 + "." + $2 + "." + $3
            switch($4)
            {
                case "1": ### notManaged
                    $SEV_KEY = $OS_EventId + "_notManaged"
                    @Summary = "ATM PVC Link Not Managed"
    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### downVerify
                    $SEV_KEY = $OS_EventId + "_downVerify"
                    @Summary = "ATM PVC Link "
    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "ATM PVC Link "
    
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### upVerify
                    $SEV_KEY = $OS_EventId + "_upVerify"
                    @Summary = "ATM PVC Link "
    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "ATM PVC Link Up"
    
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "ATM PVC Link Status Unknown"
    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( Port: " + $1 + ", VPI: " + $2 + ", VCI: " + $3 + " )"
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $4

            details($rc2kAtmPvcIfIndex,$rc2kAtmPvcVpi,$rc2kAtmPvcVci,$rc2kAtmPvcOamVcStatus)

        case "16": ### rcStpTCN

            ##########
            # A rcStpTopologyChange trap signifies that the SNMPv2 entity,
            # acting in an agent role, has detected the Spanning Tree Protocol
            # has gone due a topology change event.
            #
            # $1 = rcStgId - An identifier used to identify a STG in the
            #        device.
            # $2 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $3 = rcStgBridgeAddress - The MAC address used by this bridge
            #        when it must be referred to in a unique fashion. It is
            #        recommended that this be the numerically smallest MAC
            #        address of all ports that belong to this bridge. However
            #        it is only required to be unique. When concatenated with
            #        rcStgPriority a unique BridgeIdentifier is formed which is
            #        used in the Spanning Tree Protocol.
            #        REFERENCE: IEEE 802.1D-1990: Sections 6.4.1.1.3 and 3.12.5
            ##########

            $rcStgId = $1
            $rcPortIndex = $2
            $rcStgBridgeAddress = $3_hex

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcStpTCN"

            @AlertGroup = "STP Topology Change"
            @AlertKey = "STG: " + $1 + ", Port: " + $2 + ", Bridge: " + $3_hex
            @Summary = "STP Topology Change  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcStgId,$rcPortIndex,$rcStgBridgeAddress)

        case "17": ### rcSmltIstLinkUp

            ##########
            # A rcSmltIstLinkUp trap signifies that the split MLT link is from
            # down to up.
            ##########

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSmltIstLinkUp"

            @AlertGroup = "Split MLT IST Link Status"
            @AlertKey = ""
            @Summary = "Split Multi-Link Trunk IST Link Up"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        case "18": ### rcSmltIstLinkDown

            ##########
            # A rcSmltIstLinkDown trap signifies that the split MLT link is
            # from up to down.
            ##########

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSmltIstLinkDown"

            @AlertGroup = "Split MLT IST Link Status"
            @AlertKey = ""
            @Summary = "Split Multi-Link Trunk IST Link Down"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        case "19": ### rcSmltLinkUp

            ##########
            # A rcSmltLinkUp trap signifies that the split SMLT link is up.
            #
            # $1 = rcMltSmltId - Split MLT id.
            ##########

            $rcMltSmltId = $1
            $rcMltId = extract($OID1, "\.([0-9]+)$")

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSmltLinkUp"

            @AlertGroup = "Split MLT Link Status"
            @AlertKey = "rcMltEntry." + $rcMltId
            @Summary = "Split Multi-Link Trunk Link Up  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcMltSmltId,$rcMltId)

        case "20": ### rcSmltLinkDown

            ##########
            # A rcMltSmltId trap signifies that the split SMLT link is down.
            #
            # $1 = rcMltSmltId - Split MLT id.
            ##########

            $rcMltSmltId = $1
            $rcMltId = extract($OID1, "\.([0-9]+)$")

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSmltLinkDown"

            @AlertGroup = "Split MLT Link Status"
            @AlertKey = "rcMltEntry." + $rcMltId
            @Summary = "Split Multi-Link Trunk Link Down  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcMltSmltId,$rcMltId)

        case "21": ### rcChasFanUp

            ##########
            # A rcChasFanUp trap signifies that the SNMPv2 entity, acting in an
            # agent role, has detected that the rcChasFanOperStatus object for
            # one of its power supply unit is about to transition into the up
            # state.
            #
            # $1 = rcChasFanId - The chassis fan Id.
            # $2 = rcChasFanOperStatus - Actual status of the Fan:
            #        unknown(1) - status can not be determined.
            #        up(2) - present and supplying power.
            #        down(3) - present, but failure indicated.
            ##########

            $rcChasFanId = $1
            $rcChasFanOperStatus = lookup($2, rcChasFanOperStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcChasFanUp"

            @AlertGroup = "Fan Status"
            @AlertKey = "rcChasFanEntry." + $1
            switch($2)
            {
                case "1": ### unknown
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Fan Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "Fan Up"
                    
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "3": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "Fan Down"
                    
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Fan Status Unknown"
                    
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcChasFanId,$rcChasFanOperStatus)

        case "22": ### rcPasswordChange

            ##########
            # A rcPasswordChange trap signifies that the SNMPv2 entity, acting
            # in an agent role, has detected that the one of the cli password
            # is changed.
            #
            # $1 = rcCliPasswordChange - Used to indication which password is
            #        changed when sending a rcCliPasswordChange trap.
            # $2 = rcCliPassChangeResult - Used to indication the result of
            #        changing password when sending a rcPasswordChange trap.
            ##########

            $rcCliPasswordChange = lookup($1, rcCliPasswordChange)
            $rcCliPassChangeResult = lookup($2, rcCliPassChangeResult) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPasswordChange"

            @AlertGroup = $rcCliPasswordChange + " Password Change"
            @AlertKey = ""
            switch($2)
            {
                case "1": ### success
                    $SEV_KEY = $OS_EventId + "_success"
                    @Summary = $rcCliPasswordChange + " Password Change Successful"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### fail
                    $SEV_KEY = $OS_EventId + "_fail"
                    @Summary = $rcCliPasswordChange + " Password Change Failed"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = $rcCliPasswordChange + " Password Change Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            $rcCliPasswordChange = $rcCliPasswordChange + " ( " + $1 + " )"
            details($rcCliPasswordChange,$rcCliPassChangeResult)

        case "23": ### rcEmError

            ##########
            # A rcEmError trap signifies that the SNMPv2 entity, acting in an
            # agent role, has detected Em error.
            #
            # $1 = rc2kCardIndex - Slot number.
            # $2 = rcChasEmModeError - Used to indicate the Em-mode error
            #        status.
            ##########

            $rc2kCardIndex = $1
            $rcChasEmModeError = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcEmError"

            @AlertGroup = "EM Status"
            @AlertKey = "rc2kCardEntry." + $1
            switch($2)
            {
                case "1": ### none
                    $SEV_KEY = $OS_EventId + "_none"
                    @Summary = "No EM Errors"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### non128KCardOffLine
                    $SEV_KEY = $OS_EventId + "_non128KCardOffLine"
                    @Summary = "Non-128K Card Offline"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### checkSlaveConfigNResetForEmMMode
                    $SEV_KEY = $OS_EventId + "_checkSlaveConfigNResetForEmMMode"
                    @Summary = "Check Slave Configuration N Reset For EM M Mode"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### mismatchResetForEmMode
                    $SEV_KEY = $OS_EventId + "_mismatchResetForEmMode"
                    @Summary = "Mismatch Reset For EM Mode"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### mismatchEmModeMasterSlave
                    $SEV_KEY = $OS_EventId + "_mismatchEmModeMasterSlave"
                    @Summary = "Mismatch EM Mode Master Slave"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "6": ### incompatMasterResetForEmMode
                    $SEV_KEY = $OS_EventId + "_incompatMasterResetForEmMode"
                    @Summary = "Incompatible Master Reset For EM Mode"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "7": ### putSlaveOffEmImcompat
                    $SEV_KEY = $OS_EventId + "_putSlaveOffEmImcompat"
                    @Summary = "Put Slave Off EM Imcompatible"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "8": ### slave8690EmIncompatGoingOffline
                    $SEV_KEY = $OS_EventId + "_slave8690EmIncompatGoingOffline"
                    @Summary = "Slave 8690 EM Incompatible Going Offline"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "9": ### cpu8690DisableEm
                    $SEV_KEY = $OS_EventId + "_cpu8690DisableEm"
                    @Summary = "CPU 8690 Disable EM"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "EM Error Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rc2kCardIndex,$rcChasEmModeError)

#        case "24": ### rcVpnTrap
#        
#            ##########
#            # L2Vpn will send trap when the Lsp goes down, which would affect
#            # the operational status of the Vpn (given by the VpnId). The Cause
#            # will indicate the reason for sending the trap. It can either LSP
#            # down/failure or to the bandwidth requirements cannot be
#            # fulfilled. Severity Level can be Warning/Error/Fatal.
#            # 
#            # $1 = rcVpnVpnId - 
#            # $2 = rcErrorText - 
#            # $3 = rcVpnTunnelLspId - 
#            # $4 = rcIpMplsGlobalRouterId - 
#            # $5 = rcVpnRemotePeerId - 
#            # $6 = rcSyslogHostSeverity - 
#            ##########
#            
#            $rcVpnVpnId = $1
#            $rcErrorText = $2
#            $rcVpnTunnelLspId = $3
#            $rcIpMplsGlobalRouterId = $4
#            $rcVpnRemotePeerId = $5
#            $rcSyslogHostSeverity = $6
#
#            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcEmError"
#            
#            @AlertGroup = ""
#            @AlertKey = ""
#            @Summary = ""
#
#            $DEFAULT_Severity = 
#            $DEFAULT_Type = 
#            $DEFAULT_ExpireTime = 
#
#            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap
#
#            details($rcVpnVpnId,$rcErrorText,$rcVpnTunnelLspId,$rcIpMplsGlobalRouterId,$rcVpnRemotePeerId,$rcSyslogHostSeverity)

        case "25": ### rcPcmciaCardRemoved

            ##########
            # A rcPcmciaRemoved trap signifies that the SNMPv2 entity, acting
            # in an agent role, has detected that the PCMCIA card is being
            # removed.
            ##########

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPcmciaCardRemoved"

            @AlertGroup = "PCMCIA Card Status"
            @AlertKey = ""
            @Summary = "PCMCIA Card Removed"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        case "26": ### rcSmartCpldTimerFired

            ##########
            # A rcSmartCpldTimerFired trap signifies that the cpld timer fired.
            #
            # $1 = rc2kCardIndex - Slot number.
            ##########

            $rc2kCardIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSmartCpldTimerFired"

            @AlertGroup = "CPLD Timer Status"
            @AlertKey = "rc2kCardEntry." + $1
            @Summary = "CPLD Timer Fired  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rc2kCardIndex)

        case "27": ### rcCardCpldNotUpDate

            ##########
            # A rcCardCpldNotUpDate trap signifies that the cpld is not up to
            # date.
            #
            # $1 = rc2kCardIndex - Slot number.
            ##########

            $rc2kCardIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcCardCpldNotUpDate"

            @AlertGroup = "CPLD Status"
            @AlertKey = "rc2kCardEntry." + $1
            @Summary = "CPLD Not Up to Date"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rc2kCardIndex)

        case "28": ### rcIgapLogFileFull

            ##########
            # A rcIgapLogFileFull trap signifies that the Igap accounting
            # time-out Log File reach the maximum.
            ##########

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcIgapLogFileFull"

            @AlertGroup = "Igap Accounting Log File Status"
            @AlertKey = ""
            @Summary = "Igap Accounting Time-out Log File Full"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        case "29": ### rcCpLimitShutDown

            ##########
            # A rcCpLimitShutDown trap signifies that the cp limit for the port
            # is shutting down.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = ifAdminStatus - The desired state of the interface. The
            #        testing(3) state indicates that no operational packets can
            #        be passed.
            # $3 = ifOperStatus - The current operational state of the
            #        interface. The testing(3) state indicates that no
            #        operational packets can be passed.
            # $4 = rcPortCpLimitShutDown - A TRUE value indicates if CP Limit
            #        shut down the interface.
            ##########

            $rcPortIndex = $1
            $ifAdminStatus = lookup($2, ifAdminStatus) + " ( " + $2 + " )"
            $ifOperStatus = lookup($3, ifOperStatus) + " ( " + $3 + " )"
            $rcPortCpLimitShutDown = lookup($4, TruthValue) + " ( " + $4 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcCpLimitShutDown"

            @AlertGroup = "Port CP Limit Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port CP Limit Shutdown  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex,$ifAdminStatus,$ifOperStatus,$rcPortCpLimitShutDown)

        case "30": ### rcSshServerEnabled

            ##########
            # A rcSshServerEnabled trap signifies that the SSH server is
            # enabled.
            #
            # $1 = rcSshGlobalPort - SSH connection port.
            ##########

            $rcSshGlobalPort = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSshServerEnabled"

            @AlertGroup = "SSH Server Status"
            @AlertKey = "SSH Port: " + $1
            @Summary = "SSH Server Enabled  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSshGlobalPort)

        case "31": ### rcSshServerDisabled

            ##########
            # A rcSshServerDisabled trap signifies that the SSH server is
            # disabled.
            #
            # $1 = rcSshGlobalPort - SSH connection port.
            ##########

            $rcSshGlobalPort = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSshServerDisabled"

            @AlertGroup = "SSH Server Status"
            @AlertKey = "SSH Port: " + $1
            @Summary = "SSH Server Disabled  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSshGlobalPort)

        case "32": ### rcSshSessionLogin

            ##########
            # A rcSshSessionLogin trap signifies that there is a SSH session
            # login.
            #
            # $1 = rcSshGlobalHostIpAddr - Current remote IP address.
            ##########

            $rcSshGlobalHostIpAddr = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSshSessionLogin"

            @AlertGroup = "SSH Session Status"
            @AlertKey = "Remote Host: " + $1
            @Summary = "SSH Session Login  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 12
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSshGlobalHostIpAddr)

        case "33": ### rcSshSessionLogout

            ##########
            # A rcSshSessionLogout trap signifies that there is a SSH session
            # logout.
            #
            # $1 = rcSshGlobalHostIpAddr - Current remote IP address.
            ##########

            $rcSshGlobalHostIpAddr = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSshSessionLogout"

            @AlertGroup = "SSH Session Status"
            @AlertKey = "Remote Host: " + $1
            @Summary = "SSH Session Logout  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSshGlobalHostIpAddr)

        case "34": ### rcSshUnauthorizedAccess

            ##########
            # A rcSshUnauthorizedAccess trap signifies that an unauthorized
            # access has occured.
            #
            # $1 = rcSshGlobalHostIpAddr - Current remote IP address.
            ##########

            $rcSshGlobalHostIpAddr = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSshUnauthorizedAccess"

            @AlertGroup = "SSH Session Status"
            @AlertKey = "Remote Host: " + $1
            @Summary = "SSH Unauthorized Access  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSshGlobalHostIpAddr)

        case "35": ### rcHaCpuState

            ##########
            # A rcHaCpuState trap signifies that the state of the HA-CPU.
            #
            # $1 = rc2kCardIndex - Slot number.
            # $2 = rcL2RedundancyHaCpuState - Indicate the Ha-CPU state.
            ##########

            $rc2kCardIndex = $1
            $rcL2RedundancyHaCpuState = lookup($2, rcL2RedundancyHaCpuState) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcHaCpuState"

            @AlertGroup = "HA CPU Status"
            @AlertKey = "rc2kCardEntry." + $1
            switch($2)
            {
                case "0": ### initialization
                    $SEV_KEY = $OS_EventId + "_initialization"
                    @Summary = "HA CPU Initialization"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "1": ### oneWayActive
                    $SEV_KEY = $OS_EventId + "_oneWayActive"
                    @Summary = "HA CPU One-Way Active"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0
                case "2": ### twoWayActive
                    $SEV_KEY = $OS_EventId + "_twoWayActive"
                    @Summary = "HA CPU Two-Way Active"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0
                case "3": ### synchronized
                    $SEV_KEY = $OS_EventId + "_synchronized"
                    @Summary = "HA CPU Synchronized"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "4": ### remoteIncompatible
                    $SEV_KEY = $OS_EventId + "_remoteIncompatible"
                    @Summary = "HA CPU Remote Incompatible"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### error
                    $SEV_KEY = $OS_EventId + "_error"
                    @Summary = "HA CPU Error"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "6": ### disabled
                    $SEV_KEY = $OS_EventId + "_disabled"
                    @Summary = "HA CPU Disabled"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "7": ### peerNotConnected
                    $SEV_KEY = $OS_EventId + "_peerNotConnected"
                    @Summary = "HA CPU Peer Not Connected"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "8": ### peerConnected
                    $SEV_KEY = $OS_EventId + "_peerConnected"
                    @Summary = "HA CPU Peer Connected"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0
                case "9": ### lostPeerConnection
                    $SEV_KEY = $OS_EventId + "_lostPeerConnection"
                    @Summary = "HA CPU Lost Peer Connection"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "10": ### notSynchronized
                    $SEV_KEY = $OS_EventId + "_notSynchronized"
                    @Summary = "HA CPU Not Synchronized"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "HA CPU Status Unknown"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rc2kCardIndex,$rcL2RedundancyHaCpuState)

        case "36": ### rcInsufficientMemory

            ##########
            # A rcInsufficientMemory trap indicates insufficient memory on CPU
            # blade for proper operation. Recommended memory = 256 MB available
            # through Nortel Networks upgrade kit
            #
            # $1 = rc2kCardIndex - Slot number.
            ##########

            $rc2kCardIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcInsufficientMemory"

            @AlertGroup = "Memory Status"
            @AlertKey = "rc2kCardEntry." + $1
            @Summary = "Insufficient Memory  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rc2kCardIndex)

        case "37": ### rcSaveConfigAction

            ##########
            # A rcSaveConfigAction trap indicates the switch run time or boot
            # configuration is being saved.
            #
            # $1 = rcSysAction - Initiate a system action.
            #   or
            # $1 = rcSysActionL1 - Initiate a system action for layer1 user.
            ##########

            switch($OID1)
            {
                case ".1.3.6.1.4.1.2272.1.1.8"|".1.3.6.1.4.1.2272.1.1.8.0":
                    $rcSysAction = lookup($1, rcSysAction)
                    $Action = $rcSysAction
                case ".1.3.6.1.4.1.2272.1.1.86"|".1.3.6.1.4.1.2272.1.1.86.0":
                    $rcSysActionL1 = lookup($1, rcSysActionL1)
                    $Action = $rcSysActionL1
                default:
                    $Action = "[WARNING: Unknown Variable Binding]"
            }
            
            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcSaveConfigAction"

            @AlertGroup = "Configuration Saved"
            @AlertKey = ""
            @Summary = "Configuration Saved, " + $Action

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $OID1 + " " + $1

            switch($OID1)
            {
                case ".1.3.6.1.4.1.2272.1.1.8"|".1.3.6.1.4.1.2272.1.1.8.0":
                    $rcSysAction = $rcSysAction + " ( " + $1 + " )"
                    details($rcSysAction)
                case ".1.3.6.1.4.1.2272.1.1.86"|".1.3.6.1.4.1.2272.1.1.86.0":
                    $rcSysActionL1 = $rcSysActionL1 + " ( " + $1 + " )"
                    details($rcSysActionL1)
                default:
                    details($OID1,$1)
            }
            
        case "38": ### rcLoopDetectOnPort

            ##########
            # A rcSaveConfigAction trap indicates that a loop has been detected
            # on a port. The vlan on that port will be disabled.
            #
            # $1 = rcVlanId - A value that uniquely identifies the Virtual LAN
            #        associated with this entry. This value corresponds to the
            #        lower 12 bits in the IEEE 802.1Q VLAN Tag.
            # $2 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcVlanId = $1
            $rcPortIndex = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcLoopDetectOnPort"

            @AlertGroup = "Port Loop Status"
            @AlertKey = "rcPortEntry." + $2
            @Summary = "Port Loop Detected, VLAN " + $1 + " Disabled  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcVlanId,$rcPortIndex)

        case "39": ### rcnbgpEstablished

            ##########
            # The BGP Established event is generated when the BGP FSM enters
            # the ESTABLISHED state.
            #
            # $1 = rcIpBgpPeerIpAddress - The Ip address of this peer
            # $2 = rcIpBgpPeerLastError - The last error code and subcode seen
            #        by this peer on this connection. If no error has occurred,
            #        this field is zero. Otherwise, the first byte of this two
            #        byte OCTET STRING contains the error code, and the second
            #        byte contains the subcode.
            # $3 = rcIpBgpPeerState - The BGP peer connection state.
            ##########

            $rcIpBgpPeerIpAddress = $1
            $rcIpBgpPeerLastError = $2
            $rcIpBgpPeerState = lookup($3, rcIpBgpPeerState) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnbgpEstablished"

            @AlertGroup = "BGP Peer Status"
            @AlertKey = "rcIpBgpPeerEntry." + $rcIpBgpPeerIpAddress
            switch($3)
            {
                case "1": ### idle
                    $SEV_KEY = $OS_EventId + "_idle"
                    @Summary = "BGP Peer Connection Idle"

                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

                case "2": ### connect
                    $SEV_KEY = $OS_EventId + "_connect"
                    @Summary = "BGP Peer Connection Connected"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "3": ### active
                    $SEV_KEY = $OS_EventId + "_active"
                    @Summary = "BGP Peer Connection Active"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "4": ### opensent
                    $SEV_KEY = $OS_EventId + "_opensent"
                    @Summary = "BGP Peer Connection Open Sent"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "5": ### openconfirm
                    $SEV_KEY = $OS_EventId + "_openconfirm"
                    @Summary = "BGP Peer Connection Open Confirmed"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "6": ### established
                    $SEV_KEY = $OS_EventId + "_established"
                    @Summary = "BGP Peer Connection Established"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0

                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "BGP Peer Connection Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

            }
            @Summary = @Summary + "  ( BGP Peer: " + $rcIpBgpPeerIpAddress + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcIpBgpPeerIpAddress,$rcIpBgpPeerLastError,$rcIpBgpPeerState)

        case "40": ### rcnbgpBackwardTransition

            ##########
            # The BGPBackwardTransition Event is generated when the BGP FSM
            # moves from a higher numbered state to a lower numbered state.
            #
            # $1 = rcIpBgpPeerIpAddress - The Ip address of this peer
            # $2 = rcIpBgpPeerLastError - The last error code and subcode seen
            #        by this peer on this connection. If no error has occurred,
            #        this field is zero. Otherwise, the first byte of this two
            #        byte OCTET STRING contains the error code, and the second
            #        byte contains the subcode.
            # $3 = rcIpBgpPeerState - The BGP peer connection state.
            ##########

            $rcIpBgpPeerIpAddress = $1
            $rcIpBgpPeerLastError = $2
            $rcIpBgpPeerState = lookup($3, rcIpBgpPeerState) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnbgpBackwardTransition"

            @AlertGroup = "BGP Peer Status"
            @AlertKey = "rcIpBgpPeerEntry." + $rcIpBgpPeerIpAddress
            switch($2)
            {
                case "1": ### idle
                    $SEV_KEY = $OS_EventId + "_idle"
                    @Summary = "BGP Peer Connection Idle"

                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

                case "2": ### connect
                    $SEV_KEY = $OS_EventId + "_connect"
                    @Summary = "BGP Peer Connection Connected"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "3": ### active
                    $SEV_KEY = $OS_EventId + "_active"
                    @Summary = "BGP Peer Connection Active"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "4": ### opensent
                    $SEV_KEY = $OS_EventId + "_opensent"
                    @Summary = "BGP Peer Connection Open Sent"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "5": ### openconfirm
                    $SEV_KEY = $OS_EventId + "_openconfirm"
                    @Summary = "BGP Peer Connection Open Confirmed"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "6": ### established
                    $SEV_KEY = $OS_EventId + "_established"
                    @Summary = "BGP Peer Connection Established"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0

                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "BGP Peer Connection Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

            }
            @Summary = @Summary + "  ( BGP Peer: " + $rcIpBgpPeerIpAddress + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcIpBgpPeerIpAddress,$rcIpBgpPeerLastError,$rcIpBgpPeerState)

        case "41": ### rcAggLinkUp

            ##########
            # A rcAggLinkUp trap is generated when the operational state of the
            # aggregator changes from down to up.
            #
            # $1 = rcMltId - A value that uniquely identifies the Multi-Link
            #        Trunk associated with this entry.
            ##########

            $rcMltId = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcAggLinkUp"

            @AlertGroup = "Aggregator MLT Status"
            @AlertKey = "rcMltEntry." + $1
            @Summary = "Aggregator Multi-Link Trunk Up  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcMltId)

        case "42": ### rcAggLinkDown

            ##########
            # A rcAggLinkDown trap is generated when the operational state of
            # the aggregator changes from up to down.
            #
            # $1 = rcMltId - A value that uniquely identifies the Multi-Link
            #        Trunk associated with this entry.
            ##########

            $rcMltId = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcAggLinkDown"

            @AlertGroup = "Aggregator MLT Status"
            @AlertKey = "rcMltEntry." + $1
            @Summary = "Aggregator Multi-Link Trunk Down  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcMltId)

        case "43": ### rcIgmpNewGroupMember

            ##########
            # An IgmpNewGroupMember trap signifies that a new member has come
            # on an interface.
            #
            # $1 = rcIgmpGroupIfIndex - An unique value to identify a physical
            #        interface or a logical interface (VLAN), which has
            #        received Group reports from various sources.
            # $2 = rcIgmpGroupIpAddress - Multicast group Address (Class D)
            #        that others want to join. A group address can be the same
            #        for many incoming ports.
            # $3 = rcIgmpGroupInPort - An unique value to identify a physical
            #        interface or a logical interface (VLAN), which has
            #        received Group reports from various sources.
            # $4 = rcIgmpGroupMembers - IP Address of a source that has sent
            #        group report wishing to join this group.
            ##########

            $rcIgmpGroupIfIndex = $1
            $rcIgmpGroupIpAddress = $2
            $rcIgmpGroupInPort = $3
            $rcIgmpGroupMembers = $4

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcIgmpNewGroupMember"

            @AlertGroup = "IGMP Group Member Status"
            @AlertKey = "ifEntry." + $1 + ", rcIgmpGroupEntry." + $2 + "." + $4
            @Summary = "IGMP New Group Member Joined  ( Group: " + $2 + ", Member: " + $4 + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcIgmpGroupIfIndex,$rcIgmpGroupIpAddress,$rcIgmpGroupInPort,$rcIgmpGroupMembers)

        case "44": ### rcIgmpLossGroupMember

            ##########
            # An IgmpLossGroupMember trap signifies that a group member has
            # been lost on an interface.
            #
            # $1 = rcIgmpGroupMembers - IP Address of a source that has sent
            #        group report wishing to join this group.
            # $2 = rcIgmpGroupIpAddress - Multicast group Address (Class D)
            #        that others want to join. A group address can be the same
            #        for many incoming ports.
            # $3 = rcIgmpGroupInPort - An unique value to identify a physical
            #        interface or a logical interface (VLAN), which has
            #        received Group reports from various sources.
            # $4 = rcIgmpGroupIfIndex - An unique value to identify a physical
            #        interface or a logical interface (VLAN), which has
            #        received Group reports from various sources.
            ##########

            $rcIgmpGroupMembers = $1
            $rcIgmpGroupIpAddress = $2
            $rcIgmpGroupInPort = $3
            $rcIgmpGroupIfIndex = $4

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcIgmpLossGroupMember"

            @AlertGroup = "IGMP Group Member Status"
            @AlertKey = "ifEntry." + $4 + ", rcIgmpGroupEntry." + $2 + "." + $1
            @Summary = "IGMP New Group Member Joined  ( Group: " + $2 + ", Member: " + $1 + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcIgmpGroupMembers,$rcIgmpGroupIpAddress,$rcIgmpGroupInPort,$rcIgmpGroupIfIndex)

        case "45": ### rcIgmpNewQuerier

            ##########
            # An igmpNewQuerier trap signifies that a new querier has come up
            # on an interface.
            #
            # $1 = igmpInterfaceIfIndex - The ifIndex value of the interface
            #        for which IGMP is enabled.
            # $2 = igmpInterfaceQuerier - The address of the IGMP Querier on
            #        the IP subnet to which this interface is attached.
            ##########

            $igmpInterfaceIfIndex = $1
            $igmpInterfaceQuerier = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcIgmpNewQuerier"

            @AlertGroup = "IGMP Querier Status"
            @AlertKey = "igmpInterfaceEntry." + $1
            @Summary = "IGMP Querier Added  ( " + @AlertKey + ", Querier: " + $2 + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($igmpInterfaceIfIndex,$igmpInterfaceQuerier)

        case "46": ### rcIgmpQuerierChange

            ##########
            # An rcIgmpQuerierChange trap signifies that the querier has
            # changed.
            #
            # $1 = igmpInterfaceIfIndex - The ifIndex value of the interface
            #        for which IGMP is enabled.
            # $2 = rcIgmpInterfaceExtnNewQuerier - The address of the New IGMP
            #        Querier on the IP subnet to which this interface is
            #        attached.
            # $3 = igmpInterfaceQuerier - The address of the IGMP Querier on
            #        the IP subnet to which this interface is attached.
            ##########

            $igmpInterfaceIfIndex = $1
            $rcIgmpInterfaceExtnNewQuerier = $2
            $igmpInterfaceQuerier = $3

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcIgmpQuerierChange"

            @AlertGroup = "IGMP Querier Status"
            @AlertKey = "igmpInterfaceEntry." + $1
            @Summary = "IGMP Querier Changed  ( " + @AlertKey + ", New Querier: " + $2 + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($igmpInterfaceIfIndex,$rcIgmpInterfaceExtnNewQuerier,$igmpInterfaceQuerier)

        case "47": ### rcDvmrpIfStateChange

            ##########
            # A rcDvmrpIfStateChange trap signifies that there has been a
            # change in the state of a DVMRP interface.
            #
            # $1 = dvmrpInterfaceIfIndex - The ifIndex value of the interface
            #        for which DVMRP is enabled.
            # $2 = dvmrpInterfaceOperState - The current operational state of
            #        this DVMRP interface.
            ##########

            $dvmrpInterfaceIfIndex = $1
            $dvmrpInterfaceOperState = lookup($2, dvmrpInterfaceOperState) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcDvmrpIfStateChange"

            @AlertGroup = "DVMRP Interface Status"
            @AlertKey = "dvmrpInterfaceEntry." + $1
            switch($2)
            {
                case "1": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "DVMRP Interface Up"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "DVMRP Interface Down"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "DVMRP Interface Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($dvmrpInterfaceIfIndex,$dvmrpInterfaceOperState)

        case "48": ### rcDvmrpNewNbrChange

            ##########
            # A rcDvmrpNewNbrChange trap signifies that a new neighbor has come
            # up on a DVMRP interface.
            #
            # $1 = dvmrpNeighborIfIndex - The value of ifIndex for the virtual
            #        interface used to reach this DVMRP neighbor.
            # $2 = dvmrpNeighborAddress - The IP address of the DVMRP neighbor
            #        for which this entry contains information.
            ##########

            $dvmrpNeighborIfIndex = $1
            $dvmrpNeighborAddress = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcDvmrpNewNbrChange"

            @AlertGroup = "DVMRP Neighbor Status"
            @AlertKey = "dvmrpNeighborEntry." + $1 + "." + $2
            @Summary = "DVMRP Neighbor Up  ( Neighbor: " + $2 + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($dvmrpNeighborIfIndex,$dvmrpNeighborAddress)

        case "49": ### rcDvmrpNbrLossChange

            ##########
            # A rcDvmrpNbrLossChange trap signifies that a new neighbor has
            # gone down on a DVMRP interface.
            #
            # $1 = dvmrpNeighborIfIndex - The value of ifIndex for the virtual
            #        interface used to reach this DVMRP neighbor.
            # $2 = dvmrpNeighborAddress - The IP address of the DVMRP neighbor
            #        for which this entry contains information.
            ##########

            $dvmrpNeighborIfIndex = $1
            $dvmrpNeighborAddress = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcDvmrpNbrLossChange"

            @AlertGroup = "DVMRP Neighbor Status"
            @AlertKey = "dvmrpNeighborEntry." + $1 + "." + $2
            @Summary = "DVMRP Neighbor Down  ( Neighbor: " + $2 + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($dvmrpNeighborIfIndex,$dvmrpNeighborAddress)

        case "56": ### rcTlsWatermarkTrap

            ##########
            # A Watermark trap signifies that the Mac Table for the endpoint
            # has reached its high watermark or already full.
            #
            # $1 = rcTlsTdiEndptTdId - Tdi that the end-point is a member of.
            # $2 = rcTlsTdiEndptUniAddr - Uni Address of the end-point.
            # $3 = rcTlsEndptWatermarkIndication -  A Watermark indication
            #        signifies that the Mac Table for the endpoint has reached
            #        its high watermark or already full 
            ##########

            $rcTlsTdiEndptTdId = $1
            $rcTlsTdiEndptUniAddr = $2
            $rcTlsEndptWatermarkIndication = lookup($3, rcTlsEndptWatermarkIndication) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcTlsWatermarkTrap"

            @AlertGroup = "Endpoint MAC Table Threshold"
            @AlertKey = "rcTlsTdiEndptEntry." + $1 + "." + $2
            switch($3)
            {
                case "1": ### threasholdReached
                    $SEV_KEY = $OS_EventId + "_threasholdReached"
                    @Summary = "Endpoint MAC Table Threashold Reached"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
	            case "2": ### tableFull
                    $SEV_KEY = $OS_EventId + "_tableFull"
                    @Summary = "Endpoint MAC Table Full"
        
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_default"
                    @Summary = "Endpoint MAC Table Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( TDI: " + $1 + ", UNI: " + $2 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcTlsTdiEndptTdId,$rcTlsTdiEndptUniAddr,$rcTlsEndptWatermarkIndication)

        case "57": ### rcTdcTestResultTrap

            ##########
            # A Tdc test fail trap indicate that the tdc test identified by
            # test ID was failed. The new release of the trap includes TDI,
            # Source UNI, and Destination UNI as additional parameters. Result
            # description is added to the TDC trap to display TDC test result
            # in detail.
            #
            # $1 = rcTlsTestTdcTestId - The unique TDC test ID for this entry.
            # $2 = rcTlsTdcTestResultIndication -  The Tdc Test has passed or
            #        failed 
            # $3 = rcTlsTestTdcTDI - The customer TD on which this test is
            #        executed.
            # $4 = rcTlsTestTdcSrcPortIP - The IP address of the source port or
            #        CPU.
            # $5 = rcTlsTestTdcDstPortIP - The IP address of the destination
            #        port or CPU.
            # $6 = rcTlsTdcTestResultDescription -  The description of test
            #        case result 
            # $7 = rcTlsTestTdcName - An optional user-defined name for this
            #        test. A TDC test name must be unique for each test.
            ##########

            $rcTlsTestTdcTestId = $1
            $rcTlsTdcTestResultIndication = $2
            $rcTlsTestTdcTDI = $3
            $rcTlsTestTdcSrcPortIP = $4
            $rcTlsTestTdcDstPortIP = $5
            $rcTlsTdcTestResultDescription = $6
            $rcTlsTestTdcName = $7

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcTdcTestResultTrap"

            @AlertGroup = "TDC Test Status"
            @AlertKey = "rcTlsTestTdcEntry." + $1
            switch($2)
            {
                case "1": ### tdcTestPass
                    $SEV_KEY = $OS_EventId + "_tdcTestPass"
                    @Summary = "TDC Test Passed"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### tdcTestFail
                    $SEV_KEY = $OS_EventId + "_tdcTestFail"
                    @Summary = "TDC Test Failed"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "TDC Test Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + ", " + $6 + "  ( Customer TD: " + $3 + ", Src: " + $4 + ", Dest: " + $5 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcTlsTestTdcTestId,$rcTlsTdcTestResultIndication,$rcTlsTestTdcTDI,$rcTlsTestTdcSrcPortIP,$rcTlsTestTdcDstPortIP,$rcTlsTdcTestResultDescription,$rcTlsTestTdcName)

        case "58": ### rcTdcTestRttExceedTrap

            ##########
            # A Tdc Rtt Exceed trap indicate that the Round Trip Time of the
            # tdc test identified by test ID exceeded the configured threshold
            # value. The new release of the trap includes TDI, Source UNI and
            # Destination UNI as additional parameters.
            #
            # $1 = rcTlsTestTdcTestId - The unique TDC test ID for this entry.
            # $2 = rcTlsTdcTestRttExceedIndication -  The Tdc Test RTT has
            #        exceeded the preset threshold or not
            # $3 = rcTlsTestTdcTDI - The customer TD on which this test is
            #        executed.
            # $4 = rcTlsTestTdcSrcPortIP - The IP address of the source port or
            #        CPU.
            # $5 = rcTlsTestTdcDstPortIP - The IP address of the destination
            #        port or CPU.
            # $6 = rcTlsTestTdcName - An optional user-defined name for this
            #        test. A TDC test name must be unique for each test.
            ##########

            $rcTlsTestTdcTestId = $1
            $rcTlsTdcTestRttExceedIndication = $2
            $rcTlsTestTdcTDI = $3
            $rcTlsTestTdcSrcPortIP = $4
            $rcTlsTestTdcDstPortIP = $5
            $rcTlsTestTdcName = $6

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcTdcTestRttExceedTrap"

            @AlertGroup = "TDC RTT Status"
            @AlertKey = "rcTlsTestTdcEntry." + $1
            switch($2)
            {
                case "1": ### tdcTestRttOK
                    $SEV_KEY = $OS_EventId + "_tdcTestRttOK"
                    @Summary = "TDC Response Time OK"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### tdcTestRttExceed
                    $SEV_KEY = $OS_EventId + "_tdcTestRttExceed"
                    @Summary = "TDC Response Time Exceeded"

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "TDC Response Time Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( Customer TD: " + $3 + ", Src: " + $4 + ", Dest: " + $5 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcTlsTestTdcTestId,$rcTlsTdcTestRttExceedIndication,$rcTlsTestTdcTDI,$rcTlsTestTdcSrcPortIP,$rcTlsTestTdcDstPortIP,$rcTlsTestTdcName)

        case "59": ### rcnFdbProtectViolation

            ##########
            # The rcFdbProtectViolation trap signifies that the port has
            # violated the user configured limit for total number of
            # fdb-entries learned on that port.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcVlanId - A value that uniquely identifies the Virtual LAN
            #        associated with this entry. This value corresponds to the
            #        lower 12 bits in the IEEE 802.1Q VLAN Tag.
            ##########

            $rcPortIndex = $1
            $rcVlanId = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnFdbProtectViolation"

            @AlertGroup = "Port FDP Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port FDP Entries Exceeds User-configured Limit  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex,$rcVlanId)

        case "60": ### rcnLogMsgControl

            ##########
            # A rcMsgControl trap signifies whether the number of times of
            # repeatation of the particular Log message has exceeded the
            # particular frequency/count or not.
            #
            # $1 = rcSysMsgLogFrequency - Used to specify the maximum
            #        frequency/count of the occurence of the Log Message.
            # $2 = rcSysMsgLogText - A textual string containing the first four
            #        characters of the Log Message.
            ##########

            $rcSysMsgLogFrequency = $1
            $rcSysMsgLogText = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnLogMsgControl"

            @AlertGroup = "Log Message Control"
            @AlertKey = "Log Text: " + $2
            @Summary = "Log Message Count Exceeds " + $1 + "  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSysMsgLogFrequency,$rcSysMsgLogText)

        case "61": ### rcnSaveConfigFile

            ##########
            # A rcSaveConfig trap signifies that either the runtime config or
            # the boot config has been saved on the switch.
            #
            # $1 = rcSysActionL1 - Initiate a system action for layer1 user.
            # $2 = rcSysConfigFileName - File name used in conjunction with
            #        rcSysAction. If rcSysAction is set to 'saveRuntimeConfig'
            #        or 'saveRuntimeConfigToSlave' then this file name will be
            #        used instead of the file name specified in
            #        rcSysDefaultRuntimeConfigFileName. If rcSysAction is set
            #        to 'saveBootConfig' or 'saveBootConfigToSlave' then this
            #        file name will be used insteaad of the file name specified
            #        in rcSysDefaultBootConfigFileName. If the file name is
            #        blank (i.e., nothing is entered) then the default file
            #        name will be used.
            ##########

            $rcSysActionL1 = lookup($1, rcSysActionL1) + " ( " + $1 + " )"
            $rcSysConfigFileName = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnSaveConfigFile"

            @AlertGroup = "Configuration Status"
            @AlertKey = "File: " + $2
            switch($1)
            {
                case "1": ### none
                    $SEV_KEY = $OS_EventId + "_none"
                    @Summary = "Configuration Not Saved"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "2": ### resetCounters
                    $SEV_KEY = $OS_EventId + "_resetCounters"
                    @Summary = "Counters Reset"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "3": ### saveToNVRAM
                    $SEV_KEY = $OS_EventId + "_saveToNVRAM"
                    @Summary = "Configuration Saved to NVRAM"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "4": ### saveToStandbyNVRAM
                    $SEV_KEY = $OS_EventId + "_saveToStandbyNVRAM"
                    @Summary = "Configuration Saved to Standby NVRAM"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "5": ### checkSwInFlash
                    $SEV_KEY = $OS_EventId + "_checkSwInFlash"
                    @Summary = "Software in Flash Checked"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "6": ### checkSwInPcmcia
                    $SEV_KEY = $OS_EventId + "_checkSwInPcmcia"
                    @Summary = "Software in PCMCIA Checked"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "7": ### saveRuntimeConfig
                    $SEV_KEY = $OS_EventId + "_saveRuntimeConfig"
                    @Summary = "Runtime Configuration Saved"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "8": ### saveRuntimeConfigToSlave
                    $SEV_KEY = $OS_EventId + "_saveRuntimeConfigToSlave"
                    @Summary = "Runtime Configuration to Slave Saved"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "9": ### saveBootConfig
                    $SEV_KEY = $OS_EventId + "_saveBootConfig"
                    @Summary = "Boot Configuration Saved"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                case "10": ### saveSlaveBootConfig
                    $SEV_KEY = $OS_EventId + "_saveSlaveBootConfig"
                    @Summary = "Slave Boot Configuration Saved"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 13
                    $DEFAULT_ExpireTime = 1800
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Configuration Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1

            details($rcSysActionL1,$rcSysConfigFileName)

        case "62": ### rcnDNSRequestResponse

            ##########
            # A rcDnsRequestResponse trap signifies that the switch had sent a
            # query to the DNS server or it had received a successful response
            # from the DNS Server
            #
            # $1 = rcSysDnsServerListIpAddr - DNS server's IP address 
            # $2 = rcSysDnsRequestType - DNS Type: Whether it was DNS Request
            #        or a Response
            ##########

            $rcSysDnsServerListIpAddr = $1
            $rcSysDnsRequestType = lookup($2, rcSysDnsRequestType) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnDNSRequestResponse"

            @AlertGroup = "DNS Request/Response Status"
            @AlertKey = "DNS Server: " + $1
            switch($2)
            {
                case "0": ### request
                    $SEV_KEY = $OS_EventId + "_request"
                    @Summary = "DNS Request Sent"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 11
                    $DEFAULT_ExpireTime = 0
                case "1": ### response
                    $SEV_KEY = $OS_EventId + "_response"
                    @Summary = "DNS Response Received"

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "DNS Request/Response Status Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcSysDnsServerListIpAddr,$rcSysDnsRequestType)

        case "63": ### rcnDuplicateIpAddress

            ##########
            # A rcDuplicateIpAddress trap signifies that a duplicate IP address
            # is detected on the subnet.
            #
            # $1 = ipNetToMediaNetAddress - The IpAddress corresponding to the
            #        media-dependent `physical' address.
            # $2 = ipNetToMediaPhysAddress - The media-dependent `physical'
            #        address.
            ##########

            $ipNetToMediaNetAddress = $1_hex
            $ipNetToMediaPhysAddress = $2_hex

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnDuplicateIpAddress"

            @AlertGroup = "Duplicate IP Address"
            @AlertKey = "IP: " + $1_hex + ", MAC: " + $2_hex
            @Summary = "Duplicate IP Address Detected  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($ipNetToMediaNetAddress,$ipNetToMediaPhysAddress)

        case "64": ### rcnLoopDetectPortDown

            ##########
            # A rcLoopDetectPortDown trap signifies that a loop has been
            # detected on a port and the port is going to shut down.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = ifAdminStatus - The desired state of the interface. The
            #        testing(3) state indicates that no operational packets can
            #        be passed.
            # $3 = ifOperStatus - The current operational state of the
            #        interface. The testing(3) state indicates that no
            #        operational packets can be passed.
            ##########

            $rcPortIndex = $1
            $ifAdminStatus = lookup($2, ifAdminStatus) + " ( " + $2 + " )"
            $ifOperStatus = lookup($3, ifOperStatus) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnLoopDetectPortDown"

            @AlertGroup = "Port Loop Port Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port Loopback Detect, Port Shutdown  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex,$ifAdminStatus,$ifOperStatus)

        case "66": ### rcnTlsPortWatermarkTrap

            ##########
            # A Watermark trap signifies that the Mac Table for the port has
            # reached its high watermark or already full.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcTlsEndptWatermarkIndication -  A Watermark indication
            #        signifies that the Mac Table for the endpoint has reached
            #        its high watermark or already full.
            ##########

            $rcPortIndex = $1
            $rcTlsEndptWatermarkIndication = lookup($2, rcTlsEndptWatermarkIndication) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnTlsPortWatermarkTrap"

            @AlertGroup = "Endpoint Port MAC Table Threshold"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### threasholdReached
                    $SEV_KEY = $OS_EventId + "_threasholdReached"
                    @Summary = "Endpoint Port MAC Table Threashold Reached"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
	            case "2": ### tableFull
                    $SEV_KEY = $OS_EventId + "_tableFull"
                    @Summary = "Endpoint Port MAC Table Full"
        
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_default"
                    @Summary = "Endpoint Port MAC Table Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcPortIndex,$rcTlsEndptWatermarkIndication)

        case "67": ### rcnLoopDetectMacDiscard

            ##########
            # A rcLoopDetectMacDiscard trap signifies that a loop has been
            # Detected on a port and the mac address will be discarded on all
            # ports in that vlan.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcSysMacFlapLimitTime - Time limit in milliseconds for MAC
            #        flapping for loop-detect feature
            # $3 = rcSysMacFlapLimitCount - Number of times mac flapping can
            #        happen for loop-detect feature
            ##########

            $rcPortIndex = $1
            $rcSysMacFlapLimitTime = $2
            $rcSysMacFlapLimitCount = $3

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnLoopDetectMacDiscard"

            @AlertGroup = "Port Loop MAC Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port Loop Detected, MAC Address Discarded on VLAN"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex,$rcSysMacFlapLimitTime,$rcSysMacFlapLimitCount)

        case "68": ### rcnAutoRecoverPort

            ##########
            # A rcnAutoRecoverPort trap signifies that autorecover has
            # re-enabled a port disabled by link flap or cp limit.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcPortIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnAutoRecoverPort"

            @AlertGroup = "Port Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port Auto-Recovered from Link Flap or CP-Limit"
            
            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex)

        case "69": ### rcnAutoRecoverLoopDetectedPort

            ##########
            # A rcnAutoRecoverPort trap signifies that autorecover has cleared
            # the action taken on a port by loop detect.
            #
            # $1 = rcVlanNewLoopDetectedAction - This value is used to specify
            #        the action which needs to be taken once a loop is detected
            #        on a specific port.
            ##########

            $rcVlanNewLoopDetectedAction = lookup($1, rcVlanNewLoopDetectedAction) + " ( " + $1 + " )"
            $rcVlanNewLoopDetectedPortIndex = extract($OID1, "3\.6\.1\.4\.1\.2272\.1\.3\.12\.1\.([0-9]+)\.[0-9]+\..*$")
            $rcVlanNewLoopDetectedVlanId = extract($OID1, "3\.6\.1\.4\.1\.2272\.1\.3\.12\.1\.[0-9]+\.([0-9]+)\..*$")
            $rcVlanNewLoopDetectedMac = extract($OID1, "3\.6\.1\.4\.1\.2272\.1\.3\.12\.1\.[0-9]+\.[0-9]+\.(.*)$")

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnAutoRecoverLoopDetectedPort"

            @AlertKey = "rcPortEntry." + $rcVlanNewLoopDetectedPortIndex
            switch($1)
            {
                case "1": ### portDown
                    @AlertGroup = "Port Loop Port Status"
                    $SEV_KEY = $OS_EventId + "_portDown"
                    @Summary = "Port Auto-Recovered from Loop"
            
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### vlanBlock
                    @AlertGroup = "Port Loop VLAN Status"
                    $SEV_KEY = $OS_EventId + "_vlanBlock"
                    @Summary = "Port Auto-Recovered from Loop VLAN Block"
            
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "3": ### macDiscard
                    @AlertGroup = "Port Loop MAC Status"
                    $SEV_KEY = $OS_EventId + "_macDiscard"
                    @Summary = "Port Auto-Recovered from Loop MAC Discard"
            
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                default:
                    @AlertGroup = "Port Loop Status"
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Auto-Recovered from Loop"
            
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1

            details($rcVlanNewLoopDetectedAction,$rcVlanNewLoopDetectedPortIndex,$rcVlanNewLoopDetectedVlanId,$rcVlanNewLoopDetectedMac)

        case "70": ### rcnExtCpLimitShutDown

            ##########
            # A rcnExtCpLimitShutDown trap signifies that port is shut down due
            # to Extended CP-Limit.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = ifAdminStatus - The desired state of the interface. The
            #        testing(3) state indicates that no operational packets can
            #        be passed.
            ##########

            $rcPortIndex = $1
            $ifAdminStatus = lookup($2, ifAdminStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnExtCpLimitShutDown"

            @AlertGroup = "Port Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port CP-Limit Exceeded, Shutting Down  ( " + @AlertKey + " )"
            
            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex,$ifAdminStatus)

        case "71": ### rcnExtCpLimitSopCongestion

            ##########
            # A rcnExtCpLimitSopCongestion signifies that system octapid
            # polling finds that system octapid is congested or not.
            # rcSysExtCplimitSysOctapidCongested signifies whether system
            # octapid is congested or not. rcSysExtCplimitPortsMonitored
            # signifies whether ports are selected for monitoring the ingress
            # traffic utilization.
            #
            # $1 = rcSysExtCplimitSysOctapidCongested - Indicates whether
            #        system octapid congestion detected for extended cp-limit.
            # $2 = rcSysExtCplimitPortsMonitored - Indicates whether ports has
            #        been shutdown due to extended cp-limit.
            ##########

            $rcSysExtCplimitSysOctapidCongested = lookup($1, TruthValue) + " ( " + $1 + " )"
            $rcSysExtCplimitPortsMonitored = lookup($2, TruthValue) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnExtCpLimitSopCongestion"

            @AlertGroup = "System OctaPID Congestion Status"
            @AlertKey = ""
            switch($1)
            {
                case "1": ### true
                    $SEV_KEY = $OS_EventId + "_true"
                    @Summary = "System OctaPID Congested"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### false
                    $SEV_KEY = $OS_EventId + "_false"
                    @Summary = "System OctaPID Not Congested"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "System OctaPID "
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $1 + " " + $2

            details($rcSysExtCplimitSysOctapidCongested,$rcSysExtCplimitPortsMonitored)

        case "73": ### rcnTlsUniIpServiceWatermarkTrap

            ##########
            # A Watermark trap signifies that the Ip Table for the Uni Ip
            # Service (Cust Ip) has reached its high watermark or already full.
            #
            # $1 = rcTlsUniIpServiceAddr - Address of the Uni Instance -
            #        rcTlsUniAddr.
            # $2 = rcTlsUniIpServiceCustIpVlan - Customer IP Vlan for UNI IP
            #        Multicast VLAN mapping.
            # $3 = rcTlsUniIpServiceWatermarkIndication - A Watermark
            #        indication signifies that the Ip Table for the UNI IP
            #        (Cust IP) has reached its high watermark or already full.
            ##########

            $rcTlsUniIpServiceAddr = $1
            $rcTlsUniIpServiceCustIpVlan = $2
            $rcTlsUniIpServiceWatermarkIndication = $3

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnTlsUniIpServiceWatermarkTrap"

            @AlertGroup = "UNI IP Service IP Table Threshold"
            @AlertKey = "rcTlsUniIpServiceEntry." + $1 + "." + $2
            switch($3)
            {
                case "1": ### threasholdReached
                    $SEV_KEY = $OS_EventId + "_threasholdReached"
                    @Summary = "UNI IP Service IP Table Threashold Reached"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### tableFull
                    $SEV_KEY = $OS_EventId + "_tableFull"
                    @Summary = "UNI IP Service IP Table Full"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "UNI IP Service IP Table Threshold Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcTlsUniIpServiceAddr,$rcTlsUniIpServiceCustIpVlan,$rcTlsUniIpServiceWatermarkIndication)

        case "80": ### rcnVlacpPortDown

            ##########
            # A rcnVlacpPortDown trap signifies that Vlacp is down on the port
            # specified.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcPortIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnVlacpPortDown"

            @AlertGroup = "Port VLACP Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port VLACP Down  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex)

        case "81": ### rcnVlacpPortUp

            ##########
            # A rcnVlacpPortUp trap signifies that Vlacp is Up on the port
            # specified.
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            ##########

            $rcPortIndex = $1

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnVlacpPortUp"

            @AlertGroup = "Port VLACP Status"
            @AlertKey = "rcPortEntry." + $1
            @Summary = "Port VLACP Up  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex)

        case "82": ### rcnExtCpLimitShutDownNormal

            ##########
            # An rcnExtCpLimitShutDownNormal trap signifies that Ports are
            # shutdown due to Extended CP-Limit in Normal mode.
            ##########

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnExtCpLimitShutDownNormal"

            @AlertGroup = "Port Status"
            @AlertKey = ""
            @Summary = "CP-Limit Exceeded in Normal Mode, Ports Shutdown"
            
            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcPortIndex)

        case "83": ### rcnEapMacIntrusion

            ##########
            # A rcnEapMacIntrusion trap signifies that an EAP MAC intrusion has
            # occured on this Port.
            #
            # $1 = rcSysIpAddr - This entity's IP address.
            # $2 = rcRadiusPaePortNumber - Used to store the Port Number on
            #        which the Mac Intrusion happenned.
            # $3 = rcRadiusEapLastAuthMac - Used to store the Last
            #        Authenticated MAC address on an EAP enabled port.
            # $4 = rcRadiusEapLastRejMac - Used to store the Last Rejected MAC
            #        address on an EAP enabled port.
            ##########

            $rcSysIpAddr = $1
            $rcRadiusPaePortNumber = $2
            $rcRadiusEapLastAuthMac = $3_hex
            $rcRadiusEapLastRejMac = $4_hex

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnEapMacIntrusion"

            @AlertGroup = "Port EAP MAC Intrusion Status"
            @AlertKey = "Port: " + $2 + ", MAC: " + $4_hex
            @Summary = "Port EAP MAC Intrusion  ( " + @AlertKey + " )"

            $DEFAULT_Severity = 2
            $DEFAULT_Type = 13
            $DEFAULT_ExpireTime = 1800

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSysIpAddr,$rcRadiusPaePortNumber,$rcRadiusEapLastAuthMac,$rcRadiusEapLastRejMac)

        case "84": ### rcnInterCpuCommStatus

            ##########
            # A rcnInterCpuCommStatus trap signifies the current communication
            # status between primary and secondary CPU.
            #
            # $1 = rc2kCardIndex - slot number.
            # $2 = rcCardOperStatus - Used to indicate the operational status
            #        of this card.
            ##########

            $rc2kCardIndex = $1
            $rcCardOperStatus = $2

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnInterCpuCommStatus"

            @AlertGroup = "CPU Communications Status"
            @AlertKey = "rc2kCardEntry." + $1
            switch($2)
            {
                case "1": ### up
                    $SEV_KEY = $OS_EventId + "_up"
                    @Summary = "CPU Communications Up"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "CPU Communications Down"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### testing
                    $SEV_KEY = $OS_EventId + "_testing"
                    @Summary = "CPU Communications Testing"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### unknown
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "CPU Communications Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### dormant
                    $SEV_KEY = $OS_EventId + "_dormant"
                    @Summary = "CPU Communications Dormant"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "CPU Communications Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rc2kCardIndex,$rcCardOperStatus)

	case "85": ### - rcnCfmTrunkCcmTrap
			#######################
			# A TrunkCcm trap signifies that the
			# trunk CCM operational state has been changed
			#
			#  $1 = $rcCfmTrunkMdName - PBT Trunk Maintenance Domain Name
			#  $2 = $rcCfmTrunkMaName - PBT Trunk Maintenance Association Name
			#  $3 = $rcCfmTrunkMepId - PBT trunk MEP ID. Range 1-8191 is a valid Mep ID to
			#        be assigned to the CFM Trunk. '0' means unassign the Med ID from the CFM Trunk
			#  $4 = $rcCfmTrunkCcmIndication - A Trunk CCM indication signifies that the trunk CCM 
			#        operational status has changed state to UP or DOWN
			#######################

			$rcCfmTrunkMdName = $1
			$rcCfmTrunkMaName = $2
			$rcCfmTrunkMepId = $3
			$rcCfmTrunkCcmIndication = lookup($4,rapidCity-RAPID-CITY-rcCfmTrunkCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkCcmTrap"

			@AlertGroup = "Trunk CCM Operational Status"
			@AlertKey = "Domain: " + $rcCfmTrunkMdName + ", Association: " + $rcCfmTrunkMaName + ", Mep ID:" + $rcCfmTrunkMepId

			switch($4)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "Trunk CCM Operational Status is UP"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0
				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "Trunk CCM Operational Status is DOWN"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "Trunk CCM Operational Status Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}
			
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $4
			details($rcCfmTrunkMdName,$rcCfmTrunkMaName,$rcCfmTrunkMepId,$rcCfmTrunkCcmIndication)


	case "86": ### - rcnCfmServiceGroupCcmTrap
			#######################
			# A ServiceGroupCcm trap signifies that the
			# Service Group CCM operational state has been changed
			#
			#  $1 = $rcCfmServiceGroupMdName - PBT ServiceGroup Maintenance Domain Name
			#  $2 = $rcCfmServiceGroupMaName - PBT ServiceGroup Maintenance Association Name
			#  $3 = $rcCfmServiceGroupMepId - PBT ServiceGroup MEP ID. Range 1-8191 is a valid
			# 	 Mep ID to be assigned to the CFM Service group. '0' means
			# 	 unassign the Med ID from the CFM service group
			#  $4 = $rcCfmServiceGroupCcmIndication - A Service Group CCM indication signifies that 
			#	 the service group CCM operational status has changed state to UP or DOWN
			#
			#######################
			$rcCfmServiceGroupMdName = $1
			$rcCfmServiceGroupMaName = $2
			$rcCfmServiceGroupMepId = $3
			$rcCfmServiceGroupCcmIndication = lookup($4,rapidCity-RAPID-CITY-rcCfmServiceGroupCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmServiceGroupCcmTrap"

			@AlertGroup = "PBT ServiceGroup CCM Operational Status"
			@AlertKey = "Domain: " + $rcCfmServiceGroupMdName + ", Association: " + $rcCfmServiceGroupMaName + ", Mep ID:" + $rcCfmServiceGroupMepId
			switch($4)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "PBT ServiceGroup CCM Operational Status is UP"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0
				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "PBT ServiceGroup CCM Operational Status is DOWN"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "PBT ServiceGroup CCM Operational Status Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}
			
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $4
			details($rcCfmServiceGroupMdName,$rcCfmServiceGroupMaName,$rcCfmServiceGroupMepId,$rcCfmServiceGroupCcmIndication)


	case "87": ### - rcnCfmEndPointCcmTrap
			#######################
			# A ServiceGroupCcm trap signifies that the
			# Service Group CCM operational state has been changed
			#  $1 = rcTlsTdiMdName - Maintenance Domain Name
			#  $2 = $rcTlsTdiMaName - Maintenance Association Name
			#  $3 = $rcTlsTdiEndptMepId - Maintenance Endpoint ID, range 1-8191 is valid MepId
			#        to be assigned to the Tdi Endpoint. '0' means unassigned Med ID from Tdi Endpoint
			#  $4 = $rcCfmEndPointCcmIndication - A Endpoint CCM indication signifies that the endpoint
                        #        CCM operational status has changed state to UP or DOWN
			#######################
			$rcTlsTdiMdName = $1
			$rcTlsTdiMaName = $2
			$rcTlsTdiEndptMepId = $3
			$rcCfmEndPointCcmIndication = lookup($4,rapidCity-RAPID-CITY-rcCfmEndPointCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmEndPointCcmTrap"

			@AlertGroup = "PBT TDI EndPoint CCM Status"
			@AlertKey = "Domain: " + $rcTlsTdiMdName + ", Association: " + $rcTlsTdiMaName + ", Mep ID:" + $rcTlsTdiEndptMepId

			switch($4)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "PBT TDI EndPoint CCM Status is UP"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0
				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "PBT TDI EndPoint CCM Status is DOWN"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "PBT TDI EndPoint CCM Status Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}
			
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $4
			details($rcTlsTdiMdName,$rcTlsTdiMaName,$rcTlsTdiEndptMepId,$rcCfmEndPointCcmIndication)


        case "88": ### rcnBanRingStateChangeTrap

            ##########
            # A ring State change Trap
            #
            # $1 = rcBanRingId - BAN Ring ID.
            # $2 = rcBanRingTrapIndication - The type of trap send is
            #        represented.
            # $3 = rcBanRingTrapReason - The Reason for a Ring Cut situation.
            ##########

            $rcBanRingId = $1
            $rcBanRingTrapIndication = lookup($2, rcBanRingTrapIndication) + " ( " + $2 + " )"
            $rcBanRingTrapReason = $3

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnBanRingStateChangeTrap"

            @AlertGroup = "Ring Status"
            @AlertKey = "rcBanRingEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Ring Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### cut
                    $SEV_KEY = $OS_EventId + "_cut"
                    @Summary = "Ring Cut"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### down
                    $SEV_KEY = $OS_EventId + "_down"
                    @Summary = "Ring Down"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### adminDisable
                    $SEV_KEY = $OS_EventId + "_adminDisable"
                    @Summary = "Ring Administratively Disabled"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Ring Status Unknwon"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            if(!match($3, ""))
            {
                @Summary = @Summary + ", " + $3
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"
            
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2 + " " + $3

            details($rcBanRingId,$rcBanRingTrapIndication,$rcBanRingTrapReason)

        case "89": ### rcPlugOptModTemperatureStatusTrap

            ##########
            # Used to trap changes in the temperature status
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModTemperatureStatus - Used to indicate the current
            #        temperature status.
            ##########

            $rcPortIndex = $1
            $rcPlugOptModTemperatureStatus = lookup($2, rcPlugOptModTemperatureStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModTemperatureStatusTrap"

            @AlertGroup = "Port Temperature Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Temperature Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Temperature High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Temperature High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Temperature Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Temperature Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Temperature Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcPortIndex,$rcPlugOptModTemperatureStatus)

        case "90": ### rcPlugOptModVoltageStatusTrap

            ##########
            # Used to trap changes in the voltage level
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModVoltageStatus - Used to indicate the current
            #        voltage status.
            ##########

            $rcPortIndex = $1
            $rcPlugOptModVoltageStatus = lookup($2, rcPlugOptModVoltageStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModVoltageStatusTrap"

            @AlertGroup = "Port Voltage Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Voltage Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Voltage High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Voltage High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Voltage Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Voltage Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Voltage Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcPortIndex,$rcPlugOptModVoltageStatus)

        case "91": ### rcPlugOptModBiasStatusTrap

            ##########
            # Used to trap changes in the laser bias status
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModBiasStatus - Used to indicate the current laser
            #        bias status
            ##########

            $rcPortIndex = $1
            $rcPlugOptModBiasStatus = lookup($2, rcPlugOptModBiasStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModBiasStatusTrap"

            @AlertGroup = "Port Laser Current Bias Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Laser Current Bias Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Laser Current Bias High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Laser Current Bias High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Laser Current Bias Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Laser Current Bias Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Laser Current Bias Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcPortIndex,$rcPlugOptModBiasStatus)

        case "92": ### rcPlugOptModTxPowerStatusTrap

            ##########
            # Used to trap changes in the transmit power status
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModTxPowerStatus - Used to indicate the current
            #        transmitter power status.
            ##########

            $rcPortIndex = $1
            $rcPlugOptModTxPowerStatus = lookup($2, rcPlugOptModTxPowerStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModTxPowerStatusTrap"

            @AlertGroup = "Port Transmitter Power Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Transmitter Power Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Transmitter Power High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Transmitter Power High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Transmitter Power Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Transmitter Power Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Transmitter Power Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcPortIndex,$rcPlugOptModTxPowerStatus)

        case "93": ### rcPlugOptModRxPowerStatusTrap

            ##########
            # Used to trap changes in the received power status
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModRxPowerStatus - Used to indicate the current
            #        receiver power status.
            ##########

            $rcPortIndex = $1
            $rcPlugOptModRxPowerStatus = lookup($2, rcPlugOptModRxPowerStatus) + " ( " + $2 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModRxPowerStatusTrap"

            @AlertGroup = "Port Receiver Power Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Receiver Power Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Receiver Power High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Receiver Power High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Receiver Power Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Receiver Power Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Receiver Power Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            details($rcPortIndex,$rcPlugOptModRxPowerStatus)

        case "94": ### rcPlugOptModAux1StatusTrap

            ##########
            # Used to trap changes in the Aux1 status
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModAux1Monitoring - This value tells what Aux1 is
            #        measuring.The values are as follows:
            #          0 Auxiliary monitoring not implemented
            #          1 APD Bias Voltage mV (units of 10 mV)
            #          2 Reserved
            #          3 TEC Current (mA)
            #          4 Laser Temperature
            #          5 Laser Wavelength
            #          6 +5V Supply Voltage
            #          7 +3.3V Supply Voltage
            #          8 +1.8V Supply Voltage
            #          9 -5.2V Supply Voltage
            #          10 +5.0V Supply Current (unit of 100 uA)
            #          13 +3.3V Supply Current (unit of 100 uA)
            #          14 +1.8V Supply Current (unit of 100 uA)
            #          15 -5.2V Supply Current (unit of 100 uA) 
            # $3 = rcPlugOptModAux1Status - Used to indicate the current Aux1
            #        status.
            ##########

            $rcPortIndex = $1
            $rcPlugOptModAux1Monitoring = lookup($2, rcPlugOptModAux1Monitoring)
            $rcPlugOptModAux1Status = lookup($3, rcPlugOptModAux1Status) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModAux1StatusTrap"

            @AlertGroup = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Aux1 " + $rcPlugOptModAux1Monitoring + " Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            $rcPlugOptModAux1Monitoring = $rcPlugOptModAux1Monitoring + " ( " + $2 + " )"
            details($rcPortIndex,$rcPlugOptModAux1Monitoring,$rcPlugOptModAux1Status)

        case "95": ### rcPlugOptModAux2StatusTrap

            ##########
            # Used to trap changes in the Aux2 status
            #
            # $1 = rcPortIndex - An index value that uniquely identifies a
            #        port. This value is similar to ifIndex in MIB2.
            # $2 = rcPlugOptModAux2Monitoring - This value tells you what AUX2
            #        is measuring.The values are as follows:
            #          0 Auxiliary monitoring not implemented
            #          1 APD Bias Voltage mV (units of 10 mV)
            #          2 Reserved
            #          3 TEC Current (mA)
            #          4 Laser Temperature
            #          5 Laser Wavelength
            #          6 +5V Supply Voltage
            #          7 +3.3V Supply Voltage
            #          8 +1.8V Supply Voltage
            #          9 -5.2V Supply Voltage
            #          10 +5.0V Supply Current (unit of 100 uA)
            #          13 +3.3V Supply Current (unit of 100 uA)
            #          14 +1.8V Supply Current (unit of 100 uA)
            #          15 -5.2V Supply Current (unit of 100 uA) 
            # $3 = rcPlugOptModAux2Status - Used to indicate the current Aux2
            #        status.
            ##########

            $rcPortIndex = $1
            $rcPlugOptModAux2Monitoring = lookup($2, rcPlugOptModAux2Monitoring)
            $rcPlugOptModAux2Status = lookup($3, rcPlugOptModAux2Status) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcPlugOptModAux2StatusTrap"

            @AlertGroup = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " Status"
            @AlertKey = "rcPortEntry." + $1
            switch($2)
            {
                case "1": ### normal
                    $SEV_KEY = $OS_EventId + "_normal"
                    @Summary = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " Normal"
        
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### highWarning
                    $SEV_KEY = $OS_EventId + "_highWarning"
                    @Summary = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " High"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### highAlarm
                    $SEV_KEY = $OS_EventId + "_highAlarm"
                    @Summary = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " High"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### lowWarning
                    $SEV_KEY = $OS_EventId + "_lowWarning"
                    @Summary = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " Low"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### lowAlarm
                    $SEV_KEY = $OS_EventId + "_lowAlarm"
                    @Summary = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " Low"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "Port Aux2 " + $rcPlugOptModAux2Monitoring + " Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2

            $rcPlugOptModAux2Monitoring = $rcPlugOptModAux2Monitoring + " ( " + $2 + " )"
            details($rcPortIndex,$rcPlugOptModAux2Monitoring,$rcPlugOptModAux2Status)

		case "96": ### - rcnCfmTrunkGroupDownTrap
			#######################
			# A TrunkGroupCcm trap signifies that two trunks in the
			# trunk group are not operational
			#  $1 = $rcTlsTdiEndptTrunkGroup - Trunk Group Name
			#  $2 = $rcCfmTrunkGroupProtected - signifies trunk group was protected or was not protected
			#  $3 = $rcCfmTrunkGroupPrimaryTrunk - Trunk Group PBT Primary Trunk Name
			#######################
			$rcTlsTdiEndptTrunkGroup = $1
			$rcCfmTrunkGroupProtected = lookup($2,rapidCity-RAPID-CITY-rcCfmTrunkGroupProtected)
			$rcCfmTrunkGroupPrimaryTrunk = $3

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkGroupDownTrap"

			@AlertGroup = "Trunk Group Operational Status"
			@AlertKey = "rcTlsTdiEndptTrunkGroup." + $rcTlsTdiEndptTrunkGroup + ", rcCfmTrunkGroupPrimaryTrunk." +$rcCfmTrunkGroupPrimaryTrunk
			@Summary = "Trunk Group " + $rcTlsTdiEndptTrunkGroup + "[" + $rcCfmTrunkGroupProtected +"] is not operational"

			$DEFAULT_Severity = 4
			$DEFAULT_Type = 1
			$DEFAULT_ExpireTime = 0

			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $2
			details($rcTlsTdiEndptTrunkGroup,$rcCfmTrunkGroupProtected,$rcCfmTrunkGroupPrimaryTrunk)


		case "97": ### - rcnCfmTrunkGroupLostProtectionTrap
			#######################
			# A TrunkGroupCcm trap signifies that the active trunk has been changed
			#  $1 = $rcTlsTdiEndptTrunkGroup -  Trunk Group Name
			#  $2 = $rcCfmTrunkGroupPrimaryTrunk - Trunk Group PBT Primary Trunk Name
			#  $3 = $rcCfmTrunkGroupSecondaryTrunk - Trunk Group PBT Secondary Trunk Name
			#######################
			$rcTlsTdiEndptTrunkGroup = $1
			$rcCfmTrunkGroupPrimaryTrunk = $2
			$rcCfmTrunkGroupSecondaryTrunk = $3

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkGroupLostProtectionTrap"

			@AlertGroup = "Trunk Group Change"
			@AlertKey = "rcTlsTdiEndptTrunkGroup." + $rcTlsTdiEndptTrunkGroup + " , rcCfmTrunkGroupPrimaryTrunk." + $rcCfmTrunkGroupPrimaryTrunk 
			@Summary = "The Active Trunk has lost protection/been changed [Group: " + $rcTlsTdiEndptTrunkGroup + ", Primary: " + $rcCfmTrunkGroupPrimaryTrunk + "]"

			$DEFAULT_Severity = 4
			$DEFAULT_Type = 1
			$DEFAULT_ExpireTime = 0
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap
			details($rcTlsTdiEndptTrunkGroup,$rcCfmTrunkGroupPrimaryTrunk,$rcCfmTrunkGroupSecondaryTrunk)


		case "98": ### - rcnCfmPortMepCcmTrap
			#######################
			# A CfmPortMepCcm trap signifies that the CCM operational state has been changed
			# for a MEP configured on a port
			#  $1 = $rcCfmMaintenanceEndPointDomainName - Maintenance Domain Name
			#  $2 = $rcCfmMaintenanceEndPointAssociationName - Maintenance Association Name
			#  $3 = $rcCfmRemoteMepId - Remote Maintenance Endpoint ID
			#  $4 = $rcCfmLocalMepId - Local Maintenance Endpoint ID
			#  $5 = $rcCfmRemoteMacAddr - Remote MAC Address
			#  $6 = $rcPortIndex - An index value that uniquely identifies a port.
                        #        This value is similar to ifIndex in MIB2.
			#  $7 = $rcVlanId - A value that uniquely identifies the Virtual LAN 
			#	 associated with this entry. This value corresponds
			#	 to the lower 12 bits in the IEEE 802.1Q VLAN Tag.
			#  $8 = $rcCfmMepCcmIndication - CCM indication signifies the MEP CCM 
			#	 operational status
			#######################
			$rcCfmMaintenanceEndPointDomainName = $1
			$rcCfmMaintenanceEndPointAssociationName = $2
			$rcCfmRemoteMepId = $3
			$rcCfmLocalMepId = $4
			$rcCfmRemoteMacAddr = $5
			$rcPortIndex = $6
			$rcVlanId = $7
			$rcCfmMepCcmIndication = lookup($8,rapidCity-RAPID-CITY-rcCfmMepCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmPortMepCcmTrap"

			@AlertGroup = "Port MEP Operational Status"
			@AlertKey = "rcPortEntry." + $rcPortIndex + ", rcVlanId." + $rcVlanId
			switch($8)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "MEP on Port " + $rcPortIndex + " is Up"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0

				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "MEP on Port " + $rcPortIndex + " is Down"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### learned
					$SEV_KEY = $OS_EventId + "_learned"
					@Summary = "MEP on Port " + $rcPortIndex + " has been Learned"

					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### update
					$SEV_KEY = $OS_EventId + "_update"
					@Summary = "MEP on Port " + $rcPortIndex + " has been updated"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "MEP Status on Port " + $rcPortIndex + " is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}

			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $8
			details($rcCfmMaintenanceEndPointDomainName,$rcCfmMaintenanceEndPointAssociationName,$rcCfmRemoteMepId,$rcCfmLocalMepId,$rcCfmRemoteMacAddr,$rcPortIndex,$rcVlanId,$rcCfmMepCcmIndication)


		case "99": ### - rcnCfmVlanPortMepCcmTrap
			#######################
			# A CfmVlanPortMepCcm trap signifies that the CCM operational state has been changed
			# for a MEP configured on a vlan
			#  $1 = $rcCfmMaintenanceEndPointDomainName - Maintenance Domain Name
			#  $2 = $rcCfmMaintenanceEndPointAssociationName - Maintenance Association Name
			#  $3 = $rcCfmRemoteMepId - Remote Maintenance Endpoint ID
			#  $4 = $rcCfmLocalMepId - Local Maintenance Endpoint ID
			#  $5 = $rcCfmRemoteMacAddr - Remote MAC Address
			#  $6 = $rcPortIndex - An index value that uniquely identifies a port.
                        #        This value is similar to ifIndex in MIB2.
			#  $7 = $rcVlanId - A value that uniquely identifies the Virtual LAN 
			#	 associated with this entry. This value corresponds
			#	 to the lower 12 bits in the IEEE 802.1Q VLAN Tag.
			#  $8 = $rcCfmMepCcmIndication - CCM indication signifies the MEP CCM 
			#	 operational status
			#######################
			$rcCfmMaintenanceEndPointDomainName = $1
			$rcCfmMaintenanceEndPointAssociationName = $2
			$rcCfmRemoteMepId = $3
			$rcCfmLocalMepId = $4
			$rcCfmRemoteMacAddr = $5
			$rcPortIndex = $6
			$rcVlanId = $7
			$rcCfmMepCcmIndication = lookup($8,rapidCity-RAPID-CITY-rcCfmMepCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmVlanPortMepCcmTrap"

			@AlertGroup = "VLAN MEP Operational Status"
			@AlertKey = "rcPortEntry." + $rcPortIndex + ", rcVlanId." + $rcVlanId
			switch($8)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "MEP on VLAN " + $rcVlanId + " is Up"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0

				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "MEP on VLAN " + $rcVlanId + " is Down"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### learned
					$SEV_KEY = $OS_EventId + "_learned"
					@Summary = "MEP on VLAN " + $rcVlanId + " has been Learned"

					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### update
					$SEV_KEY = $OS_EventId + "_update"
					@Summary = "MEP on VLAN " + $rcVlanId + " has been updated"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "MEP Status on VLAN " + $rcVlanId + " is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $8
			details($rcCfmMaintenanceEndPointDomainName,$rcCfmMaintenanceEndPointAssociationName,$rcCfmRemoteMepId,$rcCfmLocalMepId,$rcCfmRemoteMacAddr,$rcPortIndex,$rcVlanId,$rcCfmMepCcmIndication)


		case "100": ### - rcnCfmEndptMepCcmTrap
			#######################
			# A CfmEndptMepCcm trap signifies that the CCM operational state has been changed
			# for a MEP configured on an endpoint
			#  $1 = $rcCfmMaintenanceEndPointDomainName - Maintenance Domain Name
			#  $2 = $rcCfmMaintenanceEndPointAssociationName - Maintenance Association Name
			#  $3 = $rcCfmRemoteMepId - Remote Maintenance Endpoint ID
			#  $4 = $rcCfmLocalMepId - Local Maintenance Endpoint ID
			#  $5 = $rcCfmRemoteMacAddr - Remote MAC Address
			#  $6 = $rcCfmIsidId - Service Instance ID of the I component
			#  $7 = $rcIsidBackboneVlan - Backbone Vlan which is used to carry Service 
			#	 Instance Over a Provider Backbone network
			#  $8 = $rcPortIndex - An index value that uniquely identifies a port.
                        #        This value is similar to ifIndex in MIB2.
			#  $9 = $rcCfmMepCcmIndication - CCM indication signifies the MEP CCM 
			#	 operational status
			#######################
			$rcCfmMaintenanceEndPointDomainName = $1
			$rcCfmMaintenanceEndPointAssociationName = $2
			$rcCfmRemoteMepId = $3
			$rcCfmLocalMepId = $4
			$rcCfmRemoteMacAddr = $5
			$rcCfmIsidId = $6
			$rcIsidBackboneVlan = $7
			$rcPortIndex = $8
			$rcCfmMepCcmIndication = lookup($9,rapidCity-RAPID-CITY-rcCfmMepCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmEndptMepCcmTrap"

			@AlertGroup = "Endpoint MEP Operational Status"
			@AlertKey = "rcPortEntry." + $rcPortIndex + ", rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId
			switch($9)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "MEP on Endpoint rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " is Up"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0

				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "MEP on Endpoint rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " is Down"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### learned
					$SEV_KEY = $OS_EventId + "_learned"
					@Summary = "MEP on Endpoint rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId +" has been Learned"

					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### update
					$SEV_KEY = $OS_EventId + "_update"
					@Summary = "MEP on Endpoint rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " has been updated"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "MEP Status on Endpoint rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $9
			details($rcCfmMaintenanceEndPointDomainName,$rcCfmMaintenanceEndPointAssociationName,$rcCfmRemoteMepId,$rcCfmLocalMepId,$rcCfmRemoteMacAddr,$rcCfmIsidId,$rcIsidBackboneVlan,$rcPortIndex,$rcCfmMepCcmIndication)


		case "101": ### - rcnCfmEndptClientMepCcmTrap
			#######################
			# A CfmEndptClientMepCcmtrap signifies that the CCM operational state has been changed
			# for a MEP
			#  $1 = $rcCfmMaintenanceEndPointDomainName - Maintenance Domain Name
			#  $2 = $rcCfmMaintenanceEndPointAssociationName - Maintenance Association Name
			#  $3 = $rcCfmRemoteMepId - Remote Maintenance Endpoint ID
			#  $4 = $rcCfmLocalMepId - Local Maintenance Endpoint ID
			#  $5 = $rcCfmRemoteMacAddr - Remote MAC Address
			#  $6 = $rcCfmIsidId - Service Instance ID of the I component
			#  $7 = $rcIsidBackboneVlan - Backbone Vlan which is used to carry Service 
			#	 Instance Over a Provider Backbone network
			#  $8 = $rcPortIndex - An index value that uniquely identifies a port.
                        #        This value is similar to ifIndex in MIB2.
			#  $9 = $rcCfmMepCcmIndication - CCM indication signifies the MEP CCM 
			#	 operational status
			#######################
			$rcCfmMaintenanceEndPointDomainName = $1
			$rcCfmMaintenanceEndPointAssociationName = $2
			$rcCfmRemoteMepId = $3
			$rcCfmLocalMepId = $4
			$rcCfmRemoteMacAddr = $5
			$rcCfmIsidId = $6
			$rcIsidBackboneVlan = $7
			$rcPortIndex = $8
			$rcCfmMepCcmIndication = lookup($9,rapidCity-RAPID-CITY-rcCfmMepCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmEndptClientMepCcmTrap"

			@AlertGroup = "Endpoint Client MEP Operational Status"
			@AlertKey = "rcPortEntry." + $rcPortIndex + ", rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId
			switch($9)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "MEP on Endpoint Client rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " is Up"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0

				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "MEP on Endpoint Client rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " is Down"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### learned
					$SEV_KEY = $OS_EventId + "_learned"
					@Summary = "MEP on Endpoint Client rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId +" has been Learned"

					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### update
					$SEV_KEY = $OS_EventId + "_update"
					@Summary = "MEP on Endpoint Client rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " has been updated"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "MEP Status on Endpoint Client rcIsidBackboneVlan." + $rcIsidBackboneVlan + ", rcCfmIsidId." + $rcCfmIsidId + " is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $9
			details($rcCfmMaintenanceEndPointDomainName,$rcCfmMaintenanceEndPointAssociationName,$rcCfmRemoteMepId,$rcCfmLocalMepId,$rcCfmRemoteMacAddr,$rcCfmIsidId,$rcIsidBackboneVlan,$rcPortIndex,$rcCfmMepCcmIndication)


		case "102": ### - rcnCfmEndptCvidClientMepCcmTrap
			#######################
			# A CfmEndptCvidClientMepCcm trap signifies that the
			# CCM operational state has been changed for a MEP
			#  $1 = $rcCfmMaintenanceEndPointDomainName - Maintenance Domain Name
			#  $2 = $rcCfmMaintenanceEndPointAssociationName - Maintenance Association Name
			#  $3 = $rcCfmRemoteMepId - Remote Maintenance Endpoint ID
			#  $4 = $rcCfmLocalMepId - Local Maintenance Endpoint ID
			#  $5 = $rcCfmRemoteMacAddr - Remote MAC Address
			#  $6 = $rcCfmIsidId - Service Instance ID of the I component
			#  $7 = $rcPortIndex - An index value that uniquely identifies a port.
                        #        This value is similar to ifIndex in MIB2.
			#  $8 = $rcCfmCvid - value that uniquely identifies the Customer
			#	 Vlan Id in i-sid endpt.
			#  $9 = $rcCfmMepCcmIndication - CCM indication signifies the MEP CCM 
			#	 operational status
			#######################
			$rcCfmMaintenanceEndPointDomainName = $1
			$rcCfmMaintenanceEndPointAssociationName = $2
			$rcCfmRemoteMepId = $3
			$rcCfmLocalMepId = $4
			$rcCfmRemoteMacAddr = $5
			$rcCfmIsidId = $6
			$rcPortIndex = $7
			$rcCfmCvid = $8
			$rcCfmMepCcmIndication = lookup($9,rapidCity-RAPID-CITY-rcCfmMepCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmEndptCvidClientMepCcmTrap"

			@AlertGroup = "Customer VLAN ID MEP Operational Status"
			@AlertKey = "rcPortEntry." + $rcPortIndex + ", rcCfmCvid." + $rcCfmCvid

			switch($9)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "MEP on Customer VLAN ID" + $rcCfmCvid + " is Up"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0

				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "MEP on Customer VLAN ID" + $rcCfmCvid + " is Down"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### learned
					$SEV_KEY = $OS_EventId + "_learned"
					@Summary = "MEP on Customer VLAN ID" + $rcCfmCvid +" has been Learned"

					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### update
					$SEV_KEY = $OS_EventId + "_update"
					@Summary = "MEP on Customer VLAN ID" + $rcCfmCvid + " has been updated"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "MEP Status on Customer VLAN ID" + $rcCfmCvid + " is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}

			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $9
			details($rcCfmMaintenanceEndPointDomainName,$rcCfmMaintenanceEndPointAssociationName,$rcCfmRemoteMepId,$rcCfmLocalMepId,$rcCfmRemoteMacAddr,$rcCfmIsidId,$rcPortIndex,$rcCfmCvid,$rcCfmMepCcmIndication)


		case "103": ### - rcnCfmTrunkGroupNewActiveTrunkTrap
			#######################
			# A TrunkGroupCcm trap signifies that the active trunk has been changed
			#  $1 = $rcTlsTdiEndptTrunkGroup - Trunk Group Name
			#  $2 = $rcCfmTrunkGroupActiveTrunk - Trunk Group PBT Active Trunk Name
			#  $3 = $rcCfmTrunkGroupIndication - A Trunk group CCM indication signifies 
			#	 what kind of protection failure within the trunk group
			#######################
			$rcTlsTdiEndptTrunkGroup = $1
			$rcCfmTrunkGroupActiveTrunk = $2
			$rcCfmTrunkGroupIndication = lookup($3,rapidCity-RAPID-CITY-rcCfmTrunkGroupIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkGroupNewActiveTrunkTrap"

			@AlertGroup = "Active Trunk Change"
			@AlertKey = "rcTlsTdiEndptTrunkGroup." + $rcTlsTdiEndptTrunkGroup + ", rcCfmTrunkGroupActiveTrunk. " + $rcCfmTrunkGroupActiveTrunk

			switch($3)
			{
				case "1": ### majorFailure
					$SEV_KEY = $OS_EventId + "_majorFailure"
					@Summary = "Trunk Group " + $rcTlsTdiEndptTrunkGroup + " has experienced a Major Failure"

					$DEFAULT_Severity = 5
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "2": ### primaryFailed
					$SEV_KEY = $OS_EventId + "_primaryFailed"
					@Summary = "Primary has failed for Trunk Group " + $rcTlsTdiEndptTrunkGroup

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### secondaryFailed
					$SEV_KEY = $OS_EventId + "_secondaryFailed"
					@Summary = "Secondary has failed for Trunk Group " + $rcTlsTdiEndptTrunkGroup

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### manualSwitched
					$SEV_KEY = $OS_EventId + "_manualSwitched"
					@Summary = "Active Trunk " + $rcCfmTrunkGroupActiveTrunk + "has been manually switched"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "5": ### reversion
					$SEV_KEY = $OS_EventId + "_reversion"
					@Summary = "Reversion has occurred for Trunk Group " + $rcTlsTdiEndptTrunkGroup

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "Active Trunk Change Status is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}

			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $3
			details($rcTlsTdiEndptTrunkGroup,$rcCfmTrunkGroupActiveTrunk,$rcCfmTrunkGroupIndication)


        case "104": ### rcTlsTdiWatermarkTrap

            ##########
            # A Watermark trap signifies that the r-mod Mac Table for a TDI has
            # reached its high watermark or is already full.
            #
            # $1 = rcTlsTdiId - Transparent Domaine Identifier.
            # $2 = rcTlsSlot - Slot Number.
            # $3 = rcTlsEndptWatermarkIndication - A Watermark indication
            #        signifies that the Mac Table for the endpoint has reached
            #        its high watermark or already full.
            ##########

            $rcTlsTdiId = $1
            $rcTlsSlot = $2
            $rcTlsEndptWatermarkIndication = lookup($3, rcTlsEndptWatermarkIndication) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcTlsTdiWatermarkTrap"

            @AlertGroup = "TDI r-mod MAC Table Threshold"
            @AlertKey = "TDI-ID." + $1 + ", Slot." + $2
            switch($3)
            {
                case "1": ### threasholdReached
                    $SEV_KEY = $OS_EventId + "_threasholdReached"
                    @Summary = "TDI r-mod MAC Table Threashold Reached"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
	            case "2": ### tableFull
                    $SEV_KEY = $OS_EventId + "_tableFull"
                    @Summary = "TDI r-mod MAC Table Full"
        
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "TDI r-mod MAC Table Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( TDI: " + $1 + ", Slot: " + $2 + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcTlsTdiId,$rcTlsSlot,$rcTlsEndptWatermarkIndication)

        case "105": ### rcTlsIsidWatermarkTrap

            ##########
            # A Watermark trap signifies that the r-mod Mac Table for an ISID
            # has reached its high watermark or is already full.
            #
            # $1 = rcTlsIsidId - I-SID Identifier
            # $2 = rcTlsSlot - Slot Number
            # $3 = rcTlsEndptWatermarkIndication - A Watermark indication
            #        signifies that the Mac Table for the endpoint has reached
            #        its high watermark or already full.
            ##########

            $rcTlsIsidId = $1
            $rcTlsSlot = $2
            $rcTlsEndptWatermarkIndication = lookup($3, rcTlsEndptWatermarkIndication) + " ( " + $3 + " )"

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcTlsIsidWatermarkTrap"

            @AlertGroup = "I-SID r-mod MAC Table Threshold"
            @AlertKey = "I-SID." + $1 + ", Slot." + $2
            switch($3)
            {
                case "1": ### threasholdReached
                    $SEV_KEY = $OS_EventId + "_threasholdReached"
                    @Summary = "I-SID r-mod MAC Table Threashold Reached"
        
                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
	            case "2": ### tableFull
                    $SEV_KEY = $OS_EventId + "_tableFull"
                    @Summary = "I-SID r-mod MAC Table Full"
        
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "I-SID r-mod MAC Table Status Unknown"
        
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Summary = @Summary + "  ( " + @AlertKey + " )"

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $3

            details($rcTlsIsidId,$rcTlsSlot,$rcTlsEndptWatermarkIndication)

		case "106": ### - rcnCfmTrunkMepCcmTrap
			#######################
			# A CfmTrunkMepCcm trap signifies that the CCM operational state has been changed
			# for a MEP configured on a Trunk
			#  $1 = $rcCfmMaintenanceEndPointDomainName - Maintenance Domain Name
			#  $2 = $rcCfmMaintenanceEndPointAssociationName - Maintenance Association Name
			#  $3 = $rcCfmRemoteMepId - Remote Maintenance Endpoint ID
			#  $4 = $rcCfmLocalMepId - Local Maintenance Endpoint ID
			#  $5 = $rcCfmRemoteMacAddr - Remote MAC Address
			#  $6 = $rcCfmTrunkSourceMac - Trunk Source Mac (local switch PBT mac)
			#  $7 = $rcCfmTrapTrunkName - PBT Trunk Name
			#  $8 = $rcPortIndex - An index value that uniquely identifies a port.
                        #        This value is similar to ifIndex in MIB2.
			#  $9 = $rcVlanId - A value that uniquely identifies the Virtual LAN 
			#	 associated with this entry. This value corresponds
			#	 to the lower 12 bits in the IEEE 802.1Q VLAN Tag.
			#  $10 = $rcCfmTrunkReverseVlanId - PBT trunk reverse VLAN ID
			#  $11 = $rcCfmMepCcmIndication -  CCM indication signifies the MEP CCM 
			#	 operational status
			#######################
			$rcCfmMaintenanceEndPointDomainName = $1
			$rcCfmMaintenanceEndPointAssociationName = $2
			$rcCfmRemoteMepId = $3
			$rcCfmLocalMepId = $4
			$rcCfmRemoteMacAddr = $5
			$rcCfmTrunkSourceMac = $6
			$rcCfmTrapTrunkName = $7
			$rcPortIndex = $8
			$rcVlanId = $9
			$rcCfmTrunkReverseVlanId = $10
			$rcCfmMepCcmIndication = lookup($11,rapidCity-RAPID-CITY-rcCfmMepCcmIndication)

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkMepCcmTrap"

			@AlertGroup = "Trunk MEP Operational Status"
			@AlertKey = "rcPortEntry." + $rcPortIndex + ", rcCfmTrapTrunkName." + $rcCfmTrapTrunkName + ", rcCfmTrunkReverseVlanId." + $rcCfmTrunkReverseVlanId

			switch($11)
			{
				case "1": ### up
					$SEV_KEY = $OS_EventId + "_up"
					@Summary = "MEP on Trunk" + $rcCfmTrapTrunkName + " is Up"

					$DEFAULT_Severity = 1
					$DEFAULT_Type = 2
					$DEFAULT_ExpireTime = 0

				case "2": ### down
					$SEV_KEY = $OS_EventId + "_down"
					@Summary = "MEP on Trunk" + $rcCfmTrapTrunkName + " is Down"

					$DEFAULT_Severity = 4
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "3": ### learned
					$SEV_KEY = $OS_EventId + "_learned"
					@Summary = "MEP on Trunk" + $rcCfmTrapTrunkName +" has been Learned"

					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				case "4": ### update
					$SEV_KEY = $OS_EventId + "_update"
					@Summary = "MEP on Trunk" + $rcCfmTrapTrunkName + " has been updated"

					$DEFAULT_Severity = 3
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0

				default:
					$SEV_KEY = $OS_EventId + "_unknown"
					@Summary = "MEP Status on Trunk" + $rcCfmTrapTrunkName + " is Unknown"
        
					$DEFAULT_Severity = 2
					$DEFAULT_Type = 1
					$DEFAULT_ExpireTime = 0
			}

			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $11
			details($rcCfmMaintenanceEndPointDomainName,$rcCfmMaintenanceEndPointAssociationName,$rcCfmRemoteMepId,$rcCfmLocalMepId,$rcCfmRemoteMacAddr,$rcCfmTrunkSourceMac,$rcCfmTrapTrunkName,$rcPortIndex,$rcVlanId,$rcCfmTrunkReverseVlanId,$rcCfmMepCcmIndication)


		case "107": ### - rcnCfmTrunkGroupTrap
			#######################
			# A rcnCfmTrunkGroupTrap trap signifies that two trunks in the
			# trunk group are not operational or at least one trunk in the
			# trunk group comes back up
			#  $1 = $rcTlsTdiEndptTrunkGroup - Trunk Group Name
			#  $2 = $rcCfmTrunkGroupProtected - signifies trunk group was protected or was not protected
			#  $3 = $rcCfmTrunkGroupPrimaryTrunk - Trunk Group PBT Primary Trunk Name
			#######################
			$rcTlsTdiEndptTrunkGroup = $1
			$rcCfmTrunkGroupProtected = lookup($2,rapidCity-RAPID-CITY-rcCfmTrunkGroupProtected)
			$rcCfmTrunkGroupPrimaryTrunk = $3

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkGroupTrap"

			@AlertGroup = "Trunk Group Operational Status"
			@AlertKey = "rcTlsTdiEndptTrunkGroup." + $rcTlsTdiEndptTrunkGroup + ", rcCfmTrunkGroupPrimaryTrunk." +$rcCfmTrunkGroupPrimaryTrunk
			@Summary = "Trunk Group " + $rcTlsTdiEndptTrunkGroup + "[" + $rcCfmTrunkGroupProtected +"] is not operational"

			$DEFAULT_Severity = 1
			$DEFAULT_Type = 2
			$DEFAULT_ExpireTime = 0
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + $2
			details($rcTlsTdiEndptTrunkGroup,$rcCfmTrunkGroupProtected,$rcCfmTrunkGroupPrimaryTrunk)


		case "108": ### - rcnCfmTrunkGroupRecoverProtectionTrap
			#######################
			# A rcnCfmTrunkGroupRecoverProtectionTrap trap signifies 
			# that trunk group has recovered protection
			#  $1 = $rcTlsTdiEndptTrunkGroup -  Trunk Group Name
			#  $2 = $rcCfmTrunkGroupPrimaryTrunk - Trunk Group PBT Primary Trunk Name
			#######################
			$rcTlsTdiEndptTrunkGroup = $1
			$rcCfmTrunkGroupPrimaryTrunk = $2

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcnCfmTrunkGroupRecoverProtectionTrap"

			@AlertGroup = "Trunk Group Change"
			@AlertKey = "rcTlsTdiEndptTrunkGroup." + $rcTlsTdiEndptTrunkGroup + " , rcCfmTrunkGroupPrimaryTrunk." + $rcCfmTrunkGroupPrimaryTrunk
			@Summary = "The Active Trunk has recovered protection [Group: " + $rcTlsTdiEndptTrunkGroup + ", Primary: " + $rcCfmTrunkGroupPrimaryTrunk 

			$DEFAULT_Severity = 1
			$DEFAULT_Type = 2
			$DEFAULT_ExpireTime = 0
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap
			details($rcTlsTdiEndptTrunkGroup,$rcCfmTrunkGroupPrimaryTrunk)


		case "109": ### - rcInvalidEsuModIdTrap
			#######################
			# A rcEsuInvalidModIdTrap trap signifies that invalid ModID is configured on the ESU
			#  $1 = $rcBanRingTopoRbsId - BAN Ring RBS ID.
			#  $2 = $rcBanRingTopoRbsMac - BAN Ring RBS Mac address.
			#######################
			$rcBanRingTopoRbsId = $1
			$rcBanRingTopoRbsMac = $2

			$OS_EventId = "SNMPTRAP-rcTraps-RAPID-CITY-rcInvalidEsuModIdTrap"

			@AlertGroup = "ModId Status"
			@AlertKey = "rcBanRingTopoRbsId." + $rcBanRingTopoRbsId + " , rcBanRingTopoRbsMac." + $rcBanRingTopoRbsMac
			@Summary = "Invalid ModID configured on ESU"

			$DEFAULT_Severity = 4
			$DEFAULT_Type = 1
			$DEFAULT_ExpireTime = 0
			@Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap
			details($rcBanRingTopoRbsId,$rcBanRingTopoRbsMac)
        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

    ##########
    # Handle Severity via Lookup.
    ##########
    
    if(exists($SEV_KEY))
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, rapidcity-RAPID-CITY_sev)
    }
    else
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, rapidcity-RAPID-CITY_sev)
    }
    include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"
    
    ##########
    # End of Severity via Lookup.
    ##########
    
    ##########
    # Enter "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-snmptrap/rapidcity/rapidcity-RAPID-CITY.adv.include.snmptrap.rules"
    include "$NC_RULES_HOME/include-snmptrap/rapidcity/rapidcity-RAPID-CITY.user.include.snmptrap.rules"
    
    ##########
    # End of "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... rapidcity-RAPID-CITY.include.snmptrap.rules >>>>>")

case ".1.3.6.1.4.1.2272.1.64.1": ### Nortel Ethernet Routing Switch 8600 (formerly Rapid City Accelar) SLPP - Notifications from RAPID-CITY (v330, 06/05/00)

    log(DEBUG, "<<<<< Entering... rapidcity-RAPID-CITY.include.snmptrap.rules >>>>>")

    @Agent = "Nortel-ERS8600 SLPP"
    @Class = ""

    $OPTION_TypeFieldUsage = "3.6"

    switch($specific-trap)
    {
        case "1": ### rcnSlppPortDownEvent

            ##########
            # A port down event that has occurred due to SLPP. The user is
            # notified of the expected Vlan ID along with the Vlan ID and
            # source MAC address of the packet coming in on the port
            # identified. The first two objects can be used to lookup instance
            # info for port id and vlan id.
            #
            # $1 = rcSlppPortSlppEnable - Flag to indicate whether the port
            #        entry is active or not for SLPP.
            # $2 = rcSlppVlanSlppEnable - Flag to indicate whether the VLAN
            #        entry is active or not for SLPP.
            # $3 = rcSlppIncomingVlanId - Vlan id of the classified packet on
            #        the port brought down by SLPP.
            # $4 = rcSlppSrcMacAddress - Source MAC address in the classified
            #        packet on the port brought down by SLPP.
            ##########

            $rcSlppPortSlppEnable = lookup($1, TruthValue) + " ( " + $1 + " )"
            $rcSlppPortIfIndex = extract($OID1, "\.([0-9]+)$")
            $rcSlppVlanSlppEnable = lookup($2, TruthValue) + " ( " + $2 + " )"
            $rcSlppVlanVlanId = extract($OID2, "\.([0-9]+)$")
            $rcSlppIncomingVlanId = $3
            $rcSlppSrcMacAddress = $4_hex

            $OS_EventId = "SNMPTRAP-rapidcity-RAPID-CITY-rcnSlppPortDownEvent"

            @AlertGroup = "Port SLPP Status"
            @AlertKey = "rcSlppPortEntry." + $rcSlppPortIfIndex + ", rcSlppVlanEntry." + $rcSlppVlanVlanId
            @Summary = "Port Down, SLPP  ( Port: " + $rcSlppPortIfIndex + ", VLAN: " + $rcSlppVlanVlanId + " )"

            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

            details($rcSlppPortSlppEnable,$rcSlppVlanSlppEnable,$rcSlppIncomingVlanId,$rcSlppSrcMacAddress)

        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

    ##########
    # Handle Severity via Lookup.
    ##########
    
    if(exists($SEV_KEY))
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, rapidcity-RAPID-CITY_sev)
    }
    else
    {
        [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, rapidcity-RAPID-CITY_sev)
    }
    include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"
    
    ##########
    # End of Severity via Lookup.
    ##########

    ##########
    # Enter "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-snmptrap/rapidcity/rapidcity-RAPID-CITY_slpp.adv.include.snmptrap.rules"
    include "$NC_RULES_HOME/include-snmptrap/rapidcity/rapidcity-RAPID-CITY_slpp.user.include.snmptrap.rules"
    
    ##########
    # End of "Advanced" and "User" includes.
    ##########
    
    include "$NC_RULES_HOME/include-common/load_include.rules"

    log(DEBUG, "<<<<< Leaving... rapidcity-RAPID-CITY.include.snmptrap.rules >>>>>")
