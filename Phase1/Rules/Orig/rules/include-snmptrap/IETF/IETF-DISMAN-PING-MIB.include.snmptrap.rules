###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    IETF-DISMAN-PING-MIB.include.snmptrap.rules 3.2
#    2005/07/27 Robert Cowart
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  IETF-DISMAN-PING-MIB
#
###############################################################################

case ".1.3.6.1.2.1.80": ### Distributed Management, Ping - Notifications from DISMAN-PING-MIB

    log(DEBUG, "<<<<< Entering... IETF-DISMAN-PING-MIB.include.snmptrap.rules >>>>>")

    @Agent = "IETF-DISMAN-PING-MIB"
    @Class = "40086"

    $OPTION_TypeFieldUsage = "3.6"

    ##########
    # $1 = pingCtlTargetAddressType
    # $2 = pingCtlTargetAddress
    # $3 = pingResultsOperStatus
    # $4 = pingResultsIpTargetAddressType
    # $5 = pingResultsIpTargetAddress
    # $6 = pingResultsMinRtt
    # $7 = pingResultsMaxRtt
    # $8 = pingResultsAverageRtt
    # $9 = pingResultsProbeResponses
    # $10 = pingResultsSentProbes
    # $11 = pingResultsRttSumOfSquares
    # $12 = pingResultsLastGoodProbe
    ##########

    $OS_RemoteNodeAlias = @NodeAlias
    @Node = $2
    $OS_LocalNodeAlias = $2
    switch($1)
    {
        case "16":
            @NodeAlias = ""
        default:
            @NodeAlias = $2
    }
    
    switch($specific-trap)
    {
        case "1": ### pingProbeFailed
            
            $Node = @NodeAlias
            
            $pingCtlTargetAddressType = lookup($1, InetAddressType) + " ( " + $1 + " )"
            $pingCtlTargetAddress = $2
            $pingResultsOperStatus = lookup($3, pingResultsOperStatus) + " ( " + $3 + " )"
            $pingResultsIpTargetAddressType = lookup($4, InetAddressType) + " ( " + $4 + " )"
            $pingResultsIpTargetAddress = $5
            $pingResultsMinRtt = $6 + "ms"
            $pingResultsMaxRtt = $7 + "ms"
            $pingResultsAverageRtt = $8 + "ms"
            $pingResultsProbeResponses = $9
            $pingResultsSentProbes = $10
            $pingResultsRttSumOfSquares = $11 + "ms"
            $pingResultsLastGoodProbe = $12
            $pingCtlRemoteHost = $Node
            details($pingCtlTargetAddressType,$pingCtlTargetAddress,$pingResultsOperStatus,$pingResultsIpTargetAddressType,$pingResultsIpTargetAddress,$pingResultsMinRtt,$pingResultsMaxRtt,$pingResultsAverageRtt,$pingResultsProbeResponses,$pingResultsSentProbes,$pingResultsRttSumOfSquares,$pingResultsLastGoodProbe,$pingCtlRemoteHost)
            
            $OS_EventId = "SNMPTRAP-IETF-DISMAN-PING-MIB-pingProbeFailed"
            
            @AlertGroup = "Ping Probe Status"
            @AlertKey = "pingCtlEntry." + extract($OID1, "3\.6\.1\.2\.1\.80\.1\.2\.1\.3\.(.*)$") ### pingCtlOwnerIndex.pingCtlTestName
            @Summary = "Ping Probe Failed, see details  ( from " + $Node + " )"
            
            $DEFAULT_Severity = 2
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        case "2": ### pingTestFailed

            $Node = @NodeAlias
            
            $pingCtlTargetAddressType = lookup($1, InetAddressType) + " ( " + $1 + " )"
            $pingCtlTargetAddress = $2
            $pingResultsOperStatus = lookup($3, pingResultsOperStatus) + " ( " + $3 + " )"
            $pingResultsIpTargetAddressType = lookup($4, InetAddressType) + " ( " + $4 + " )"
            $pingResultsIpTargetAddress = $5
            $pingResultsMinRtt = $6 + "ms"
            $pingResultsMaxRtt = $7 + "ms"
            $pingResultsAverageRtt = $8 + "ms"
            $pingResultsProbeResponses = $9
            $pingResultsSentProbes = $10
            $pingResultsRttSumOfSquares = $11 + "ms"
            $pingResultsLastGoodProbe = $12
            $pingCtlRemoteHost = $Node
            details($pingCtlTargetAddressType,$pingCtlTargetAddress,$pingResultsOperStatus,$pingResultsIpTargetAddressType,$pingResultsIpTargetAddress,$pingResultsMinRtt,$pingResultsMaxRtt,$pingResultsAverageRtt,$pingResultsProbeResponses,$pingResultsSentProbes,$pingResultsRttSumOfSquares,$pingResultsLastGoodProbe,$pingCtlRemoteHost)
            
            $OS_EventId = "SNMPTRAP-IETF-DISMAN-PING-MIB-pingTestFailed"
            
            @AlertGroup = "Ping Test Status"
            @AlertKey = "pingCtlEntry." + extract($OID1, "3\.6\.1\.2\.1\.80\.1\.2\.1\.3\.(.*)$") ### pingCtlOwnerIndex.pingCtlTestName
            @Summary = "Ping Test Failed, see details  ( from " + $Node + " )"
            
            $DEFAULT_Severity = 3
            $DEFAULT_Type = 1
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        case "3": ### pingTestCompleted

            $Node = @NodeAlias
            
            $pingCtlTargetAddressType = lookup($1, InetAddressType) + " ( " + $1 + " )"
            $pingCtlTargetAddress = $2
            $pingResultsOperStatus = lookup($3, pingResultsOperStatus) + " ( " + $3 + " )"
            $pingResultsIpTargetAddressType = lookup($4, InetAddressType) + " ( " + $4 + " )"
            $pingResultsIpTargetAddress = $5
            $pingResultsMinRtt = $6 + "ms"
            $pingResultsMaxRtt = $7 + "ms"
            $pingResultsAverageRtt = $8 + "ms"
            $pingResultsProbeResponses = $9
            $pingResultsSentProbes = $10
            $pingResultsRttSumOfSquares = $11 + "ms"
            $pingResultsLastGoodProbe = $12
            $pingCtlRemoteHost = $Node
            details($pingCtlTargetAddressType,$pingCtlTargetAddress,$pingResultsOperStatus,$pingResultsIpTargetAddressType,$pingResultsIpTargetAddress,$pingResultsMinRtt,$pingResultsMaxRtt,$pingResultsAverageRtt,$pingResultsProbeResponses,$pingResultsSentProbes,$pingResultsRttSumOfSquares,$pingResultsLastGoodProbe,$pingCtlRemoteHost)
            
            $OS_EventId = "SNMPTRAP-IETF-DISMAN-PING-MIB-pingTestCompleted"
            
            @AlertGroup = "Ping Test Status"
            @AlertKey = "pingCtlEntry." + extract($OID1, "3\.6\.1\.2\.1\.80\.1\.2\.1\.3\.(.*)$") ### pingCtlOwnerIndex.pingCtlTestName
            @Summary = "Ping Test Complete, see details  ( from " + $Node + " )"
            
            $DEFAULT_Severity = 1
            $DEFAULT_Type = 2
            $DEFAULT_ExpireTime = 0

            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap

        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, IETF-DISMAN-PING-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, IETF-DISMAN-PING-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-DISMAN-PING-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-DISMAN-PING-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... IETF-DISMAN-PING-MIB.include.snmptrap.rules >>>>>")
