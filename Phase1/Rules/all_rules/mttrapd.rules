########################################################################
#
#       
#       
#       
#       
#       
#       
#       mttrapd.rules
#
#
#
#######################################################################
#
# The following are the elements generated by this Mttrapd Probe.
#
# $community  		: V1 and V2c The SNMP community string.
#
# $contextEngineID 	: V3 Identifies the engine associated with the data.
#
# $enterprise 		: V1 The SNMP enterprise string.
#
# $EventCount 		: V1, V2c, and V3 The number of traps processed during the current execution of the probe.
#
# $generic-trap 	: V1 The SNMP generic trap integer value.
#
# $IPaddress 		: V1, V2c, and V3 The IP address (origin of the SNMP trap).
#
# $Node 		: V1, V2c, and V3 The node name (origin of the SNMP trap). IP address (if node name cannot be resolved).
#
# $notify 		:  V2c and V3 Notify V2c specific field.
#
# $PeerAddress 		: V1, V2c, and V3 The host name or IP address where the SNMP trap was received from.
#
# $PeerIPaddress 	: V1, V2c, and V3 The IP address where the SNMP trap was received from.
#
# $Protocol 		: V1, V2c, and V3 The protocol of the trap received. This can be either UDP or TCP.
#
# $ReceivedPort 	: V1, V2c, and V3 The port number where the SNMP trap was received from. This is determined by the Port property.
#
# $ReceivedTime 	: V1, V2c, and V3 The time that the SNMP packet was received from the network interface.
#
# $ReqId 		: V1 The SNMP request ID.
#
# $securityEngineID 	: V3 Engine ID of the authoritative SNMP entity. For informs, this is the engine ID of the probe. 
#		      	  For traps, this is the engine ID of the source of the trap.
#
# $securityLevel    	: V3 Security level of the trap or inform: 
#                   	  noAuth - trap or inform had no authentication and no privacy 
#                         authNoPriv - trap or inform had authentication, but no privacy 
#                         authPriv - trap or inform had authentication and privacy
#
# $securityName 	: V3 Security name used for trap authentication.
#
# $SNMP_Version 	: V1, V2c, and V3 Has the value 1 for SNMP V1 traps and the value 2 for SNMP V2c traps.
#
# $specific-trap 	: V1 The SNMP specific trap integer value.
#
# $Uptime 		: V1 and V2c The SNMP uptime for traps expressed in the format 0:00:00.
#
# $UpTime 		: V1 and V2c The SNMP uptime for traps expressed as an integer.
#
# $n_raw		: raw string representation of the varbind variables (containing all control characters) 
#
# $n_text 		: printable text representation of the varbind variables (with non-printable characters replaced with periods) 
#
# $n_hex 		: hexadecimal representation of the varbind variables
#
#######################################################################

###################
#
#	Arrays go here
#
###################

###################
#
#	Lookups go here
#
###################

include "CommonIncludes/enterprise.lookup"
##nec lookup table added by FF Innovise ESM 26.03.10##
## Modified Chris Janes Innovise ESM 20100406

table nec-MIB-UNIXPNMS-PASOCOMMON--MIB-UNIXPNMS-SYSTEM1_sev =  "nec/nec-MIB-UNIXPNMS-PASOCOMMON--MIB-UNIXPNMS-SYSTEM1.sev.snmptrap.lookup"
default = {"Unknown","Unknown","Unknown"}

###################
#
#	Manage ProbeWatch events
#
###################


if( match( @Manager, "ProbeWatch" ) )
{
        switch(@Summary)
        {
        case "Running ...":
                @Severity = 1
                @AlertGroup = "probestat"
                @Type = 2
        case "Going Down ...":
                @Severity = 5
                @AlertGroup = "probestat"
                @Type = 1
        default:
                @Severity = 1
        }
        @AlertKey = @Agent
        @Summary = @Agent + " probe on " + @Node + ": " + @Summary
}
else
{
		###########################################################################
		#
		#	'real' events start here
		#
		###########################################################################
    
    @Manager = "MTTrapd Probe"
    @Agent = "mttrapd"
    @Class = "300"
    
    
    ###########################################################################
    # End of default Manager, Agent, and Class
    ###########################################################################
    
    ##########
    # Check if an SNMPv2 trap and convert to SNMPv1 style tokens
    ##########
    
    if(exists($notify)) ### if $notify exists then this is an SNMPv2 trap
    {
        @Node = $PeerAddress
        @NodeAlias = $PeerIPaddress
                
        ##########
        # We'll only remove the first .iso., everything else should be just plain numbers.
        # With the mttrapd probe, this has to be done by specifying the
        # following property in the probe's properties file:
        #   MIBFile : /dev/null
        #
        ##########
    
        if(regmatch($notify, "^enterprises\..*"))
        {
            $MIBFileNotNull = 1
            $notify = ".1.3.6.1.4.1." + extract($notify, "^enterprises\.(.*)")
        }
        else if(regmatch($notify, "\.iso\." ))
        {
            $notify = ".1." + extract($notify, "\.iso\.(.*)")
        }
    
        if (nmatch($notify, ".1.3.6.1.6.3.1.1.5")) ### Trap is an SNMPv2 Generic Trap
        {
            $enterprise = extract($notify, "(.*)\.[0-9]+$")
            $specific-trap = "0"
            $generic-trap = int(extract($notify, ".*\.([0-9]+)$"))-1
        }
        else ### Trap is Enterprise Specific
        {
            if(match(extract($notify, "\.([0-9]+)\.[0-9]+$"), "0"))
            {
                $enterprise = extract($notify, "(.*)\.[0-9]+\.[0-9]+$")
            }
            else
            {
                $enterprise = extract($notify, "(.*)\.[0-9]+$")
            }
            $specific-trap = extract($notify, ".*\.([0-9]+)$")
            $generic-trap = "6"
        }
    }
    else ### This is an SNMPv1 Trap
    {
        @Node = $Node
        if(exists($IPAddress)) ### Trap is from NNM or NV Probe
        {
            $IPaddress = $IPAddress
        }
        @NodeAlias = $IPaddress
        if(regmatch($enterprise, "^iso\..*"))
        {
            $NoQuietOutput = 1
            $enterprise = ".1." + extract($enterprise, "iso\.(.*)")
        }
    }

   

    @Identifier = "" + @Node + "" + @Agent + "" + $generic-trap + "" + $specific-trap + ""
    @Manager    = "MTTrapd Probe"
    @Severity   = "1"

######################
#
# Find the enterprise
#
######################
	$EnterpriseName = lookup($enterprise, enterprise)

    if (match($generic-trap, "6"))
    {
		switch($EnterpriseName)
		{
            ##nec include rules added by FF Innovise 25.03.10##
            include "nec/nec-MIB-UNIXPNMS-PASOCOMMON--MIB-UNIXPNMS-SYSTEM1.include.snmptrap.rules"
            include"smsc/cmg_smsc.include.rules"
	
	
				default:
					@Summary    =  "Enterprise: " + $EnterpriseName + "    " + $enterprise  + "   Generic Trap:" + $generic-trap + "  Specific Trap:" + $specific-trap
					@Severity = 1
					@Type = 0
					@AlertGroup = $enterprise
					@AlertKey = $specific-trap
					@Identifier = @Node + @AlertGroup + @AlertKey
					@URL = "1 = " + $1 + "  2 = " + $2 + "  3 = " + $3 + "  4 = " + $4 + "  5 = " + $5 + "  6 = " + $6 +  "  7 = " + $7 + "  8 = " + $8 
				details($*)
		}
    }
    #
    # if it is not an Enterprise Specific snmp trap deal with
    # the Generic Trap it must be
    #
    else if (match($generic-trap, "0"))
    {
	  @Summary = "Cold Start"
	  @AlertGroup = "Generic"
	  @Severity = "4"
    }
    else if (match($generic-trap, "1")) 
    {
	  @Summary = "Warm Start"
	  @AlertGroup = "Generic"
	  @Severity = "4"
    }
    else if (match($generic-trap, "2"))
    {
	 # the $1 varbind will be ifIndex
	 @Summary = "Link Down"
	 @AlertGroup = "Generic"
	 @Severity = "5"
	 @Identifier = "" + @Node + "" + @Agent + "" + $generic-trap + "" + $specific-trap + "" + $1 + ""
	 @AlertKey   = "" + $1 + ""
    }
    else if (match($generic-trap, "3"))
    {
	 # the $1 varbind will be ifIndex
	 @Summary = "Link Up"
	 @AlertGroup = "Generic"
	 @Severity = "2"
	 @Identifier = "" + @Node + "" + @Agent + "" + $generic-trap + "" + $specific-trap + "" + $1 + ""
	 @AlertKey   = "" + $1 + ""
    }
    else if (match($generic-trap, "4"))
    {
         @Summary = "Authentication"
	 @AlertGroup = "Generic"
         @Severity = "3"
    }
    else if (match($generic-trap, "5"))
    {
	 @Summary = "Egp Neighbour Loss"
	 @AlertGroup = "Generic"
	 @Severity = "3"
    }
    else
    {
	 @Summary = "Trap type not matched"
    }
}
    
    







































	 
		
