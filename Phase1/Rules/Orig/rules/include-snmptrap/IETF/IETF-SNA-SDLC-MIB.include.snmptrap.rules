###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    IETF-SNA-SDLC-MIB.include.snmptrap.rules 1.0
#    2000/05/09 Robert Cowart
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  IETF-SNA-SDLC-MIB
#
###############################################################################

case ".1.3.6.1.2.1.41.1.3": ### SNA SDLC - Notifications from RFC1747

    log(DEBUG, "<<<<< Entering... IETF-SNA-SDLC-MIB.include.snmptrap.rules >>>>>")
    @Agent = "IETF-SNA-SDLC-MIB"
    @Class = "40086"
  
    $OPTION_TypeFieldUsage = "3.6"
    
    switch ($specific-trap)
    {
        case "1": ### sdlcPortStatusChange
        
            ##########
            # $1 = ifIndex
            # $2 = ifAdminStatus
            # $3 = ifOperStatus
            # $4 = sdlcPortOperLastFailTime
            # $5 = sdlcPortOperLastFailCause
            ##########
            
            $ifIndex = $1
            $ifAdminStatus = lookup($2, ifAdminStatus) + " ( " + $2 + " )"
            $ifOperStatus = lookup($3, ifOperStatus) + " ( " + $3 + " )"
            $sdlcPortOperLastFailTime = $4
            $sdlcPortOperLastFailCause = lookup($5, sdlcPortOperLastFailCause) + " ( " + $5 + " )"

            $OS_EventId = "SNMPTRAP-IETF-SNA-SDLC-MIB-sdlcPortStatusChange"

            @AlertGroup = "SDLC Port Status Change"
            @AlertKey = "ifEntry." + $ifIndex
            switch ($3)
            {
                case "1": ### up - ready to pass packets
                    @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Up"
                    $SEV_KEY = $OS_EventId + "_up"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "2": ### down
                    switch ($2)
                    {
                        case "1": ### up - ready to pass packets
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Down, should be Up"
                            $SEV_KEY = $OS_EventId + "_down_up"
                            $DEFAULT_Severity = 4
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Administratively Down"
                            $SEV_KEY = $OS_EventId + "_down_down"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Down, should be Testing"
                            $SEV_KEY = $OS_EventId + "_down_testing"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Down"
                            $SEV_KEY = $OS_EventId + "_down_unknown"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "3": ### testing
                    switch ($2)
                    {
                        case "1": ### up - ready to pass packets
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Testing, should be Up"
                            $SEV_KEY = $OS_EventId + "_testing_up"
                            $DEFAULT_Severity = 4
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### down
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Testing, should be Down"
                            $SEV_KEY = $OS_EventId + "_testing_down"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "3": ### testing
                            @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Administratively Testing"
                            $SEV_KEY = $OS_EventId + "_testing_testing"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                           @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Administratively unknown"
                           $SEV_KEY = $OS_EventId + "_testing_unknown"
                           $DEFAULT_Severity = 2
                           $DEFAULT_Type = 1
                           $DEFAULT_ExpireTime = 0
                    }
                default:
                    @Summary = "SDLC Port ( ifIndex = " + $1 + " ) Unknown"
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Type + " " + $2 + " " + $3 + " " + @Agent + " " + @Manager
            details($ifIndex,$ifAdminStatus,$ifOperStatus,$sdlcPortOperLastFailTime,$sdlcPortOperLastFailCause)

        case "2": ### sdlcLSStatusChange
        
            ##########
            # $1 = ifIndex
            # $2 = sdlcLSAddress
            # $3 = sdlcLSOperState
            # $4 = sdlcLSAdminState
            # $5 = sdlcLSOperLastFailTime
            # $6 = sdlcLSOperLastFailCause
            # $7 = sdlcLSOperLastFailFRMRInfo
            # $8 = sdlcLSOperLastFailCtrlIn
            # $9 = sdlcLSOperLastFailCtrlOut
            # $10 = sdlcLSOperLastFailREPLYTOs
            ##########

            @AlertGroup = "SDLC Link Station Status Change"
            $ifIndex = $1
            $sdlcLSAddress = $2
            $sdlcLSOperState = lookup($3, sdlcLSOperState) + " ( " + $3 + " )"
            $sdlcLSAdminState = lookup($4, sdlcLSAdminState) + " ( " + $4 + " )"
            $sdlcLSOperLastFailTime = $5
            $sdlcLSOperLastFailCause = lookup($6, sdlcLSOperLastFailCause) + " ( " + $6 + " )"
            $sdlcLSOperLastFailFRMRInfo = $7
            $sdlcLSOperLastFailCtrlIn = $8
            $sdlcLSOperLastFailCtrlOut = $9
            $sdlcLSOperLastFailREPLYTOs = $10
            
            @AlertKey = "sdlcLSAdminEntry." + $ifIndex + "." + $sdlcLSAddress
  
            $OS_EventId = "SNMPTRAP-IETF-SNA-SDLC-MIB-sdlcLSStatusChange"
            switch ($3)
            {
                case "1": ### discontacted
                    $FailCause = lookup($6, sdlcLSOperLastFailCause)
                    $SEV_KEY = $OS_EventId + "_discontacted"
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    switch ($4)
                    {
                        case "1": ### inactive
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Administratively Inactive: FailCause = " + $FailCause
                        case "2": ### active
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Discontacted: FailCause = " + $FailCause
                        default:
                    }
                case "2": ### contactPending
                    switch ($4)
                    {
                        case "1": ### inactive
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Contact Pending, Administratively Inactive"
                            $SEV_KEY = $OS_EventId + "_contactPending_inactive"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### active
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Contact Pending, Administratively Active"
                            $SEV_KEY = $OS_EventId + "_contactPending_active"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                           @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Contact Pending, Administratively unknown"
                           $SEV_KEY = $OS_EventId + "_contactPending_unknown"
                           $DEFAULT_Severity = 2
                           $DEFAULT_Type = 1
                           $DEFAULT_ExpireTime = 0
                    }
                case "3": ### contacted
                    @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Contacted"
                    $SEV_KEY = $OS_EventId + "_contacted"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "4": ### discontactPending
                    $FailCause = lookup($6, sdlcLSOperLastFailCause)
                    switch ($4)
                    {
                        case "1": ### inactive
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Discontact Pending, Administratively Inactive: FailCause = " + $FailCause
                            $SEV_KEY = $OS_EventId + "_discontactPending_inactive"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### active
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Discontact Pending, Administratively Active: FailCause = " + $FailCause
                            $SEV_KEY = $OS_EventId + "_discontactPending_active"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Discontact Pending, Administratively unknown"
                            $SEV_KEY = $OS_EventId + "_discontactPending_unknown"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                default:
                    @Summary = "SDLC Link Station ( sdlcLSAddress = " + $2 + " ) Unknown"
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Type + " " + $3 + " " + $4 + " " + @Agent + " " + @Manager
            details($ifIndex,$sdlcLSAddress,$sdlcLSOperState,$sdlcLSAdminState,$sdlcLSOperLastFailTime,$sdlcLSOperLastFailCause,$sdlcLSOperLastFailFRMRInfo,$sdlcLSOperLastFailCtrlIn,$sdlcLSOperLastFailCtrlOut,$sdlcLSOperLastFailREPLYTOs)

        case "3": ### sdlcLSStatusChange1
        
            ##########
            # $1 = sdlcLSOperState
            # $2 = sdlcLSAdminState
            # $3 = sdlcLSOperLastFailTime
            # $4 = sdlcLSOperLastFailCause
            # $5 = sdlcLSOperLastFailFRMRInfo
            # $6 = sdlcLSOperLastFailCtrlIn
            # $7 = sdlcLSOperLastFailCtrlOut
            # $8 = sdlcLSOperLastFailREPLYTOs
            ##########

            $sdlcLSOperState = lookup($1, sdlcLSOperState) + " ( " + $1 + " )"
            $sdlcLSAdminState = lookup($2, sdlcLSAdminState) + " ( " + $2 + " )"
            $sdlcLSOperLastFailTime = $3
            $sdlcLSOperLastFailCause = lookup($4, sdlcLSOperLastFailCause) + " ( " + $4 + " )"
            $sdlcLSOperLastFailFRMRInfo = $5
            $sdlcLSOperLastFailCtrlIn = $6
            $sdlcLSOperLastFailCtrlOut = $7
            $sdlcLSOperLastFailREPLYTOs = $8

            @AlertGroup = "SDLC Link Station Status Change"
            $ifIndex = extract($OID3, "\.([0-9]+)\.[0-9]+$")
            $sdlcLSAddress = extract($OID3, "\.([0-9]+)$")
            @AlertKey = "sdlcLSAdminEntry." + $ifIndex + "." + $sdlcLSAddress
  
            $OS_EventId = "SNMPTRAP-IETF-SNA-SDLC-MIB-sdlcLSStatusChange1"
            switch ($1)
            {
                case "1": ### discontacted
                    $FailCause = lookup($4, sdlcLSOperLastFailCause)
                    $SEV_KEY = $OS_EventId + "_discontacted"
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                    switch ($2)
                    {
                        case "1": ### inactive
                            @Summary = "SDLC Link Station Administratively Inactive: FailCause = " + $FailCause
                        case "2": ### active
                            @Summary = "SDLC Link Station Discontacted: FailCause = " + $FailCause
                        default:
                    }
                case "2": ### contactPending
                    switch ($2)
                    {
                        case "1": ### inactive
                            @Summary = "SDLC Link Station Contact Pending, Administratively Inactive"
                            $SEV_KEY = $OS_EventId + "_contactPending_inactive"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### active
                            @Summary = "SDLC Link Station Contact Pending, Administratively Active"
                            $SEV_KEY = $OS_EventId + "_contactPending_active"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            @Summary = "SDLC Link Station Contact Pending, Administratively Unknown"
                            $SEV_KEY = $OS_EventId + "_contactPending_unknown"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                case "3": ### contacted
                    @Summary = "SDLC Link Station Contacted"
                    $SEV_KEY = $OS_EventId + "_contacted"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                case "4": ### discontactPending
                    $FailCause = lookup($4, sdlcLSOperLastFailCause)
                    switch ($2)
                    {
                        case "1": ### inactive
                            @Summary = "SDLC Link Station Discontact Pending, Administratively Inactive: FailCause = " + $FailCause
                            $SEV_KEY = $OS_EventId + "_discontactPending_inactive"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        case "2": ### active
                            @Summary = "SDLC Link Station Discontact Pending, Administratively Active: FailCause = " + $FailCause
                            $SEV_KEY = $OS_EventId + "_discontactPending_active"
                            $DEFAULT_Severity = 3
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                        default:
                            @Summary = "SDLC Link Station Discontact Pending, Administratively unknown: FailCause = " + $FailCause
                            $SEV_KEY = $OS_EventId + "_discontactPending_unknown"
                            $DEFAULT_Severity = 2
                            $DEFAULT_Type = 1
                            $DEFAULT_ExpireTime = 0
                    }
                default:
                    @Summary = "SDLC Link Station Unknown"
                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

            }
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Type + " " + $3 + " " + $4 + " " + @Agent + " " + @Manager

        default:
        
            @Summary = "Unknown specific trap number (" + $specific-trap + ") received for enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + $enterprise + " " + $generic-trap + " " + $specific-trap + " " + @Agent + " " + @Manager
            details($*)
    }

##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, IETF-SNA-SDLC-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, IETF-SNA-SDLC-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-SNA-SDLC-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-SNA-SDLC-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... IETF-SNA-SDLC-MIB.include.snmptrap.rules >>>>>")

