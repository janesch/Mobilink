/****************************************************************************
This policy demonstrates how to do an SNMP GET operation on a bunch of OIDs 
together using the SNMPGetAction module.

NOTE: Make sure the action modules defined for this snmpdsa are
      installed by running the script in IMPACT_HOME/dsa/snmpdsa/bin dir.
      Refer to the doc for more info on this. 

Explaination of the parameters for the SNMPGetAction module:
------------------------------------------------------------
 TypeName: The name of the type on which the authentication parameters are set.
 HostId: The hostId on which the SNMP agent is running.
 Port: The port number on which the agent is running. OPTIONAL.
       Default 161. It is of typeInteger.
 VarIdList: An array of OIDs of the variables to GET. Each OID variable 
            is assumed to be an instance OID (like '.0' added for example).
 Community: The read community string. OPTIONAL. Default value is public.
 Timeout: The time to wait for a response. OPTIONAL. Its of type Integer.
 Version: The SNMP protocol version. OPTIONAL. Possible values are 1 or 2 
          or 3. Default is 1.
 UserId: The userId for authentication. NEEDED for SNMPv3.
 AuthProtocol: The protocol for SNMPv3 authentication. OPTIONAL. Possible 
               values are: MD5_AUTH, SHA_AUTH, NO_AUTH. Default is NO_AUTH.
 AuthPassword: The password for SNMPv3 authentication. OPTIONAL.
 PrivPassword: The password for SNMPv3 encryption. OPTIONAL.
 ContextId: The context id for SNMPv3 authorization. OPTIONAL.
 ContextName: The context name for SNMPv3 authorization. OPTIONAL

Explaination of the return values of the SnmpGetAction module:
--------------------------------------------------------------
 ValueList: An array of values of the variables in the VarIdList after 
            GET operation.
 ErrorString: Will describe the error in case the GET failed. Else will 
              be an empty string.

HowToRun this policy:
---------------------
1) Make sure the agent is running on the proper portId and with proper
   authentication parameters(community strings, userId etc). Change the
   values in the Data Source or Action Module to match the one in the agent.

2) Add a runtime variable called TypeName.

3) Then do a trigger to execute this policy.

************************************************************************/

StartTime = LocalTime(GetDate(), "HH:mm:ss");
log("*** Starting SNMPGetActionTest at " + StartTime + " ***");

/* Fill all the parameters needed for the SNMPGetActionTest action */
/* HostInfo. Make sure it matches the one in Agent */
HostId = @HostId;
Port = 161;
Community = "public";
Timeout = 15;
Version = 1;

/* An array of OIDs. Note that they should be instance OIDs */
VarIdList =  {".1.3.6.1.2.1.1.5.0", ".1.3.6.1.2.1.1.6.0"};

/* SNMPv3 related parameters. */
UserId = "netcool";
AuthProtocol = "MD5_AUTH";
AuthPassword = "suresh";
ContextId = "ctx";
ContextName = "";
PrivPassword = "";

SnmpGetAction(TypeName, HostId, Port, VarIdList, Community, Timeout, Version, UserId, AuthProtocol, AuthPassword, PrivPassword, ContextId, ContextName);

log("** DisplayingGetActionResults: **");
log("ValueList[0] = " + ValueList[0]);
log("ValueList[1] = " + ValueList[1]);
log("ErrorString = " + ErrorString);

EndTime = LocalTime(GetDate(), "HH:mm:ss");
log("*** Done with SNMPGetActionTest at " + EndTime + " ***");
