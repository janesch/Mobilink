###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    IETF-BGP4-MIB.include.snmptrap.rules 3.1
#    2005/03/06 Robert Cowart
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  IETF-BGP4-MIB
#
###############################################################################

case ".1.3.6.1.2.1.15"|".1.3.6.1.2.1.15.7": ### Border Gateway Protocol including ver. 4 (BGP4) - Traps from RFC1269-MIB and BGP4-MIB

    log(DEBUG, "<<<<< Entering... IETF-BGP4-MIB.include.snmptrap.rules >>>>>")

    @Agent = "IETF-BGP4-MIB"
    @Class = "40086"
    
    $OPTION_TypeFieldUsage = "3.6"

    switch($specific-trap)
    {
        case "1"|"2":

            ##########
            # Variable bindings as defined in BGP4-MIB:
            #
            #   $1 = bgpPeerLastError
            #   $2 = bgpPeerState
            # Variable bindings as defined in RFC1269-MIB:
            #
            #   $1 = bgpPeerRemoteAddr
            #   $2 = bgpPeerLastError
            #   $3 = bgpPeerState
            ##########

            if(regmatch($1, ".*\.2636\.1\.1\.1\.2\..*")) ### BGP SNMPv2 Trap from Juniper JUNOS
            {
                @Agent = "IETF-BGP-Juniper " + lookup(extract($1, "\.([0-9]+)$"), juniperProducts)
                @Class = "40200"
                
                $snmpTrapEnterprise = $1
                $1 = $2
                $2 = $3
                $bgpPeerRemoteAddr = extract($OID3, "\.([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)$")
            }
            else if(regmatch($OID1, "^1\.3\.6\.1\.2\.1\.15\.3\.1\.7.*")) ### Trap as defined in RFC1269-MIB
            {
                $bgpPeerRemoteAddr = $1
                $1 = $2
                $2 = $3
            }
            else ### Trap as defined in BGP4-MIB
            {
                $bgpPeerRemoteAddr = extract($OID2, "\.([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+)$")
            }    
            
            $bgpPeerLastError = $1
            $bgpPeerState = lookup($2, bgpPeerState) + " ( " + $2 + " )"
            
            if(exists($snmpTrapEnterprise))
            {
                details($snmpTrapEnterprise,$bgpPeerLastError,$bgpPeerState,$bgpPeerRemoteAddr)
            }
            else
            {
                details($bgpPeerLastError,$bgpPeerState,$bgpPeerRemoteAddr)
            }
            
            switch($specific-trap)
            {
                case "1":
                    $OS_EventId = "SNMPTRAP-IETF-BGP4-MIB-bgpEstablished"
                case "2":
                    $OS_EventId = "SNMPTRAP-IETF-BGP4-MIB-bgpBackwardTransition"
                default:
                    $OS_EventId = "SNMPTRAP-IETF-BGP4-MIB-bgpBackwardTransition"
            }
                
            @AlertGroup = "BGP Peer Status"
            @AlertKey = "bgpPeerEntry." + $bgpPeerRemoteAddr
            switch($2)
            {
                case "1": ### idle
                    @Summary = "BGP Peer Connection Idle"

                    $SEV_KEY = $OS_EventId + "_idle"
                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

                case "2": ### connect
                    @Summary = "BGP Peer Connection Connected"

                    $SEV_KEY = $OS_EventId + "_connect"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "3": ### active
                    @Summary = "BGP Peer Connection Active"

                    $SEV_KEY = $OS_EventId + "_active"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "4": ### opensent
                    @Summary = "BGP Peer Connection Open Sent"

                    $SEV_KEY = $OS_EventId + "_opensent"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "5": ### openconfirm
                    @Summary = "BGP Peer Connection Open Confirmed"

                    $SEV_KEY = $OS_EventId + "_openconfirm"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 12
                    $DEFAULT_ExpireTime = 0

                case "6": ### established
                    @Summary = "BGP Peer Connection Established"

                    $SEV_KEY = $OS_EventId + "_established"
                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0

                default:
                    @Summary = "BGP Peer Connection Status Unknown"

                    $SEV_KEY = $OS_EventId + "_unknown"
                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0

            }
            @Summary = @Summary + "  ( BGP Peer: " + $bgpPeerRemoteAddr + " )"
            
            switch($OPTION_StateBasedCorr)
            {
                case "1":
                    @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + @Agent + " " + @Manager
                default:
                    @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " + $specific-trap + " " + $2
            }
 
        default:

            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }
    
##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, IETF-BGP4-MIB_sev)
}
else
{
    [$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, IETF-BGP4-MIB_sev)
}
include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-BGP4-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/IETF/IETF-BGP4-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... IETF-BGP4-MIB.include.snmptrap.rules >>>>>")
