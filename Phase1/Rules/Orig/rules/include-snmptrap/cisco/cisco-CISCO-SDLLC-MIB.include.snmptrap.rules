###############################################################################
#
#    Licensed Materials - Property of IBM
#
#    (C) Copyright IBM Corp. 2006
#    All Rights Reserved
#
#    cisco-CISCO-SDLLC-MIB.include.snmptrap.rules 1.0
#    2004/03/24 Robert Cowart
#
###############################################################################
###############################################################################
#
# 1.0 - Initial Release.
#
#        Compatible with:
#
#          -  Netcool/Omnibus 3.x and 7
#          -  Netcool Rules File Standards (MUSE-STD-RF-02, July 2002)
#
#          -  CISCO-SDLLC-MIB
#
###############################################################################

case ".1.3.6.1.4.1.9.9.28.2": ### Cisco SDLLC - Notifications from CISCO-SDLLC-MIB

    log(DEBUG, "<<<<< Entering... cisco-CISCO-SDLLC-MIB.include.snmptrap.rules >>>>>")
 
    @Agent = "Cisco-SDLLC"
    @Class = "40057"
    
    $OPTION_TypeFieldUsage = "3.6"
    
    switch ($specific-trap)
    {
        case "1": ### convSdllcPeerStateChangeNotification

            ##########
            # $1 = convSdllcAddrState 
            ##########
      
            $convSdllcAddrState = lookup($1, convSdllcAddrState) + " ( " + $1 + " )"
            $ifIndex = extract($OID1, "\.([0-9]+)\.[0-9]+$")
            $convSdllcAddrSdlcAddr = extract($OID1, "\.([0-9]+)$")
        
            $OS_EventId = "SNMPTRAP-cisco-CISCO-SDLLC-MIB-convSdllcPeerStateChangeNotification"             

            @AlertGroup = "SDLLC Peer Status"
            @AlertKey = "convSdllcAddrEntry." + $ifIndex + $convSdllcAddrSdlcAddr

            switch($1) ### convSdllcAddrState
            {
                case "1": ### disconnected - session disconnected 
                    $SEV_KEY = $OS_EventId + "_disconnected"
                    @Summary = "SDLLC Connection Disconnected"

                    $DEFAULT_Severity = 4
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "2": ### sdlcDisconnecting - disconnect pending SDLC side
                    $SEV_KEY = $OS_EventId + "_sdlcDisconnecting"
                    @Summary = "SDLLC Connection Disconnecting"  

                    $DEFAULT_Severity = 3
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "3": ### sdlcPriConnecting - connect pending SDLC primary side
                    $SEV_KEY = $OS_EventId + "_sdlcPriConnecting"
                    @Summary = "SDLLC Connection Pending, SDLC Primary Side"  

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "4": ### netDisconnecting - disconnect pending network side
                    $SEV_KEY = $OS_EventId + "_netDisconnecting"
                    @Summary = "SDLLC Connection Disconnect Pending, Network Side" 

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "5": ### netConnecting - connect pending network side
                    $SEV_KEY = $OS_EventId + "_netConnecting"
                    @Summary = "SDLLC Connection Pending, Network Side"  

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "6": ### sdlcSecConnecting - connect pending SDLC secondary side
                    $SEV_KEY = $OS_EventId + "_sdlcSecConnecting"
                    @Summary = "SDLLC Connection Pending, SDLC Secondary Side"  

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
                case "7": ### connected - session connected
                    $SEV_KEY = $OS_EventId + "_connected"
                    @Summary = "SDLLC Connection Connected" 

                    $DEFAULT_Severity = 1
                    $DEFAULT_Type = 2
                    $DEFAULT_ExpireTime = 0
                default:
                    $SEV_KEY = $OS_EventId + "_unknown"
                    @Summary = "SDLLC Connection State Unknown"

                    $DEFAULT_Severity = 2
                    $DEFAULT_Type = 1
                    $DEFAULT_ExpireTime = 0
            }
            @Identifier = @Node + " " + @AlertKey + " " + @AlertGroup + " " + $DEFAULT_Type + " " + @Agent + " " + @Manager + " " +  $specific-trap + " " + $1

            details($convSdllcAddrState,$ifIndex,$convSdllcAddrSdlcAddr)

        default:
        
            @Summary = "Unknown Specific Trap Number (" + $specific-trap + ") Received for Enterprise " + $enterprise
            @Severity = 1
            @Identifier = @Node + " " + @Agent + " " + @Manager + " " + $enterprise + " " + $generic-trap + " " + $specific-trap
            details($*)
    }

##########
# Handle Severity via Lookup.
##########

if(exists($SEV_KEY))
{
[$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($SEV_KEY, cisco-CISCO-SDLLC-MIB_sev)
}
else
{
[$OS_Severity,$OS_Type,$OS_ExpireTime] = lookup($OS_EventId, cisco-CISCO-SDLLC-MIB_sev)
}

include "$NC_RULES_HOME/include-common/AssignSev.include.common.rules"

##########
# End of Severity via Lookup.
##########

##########
# Enter "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-SDLLC-MIB.adv.include.snmptrap.rules"
include "$NC_RULES_HOME/include-snmptrap/cisco/cisco-CISCO-SDLLC-MIB.user.include.snmptrap.rules"

##########
# End of "Advanced" and "User" includes.
##########

include "$NC_RULES_HOME/include-common/load_include.rules"

log(DEBUG, "<<<<< Leaving... cisco-CISCO-SDLLC-MIB.include.snmptrap.rules >>>>>")
